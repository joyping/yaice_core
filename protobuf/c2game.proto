syntax="proto3";
import "p_enum.proto";
import "p_struct.proto";
package c2game;
option java_package = "cn.gyyx.proto.protobuf";
option java_outer_classname = "c2game";
option optimize_for = SPEED;


message c2g_gm_command{
	string command=1;
	repeated string params=2;
}

//推游戏逻辑错误
message g2c_notify_common_error {
    //错误码
    error_code_type errCode = 1;
}

//客户端从auth返回http消息后给客户端发送的第一条协议
message c2g_register{
}

message c2g_sync_time
{
	string client_time=1;
}

message g2c_sync_time_result
{
	bool success=1;
	string client_time=2;
	string sr_cur_time=3;
}


message c2g_ping
{
}


message c2g_sync_role_data
{
	
}

message g2c_sync_role_data_result {
     string playerName = 1;
     //玩家头像
     int32 role_avatar = 2;
	 int32 vip_lv = 3;
	 int32 vip_exp = 4;
	 //荣誉等级
     int32 honorLv = 5;
	 //荣誉经验
     int32 honorExp = 6;
	 //战斗力
	 int64 fight = 7;
	 //总击杀数
	 int64 killCnt = 8;
     //玩家资源信息
     repeated res_num_item resInfo = 9;
     //已激活区域ID SET
     repeated int32 activateAreaIdSet = 10;
     //已开拓区域ID SET
     repeated int32 openAreaIdSet = 11;
     //建筑列表
     repeated city_building_item buildingItem = 12;
     //军队信息
     repeated warrior_item warriorItem = 13;
	 //训练士兵队列信息
	 train_warrior trainWarrior = 14;
	 //医院伤兵信息
	 repeated warrior_item woundsItem = 15;
	 //医院治疗队列信息
	 hospital_treat_queue treatQueue = 16;
	 //研究院信息
	 research_queue researchQueue = 17;
	 //锻造队列信息
	 forge_equipment_queue forgeQueue = 18;
	 //庇护所队列信息
	 sanctuary_queue sanctuaryQueue = 19;
     //阵型
     int32 formation = 20;
     repeated hero_info heros = 21;//玩家已经拥有的英雄列表
	 //领主id
	 int32 lordId  = 22;
}

//推玩家等级经验变化
message g2c_lord_level_changed{
	int32 level = 1;
	//目前经验
	int32 exp = 2;
}
//推玩家总战力变化
message g2c_notify_fight_changed {
    int64 totalFight = 1;
}
//推送玩家杀敌数变化
message g2c_player_kill_count_changed{
	int64 killCnt = 1;
}

//推数值类型资源数量
message g2c_sync_value_res_num {
    repeated res_num_item resItem = 1;
}

//请求操作队列项已完成
message c2g_operate_queue_item_over {
    operate_queue_item_type type = 1;
    //建筑GUID
    int64 buildingGuid = 2;
}

//通知操作队列项已完成
message g2c_operate_queue_item_over {
    operate_queue_item_type type = 1;
    //建筑GUID
    int64 buildingGuid = 2;
}
//通知buff信息
message g2c_buff_list {
    repeated buff_item items = 1;
}

//------------------立刻完成队列 start------------------
//请求立刻完成队列中的操作项
message c2g_immediately_finish_queue_item {
    //加速项
    accelerate_goods_args accelerateArgs = 1;
    //使用免费加速
    bool free = 2;
}
//通知立刻完成队列中的操作项OK
message g2c_immediately_finish_queue_item_ok {
    //加速项
    accelerate_goods_args accelerateArgs = 1;
    //使用免费加速
    bool free = 2;
}
//------------------立刻完成队列 end------------------

//------------------城建 start------------------

//客户端请求造建筑
message c2g_create_building {
    //建筑类别
    city_building_type buildingType = 1;
    float posX = 2;
    float posY = 3;
    float posZ = 4;
    //扣除钻石并直接完成
    bool usePebble = 5;
}
//通知造建筑成功
message g2c_create_building_ok {
    //新造出的建筑
    city_building_item newbuilding = 1;
}

//客户端请求取消造建筑
message c2g_cancel_create_building {
    int64 buildingGuid = 1;
}
//通知取消造建筑成功
message g2c_cancel_create_building_ok {
    int64 cancelBuildingGuid = 1;
}

//客户端请求升级建筑
message c2g_upgrade_building {
    int64 buildingGuid = 1;
    //扣除钻石并直接完成
    bool usePebble = 2;
}
//通知升级建筑成功
message g2c_upgrade_building_ok {
    int64 buildingGuid = 1;
    //完成升级时间戳
    int64 upgradeEndTimeMillis = 2;
    //升级成功后的等级
    int32 level = 3;
}

//客户端请求取消升级建筑
message c2g_cancel_upgrade_building {
    int64 buildingGuid = 1;
}
//通知取消升级建筑成功
message g2c_cancel_upgrade_building_ok {
    int64 cancelBuildingGuid = 1;
    //取消升级后的建筑等级
    int32 level = 2;
}

//推加速建筑成功
message g2c_accelerate_building_ok {
    int64 buildingGuid = 1;
    //加速成功后，新的结束时间戳
    int64 newEndTimeMillis = 2;
    //操作类型
    building_operate_type operateType = 3;
}

//客户端请求拆除建筑
message c2g_delete_building {
    int64 buildingGuid = 1;
    //扣除钻石并直接完成
    bool usePebble = 2;
}
//通知拆除建筑成功
message g2c_delete_building_ok {
    int64 buildingGuid = 1;
    //完成拆除时间戳
    int64 deleteEndTimeMillis = 2;
}

//客户端请求取消拆除建筑
message c2g_cancel_delete_building {
    int64 buildingGuid = 1;
}
//取消拆除建筑成功
message g2c_cancel_delete_building_ok {
    int64 buildingGuid = 1;
}

//客户端移动建筑
message c2g_move_building {
    int64 buildingGuid = 1;
    //移动后的位置
    float posX = 2;
    float posY = 3;
    float posZ = 4;
}
//通知移动建筑成功
message g2c_move_building_ok {
    int64 buildingGuid = 1;
    //移动后的位置
    float posX = 2;
    float posY = 3;
    float posZ = 4;
}

//-------区域-------

//客户端请求解锁区域
message c2g_deblocking_area {
    int32 areaId = 1;
}
//通知解锁区域成功
message g2c_deblocking_area_ok {
    int32 newAreaId = 1;
}

//------------------城建 end------------------

//------------------兵营start------------------

//训练士兵请求
message c2g_train_warrior_request{
	//训练军队信息
	warrior_item item     = 1;
	//是否立刻完成  
	 bool finishCurrent    = 2;
}
//训练士兵请求返回
message g2c_train_warrior{
	//训练军队信息
	warrior_item  item  =  1; 
	//训练完毕时间戳
	int64 timeStamp     =  2;  
}
//取消训练请求
message c2g_cancel_train_request{
}
//取消训练返回
message g2c_cancel_train{
	//训练军队信息
	warrior_item item = 1; 
}
//遣散士兵请求
message c2g_diss_warrior_request{
	//遣散军队信息
	warrior_item item = 1; 
}
//遣散士兵返回
message g2c_diss_warrior{
	//减少的军队信息
	warrior_item item = 1; 
}
//使用加速物品加速训练队列 返回新的时间戳
message g2c_accelerate_train{
	//加速后的时间戳
	int64 timeStamp = 1;
}
//推送主城士兵数量信息
message g2c_town_warrior_num{
	repeated warrior_item item = 1;
}
//------------------兵营end------------------

//------------------背包start------------------
//查询背包
message c2g_query_bag_info {
    //页签类型
    goods_bag_type type = 1;
    //版本号
    int32 version = 2;
}
//通知客户端背包信息
message g2c_sync_bag_info {
    //页签类型
    goods_bag_type type = 1;
    //版本号
    int32 version = 2;
    //物品信息列表
    repeated goods_info items = 3;
}

//通知客户端背包某页签多项物品信息，有物品添加到背包或从背包删除时推
message g2c_sync_bag_items_info {
    //页签类型
    goods_bag_type type = 1;
    //加入背包、更新多个物品信息
    repeated goods_info addOrUpdateItems = 2;
    //删除的物品列表
    repeated goods_info removeItems = 3;
}

//使用多个物品
message c2g_use_multi_bag_goods {
    //使用物品参数项列表
    repeated use_goods_item goodsItems = 1;
}
//通知使用多个物品成功
message g2c_use_multi_bag_goods_ok {
    //使用成功的物品列表
    repeated goods_info useItems = 1;
}

//通知装备背包当前容量
message g2c_equip_bag_capacity {
    int32 capacity = 1;
}
//------------------背包end------------------

//------------------商店start----------------
//购买物品
message c2g_buy_goods{
	//商店类型
	store_type storeType = 1;  
	//物品ID
	int32 	itemID    	  = 2;	
	//购买数量
	int32	count         = 3;	
}
//购买物品返回
message g2c_buy_goods{
	//商店类型
    store_type storeType = 1;  
	//物品ID
    int32 	itemID        = 2;
	//购买数量
    int32	count     	  = 3;	
}
//购买物品立刻使用
message c2g_buy_goods_use_immediately{
	//商店类型
	store_type storeType = 1;
	//物品参数
	use_goods_item goodsItem = 2;
}
//购买物品立刻使用返回
message g2c_buy_goods_use_immediately{
	//商店类型
	store_type storeType = 1;
	//物品ID
	int32 itemID = 2;
	//物品数量
	int32 count = 3;
}
//------------------商店end------------------


//------------------医院start----------------
//医院伤兵信息
message g2c_add_wounded_to_hospital{
	//医院所有伤兵信息
	repeated warrior_item item = 1;
}
//治疗士兵
message c2g_treat_wounded_warrior{
	//治疗士兵信息
	repeated warrior_item item   	= 1;	
	//是否使用钻石立刻完成
	bool finishCurrent    = 2;	
}
//治疗士兵返回
message g2c_treat_wounded_warrior {
    //治疗完成时间戳
    int64 timeStamp = 1;
    //治疗士兵信息
    repeated warrior_item item = 2;
}
//取消治疗士兵
message c2g_cancel_treat_warrior{
	//治疗士兵信息
	repeated warrior_item item = 1;	
}
//取消治疗士兵返回
message g2c_cancel_treat_warrior{
	//医院伤兵信息
	repeated warrior_item item	= 1;	
}
//使用加速物品加速治疗队列 返回新的时间戳
message g2c_accelerate_treat{
	//加速后的时间戳
	int64 timeStamp = 1;
}
//------------------医院end------------------

//------------------城墙start------------------

//请求城墙信息
message c2g_city_wall_info {
}
//推城墙信息,城墙被攻击后也推
message g2c_sync_city_wall_info {
    //城墙当前血量
    int32 hp = 1;
    int32 maxHp = 2;
    int32 def = 3;
    //城墙结束燃烧时间戳
    int64 endBurnMill = 4;
    //灭火后，城墙HP恢复到满血的时间戳
    int64 restoreHpFullTime = 5;
    //箭塔等级
    int32 towerLevel = 6;
    //箭塔升级结束时间戳
    int64 upTowerEndTime = 7;
}

//使用钻石结束燃烧状态
message c2g_finish_fire_state{
}

//通知城墙耐久度
message g2c_sync_wall_hp {
    int32 hp = 1;
    int32 maxHp = 2;
}

//使用物品加速回血，通知客户端新的时间戳
message g2c_wall_accelerate_hp_restore {
    int64 newRestoreFullHpTime = 1;
    int32 curHp = 2;
}

//----箭塔----
//请求升级箭塔
message c2g_upgrade_arrow_tower {
    //扣除钻石并直接完成
    bool usePebble = 2;
}
//通知升级箭塔ok
message g2c_upgrade_arrow_tower_ok {
    //完成升级时间戳
    int64 upgradeEndTimeMillis = 2;
    //升级成功后的等级
    int32 level = 3;
}

//推加速升级箭塔
message g2c_accelerate_upgrade_arrow_tower {
    //加速成功后，新的结束时间戳
    int64 newEndTimeMillis = 2;
}

//客户端请求取消升级箭塔
message c2g_cancel_upgrade_arrow_tower {
}
//通知取消升级箭塔ok
message g2c_cancel_upgrade_arrow_tower_ok {
    //取消升级后的等级s
    int32 level = 2;
}

//------------------城墙end------------------


//------------------研究院start----------------
//客户端请求研究
message c2g_research_item {
	//研究类型 
	int32 type = 1;
	//是否使用钻石立刻完成
	bool isUseDiamond = 2;
}
//请求研究返回
message g2c_research_item{
	//研究大类的id
	int32 classId =1;
	//研究类型对应的表数据id
	int32 researchTableId = 2;
	//研究完成时间戳
	int64 timeStamp = 3;
}
//取消研究
message c2g_cancel_research{
	//队列研究类型
	int32 type = 1;
}
//取消研究返回
message g2c_cancel_research{
	//取消研究队列类型
	int32 type = 1;
}
//使用加速物品加速研究 返回新的时间戳
message g2c_accelerate_research{
	int64 timeStamp = 1;
}

//------------------研究院end------------------

//------------------军械所start--------------------

//请求打开军械UI面板信息
message c2g_armament_ui_info {
}
//通知军械UI面板信息
message g2c_armament_ui_info {
    repeated armament_item items = 1;
    //升级完成时间
    int64 endUpgradeTime = 2;
    //当前正在升级的军械类型
    armament_type curUpgradeType = 3;
}

//请求升级军械
message c2g_upgrade_armament {
    //军械类型
    armament_type type = 1;
    //扣除钻石并直接完成
    bool usePebble = 2;
}
//通知升级军械ok
message g2c_upgrade_armament_ok {
    //军械类型
    armament_type type = 1;
    //完成升级时间戳
    int64 upgradeEndTimeMillis = 2;
    //升级成功后的等级
    int32 level = 3;
}

//推加速升级军械
message g2c_accelerate_upgrade_armament {
    //加速成功后，新的结束时间戳
    int64 newEndTimeMillis = 1;
}

//客户端请求取消升级军械
message c2g_cancel_upgrade_armament {
    //军械类型
    armament_type type = 1;
}
//通知取消升级军械ok
message g2c_cancel_upgrade_armament_ok {
    //军械类型
    armament_type type = 1;
    //取消升级后的等级
    int32 level = 2;
}

//------------------军械所end--------------------


//------------------大地图start----------------
message c2g_join_map{
	
}

message g2c_join_map_result{
	float cameraX=1;
	float cameraY=2;
}

message c2g_leave_map{
	
}

message g2c_leave_map_result{
}

message c2g_ping_map{
}

message c2g_change_camera_position{
	float cameraX=1;
	float cameraY=2;
}

message g2c_sync_map_unit_info{
	//城镇
	repeated map_unit_town towns=1;
	//军队行军
	repeated map_unit_soldiers soldiers=2;
	//地面上的线路信息
	repeated map_unit_line lines=3;
    //资源点
    repeated map_unit_resource resources = 4;
    //野怪
    repeated map_unit_monster monsters = 5;
	//营地
	repeated map_unit_camp camps = 6;
}

message g2c_remove_map_unit{
	repeated int64 unitGuids=1;
}

//请求派遣士兵攻打主城
message c2g_request_troops_attack_town {
    //攻击目标的GUID
    int64 playerGuid = 1;
    //士兵信息
    repeated warrior_item warriorItems = 2;
    //军械信息
    armament_item armamentItem = 3;
}
//同步军队的状态信息
message g2c_sync_soldiers_state{
	map_unit_soldiers sInfo=1;
}

//同步怪的状态信息
message g2c_sync_monster_state{
    map_unit_monster monsterInfo=1;
}

//----资源点----
//请求采集资源点
message c2g_request_collect_resource {
    //资源点GUID
    int64 resGuid = 1;
    //小兵信息
    repeated warrior_item warriorItems = 2;
    //军械信息
    armament_item armamentItem = 3;
}
//请求撤回正在采集的军队
message c2g_back_collecting_soldiers {
    int64 soldiersGuid = 1;
}
//请求侦查
message c2g_spy_action{
	//侦查类型
	spy_type spyType = 1;
	//侦查地点guid
	int64 spyGuid = 2;
}
//------------------大地图end------------------

//------------------邮件start------------------

// 客户端请求该类型的所有邮件信息
message c2g_mail_list_info {
}
//通知该类型的邮件列表
message g2c_mail_list_info {
    //邮件信息
    repeated mail_item mailItems = 2;
}


//玩家发送一封邮件
message c2g_player_send_mail {
    //接收者GUID
    int64 receiverGuid = 1;
    //玩家发送标题
    string title = 2;
    //玩家发送内容
    string content = 3;
}
//玩家请求回复私聊邮件
message c2g_reply_player_chat_mail {
    //回复邮件GUID
    int64 replyMailGuid = 1;
    string content = 2;
    //回复邮件的组
    int64 group = 3;
}
//通知客户端收到一封新邮件
message g2c_receive_new_mail {
    mail_item mail = 2;
}


// 客户端请求某个邮件具体内容
message c2g_mail_item_detail {
    mail_type type = 1;
    int64 mailGuid = 2;
}
//通知某个邮件具体内容
message g2c_mail_item_detail_ok {
    mail_type type = 1;
    mail_item_detail mailDetail = 2;
}

// 客户端请求批量收藏邮件
message c2g_batch_collect_mail {
    mail_type type = 1;
    repeated int64 mailGuids = 2;
    // 邮件组
    int64 group = 3;
}
//通知批量收藏邮件ok
message g2c_batch_collect_mail_ok {
    mail_type type = 1;
    repeated int64 mailGuids = 2;
    // 邮件组
    int64 group = 3;
}

//请求批量标记邮件已读
message c2g_batch_flag_mail_already_read {
    mail_type type = 1;
    repeated int64 mailGuids = 2;
    // 邮件组
    int64 group = 3;
}
//通知批量标记邮件已读ok
message g2c_batch_flag_mail_already_read_ok {
    mail_type type = 1;
    repeated int64 mailGuids = 2;
    // 邮件组
    int64 group = 3;
}

//请求批量删除邮件
message c2g_batch_remove_mail {
    mail_type type = 1;
    repeated int64 mailGuids = 2;
    // 邮件组
    int64 group = 3;
}
//通知批量删除邮件ok
message g2c_batch_remove_mail_ok {
    mail_type type = 1;
    repeated int64 mailGuids = 2;
    // 邮件组
    int64 group = 3;
}

//------------------邮件end------------------

//------------------锻造厂start----------------
//锻造装备
message c2g_forging_equipment{
	//装备ID
	int32 equip_id = 1;
	//是否使用钻石立刻完成
	bool isUseDiamond = 2;
	//装备guid 判断进化还是新锻造
	int64 equipGuid = 3;
}
//锻造装备返回
message g2c_forging_equipment{
	//锻造装备ID
	int32 equip_id = 1;
	//锻造完成时间戳
	int64 timeStamp = 2;
	//装备guid 判断进化还是新锻造
	int64 equipGuid = 3;
}
//取消锻造装备
message c2g_cancel_forging_equipment{
}
//取消锻造装备返回
message g2c_cancel_forging_equipment{
	//锻造装备ID
	int32 equip_id = 1;
	//装备guid 判断进化还是新锻造
	int64 equipGuid = 2;
}
//宝石、战纹、材料合成、分解
message c2g_item_compound_restore{
	//合成 分解道具id
	int32 itemID = 1;
	//合成分解的数量
	int32 itemNum = 2;
	//操作类型 合成 或 分解
	item_operate_type operateType = 3;
}
//宝石、战纹、材料合成、分解 返回
message g2c_item_compound_restore{
	//道具id
	int32 itemID = 1;
	//合成分解的数量
	int32 itemNum = 2;
	//操作类型 合成 或 分解
	item_operate_type operateType = 3;
}
//使用加速物品加速锻造队列
message g2c_accelerate_forging{
	int64 timeStamp = 1;
}
//------------------锻造厂end------------------
//------------------玩家装备start--------------

//玩家穿、卸装备
message c2g_wear_remove_equipment{
	//装备guid
	int64 equip_guid = 1;
	//装备位置
	lord_equip_place equip_type = 2;
	//操作类型
	equip_operate_type operateType = 3;
}
message g2c_wear_remove_equipment{
	//装备guid
	int64 equip_guid = 1;
	//装备位置
	lord_equip_place equip_type = 2;
	//操作类型
	equip_operate_type operateType = 3;
    //装备id
    int32 equipId = 4;
}
//镶嵌宝石
message c2g_equip_inlay_gem{
	//镶嵌装备guid
	int64 equip_guid = 1;
	//宝石id
	int32 gem_id = 2;
	//镶嵌宝石位置
	gem_hole_place place = 3;
}
message g2c_equip_inlay_gem{
	//镶嵌装备guid
	int64 equip_guid = 1;
	//宝石id
	int32 gem_id = 2;
	//镶嵌宝石位置
	gem_hole_place place = 3;
}

//移除宝石
message c2g_equip_discharge_gem{
    //移除装备guid
    int64 equip_guid = 1;
    //宝石id
    int32 gem_id = 2;
    //移除宝石位置
    gem_hole_place place = 4;
}
//移除宝石OK
message g2c_equip_discharge_gem{
    //移除装备guid
    int64 equip_guid = 1;
    //宝石id
    int32 gem_id = 2;
    //移除宝石位置
    gem_hole_place place = 4;
}

//装备分解
message c2g_equip_resolve{
	//装备guid
	int64 equip_guid = 1;
}
message g2c_equip_resolve{
	//装备guid
	int64 equip_guid = 1;
	//装备ID
	int32 equipId = 2;
}

//请求套装界面信息
message c2g_request_suit_info{
}
//套装界面信息返回
message g2c_request_suit_info_result{
	//套装信息
	repeated equip_suit items = 1;
}

//请求某个具体套装信息
message c2g_request_one_suit_info{
	//套装guid
	int64 guid = 1;
}
//某个具体套装信息返回
message g2c_request_one_suit_info_result{
	//套装guid
	int64 guid = 1;
	//套装名字
	string name = 2;
	//装备信息
	repeated equip_pos_and_guid items = 3;
}

//套用某个套装
message c2g_use_suit{
	//套装guid
	int64 guid = 1;
}
//套用返回
message g2c_use_suit_result{
	//套装guid
	int64 guid = 1;
}

//玩家装备信息
message g2c_player_equipment_info{
	//装备guid and id
	repeated equip_guid_id items = 1;
}
//---------------玩家装备end------------------

//---------------庇护所start------------------
//请求添加士兵到庇护所
message c2g_add_soldiers_to_scanctuary{
	//是否储藏领主
	bool isHaveLord = 1;
	//储藏士兵信息
	repeated warrior_item warriorItem = 2;
	//藏兵时间（小时）
	int32 time = 3;
}
//添加士兵到庇护所返回
message g2c_add_soldiers_to_scanctuary{
	//是否储藏领主
	bool isHaveLord = 1;
	//储藏士兵信息
	repeated warrior_item warriorItem = 2;
	//储藏结束时间戳
	int64 endTimeStamp = 3;
}
//召回储藏的士兵及领主
message c2g_recall_soldiers{
}
//召回储藏的士兵及领主返回
message g2c_recall_soldiers{
	//是否储藏领主
	bool isHaveLord = 1;
	//储藏士兵信息
	repeated warrior_item warriorItem = 2;
}
//---------------庇护所end------------------

//---------------使馆start------------------
//请求对方使馆的容量
message c2g_ally_embassy_capacity{
	//盟友的guid
	int64 allyGuid = 1;
}
message g2c_ally_embassy_capacity{
	//盟友guid
	int64 allyGuid = 1;
	//对方使馆内可增援的数量
	int32 num = 2;
	//对方使馆总容量
	int32 totalCapacity = 3;
	//玩家位置
	float row = 4;
	float col = 5;
}

//主动增援盟友
message c2g_reinforce_ally{
	//盟友guid
	int64 allyGuid = 1;
	//士兵信息
	repeated warrior_item items = 2;
    // 集结防御,集结GUID
    int64 massDefenseGuid = 3;
}
//主动增援盟友返回
message g2c_reinforce_ally{
}

//通知增援的士兵到达(通知被增援的盟友)
message g2c_ally_reinforce_reach{
	//盟友guid
	int64 allyGuid = 1;
	//士兵信息
	repeated warrior_item items = 2;
}

//召回增援的部队
message c2g_recall_reinforce_army{
	//小兵guid
	int64 soldiersGuid = 1;
    // 集结防御,集结GUID
    int64 massDefenseGuid = 3;
}
//增援的部队返回 通知士兵的拥有者(主动召回士兵、盟友主动遣散士兵时推)
message g2c_reinforce_army_back_to_own{
	//小兵guid
	int64 soldiersGuid = 1;
	//士兵信息
	repeated warrior_item items = 2;
}

//增援部队返回 通知被增援的盟友
message g2c_reinforce_army_back_to_ally{
	//小兵guid
	int64 soldiersGuid = 1;
	//士兵信息
	repeated warrior_item items = 2;
}

//遣散使馆内的援军
message c2g_diss_reinforce_army{
}
//遣散使馆内的援军返回
message g2c_diss_reinforce_soldiers{
}

//请求使馆增援部队信息
message c2g_reinforce_army_info{
	
}
//同步使馆增援部队的信息
message g2c_syn_reinforce_army_info{
	//部队信息
	repeated reinforce_army items = 1;
}
//---------------使馆end--------------------
//---------------炼金所start-----------------
//请求炼金所信息
message c2g_alchemy_info{
}
//炼金所信息返回
message g2c_alchemy_info{
	//黑暗元素信息
	repeated alchemy_info infos = 1;
}

//鉴定黑暗元素
message c2g_identify_dark_element{
	//位置1,2..
	int32 position = 1;
	//黑暗元素ID
	int32 id = 2;
}
message g2c_indentify_dark_element{
	//位置
	int32 position = 1;
	//黑暗元素ID
	int32 id = 2;
	//结束时间戳
	int64 endTimeStamp = 3;
}

//打开鉴定完毕黑暗元素
message c2g_open_dark_element{
	//位置
	int32 position = 1;
	//黑暗元素ID
	int32 id = 2;
}
//打开鉴定完毕黑暗元素返回
message g2c_open_dark_element{
	//位置
	int32 position = 1;
	//黑暗元素ID
	int32 id = 2;
}

//删除黑暗元素
message c2g_remove_dark_element{
	//位置
	int32 position = 1;
	//黑暗元素ID
	int32 id = 2;
}
//删除黑暗元素返回
message g2c_remove_dark_element{
	//位置
	int32 position = 1;
	//黑暗元素ID
	int32 id = 2;
}
//---------------炼金所end--------------------
//---------------玩家天赋start------------------
//请求玩家天赋信息
message c2g_player_talent_info{
}
//玩家天赋信息返回
message g2c_player_talent_info{
	//天赋总点数
	int32 totalPoint = 1;
	//天赋点剩余数量
	int32 talentPoint = 2;
	//解锁的天赋信息
	repeated talent_type_lv items = 3;
}

//请求天赋记忆页信息
message c2g_talent_memeory_page_info{
}
//请求天赋记忆页信息返回
message g2c_talent_memeory_page_info_result{
	repeated talent_page_info items = 1;
}

//升级天赋
message c2g_upgrade_talent{
	//升级天赋的信息
	repeated upgrade_talent_info items = 1;
}
//升级天赋返回
message g2c_upgrade_talent{
	//升级天赋的信息 等级为升级后的等级
	repeated upgrade_talent_info items =1;
	//天赋点剩余数量
	int32 talentPoint = 2;	
}
//---------------玩家天赋end--------------------

//----------------市集start--------------------
//请求运输物资
message c2g_transport_resources{
	//盟友guid
	int64 allyGuid = 1;
	//资源数目
	repeated res_num_item items = 2;
}
//运输物资返回
message g2c_transport_resources_result{
	//盟友guid
	int64 allyGuid = 1;
	//资源数目
	repeated res_num_item items = 2;
}
//----------------市集end----------------------
//-----------------玩家信息start-------------------
//请求玩家信息
message c2g_player_info{
	//玩家guid
	int64 playerGuid = 1;
	//用户昵称
	string playerName = 2;
}
message g2c_player_info_result{
	//玩家guid
	int64 playerGuid = 1;
	//统御等级
	int32 level = 2;
	//vip等级
	int32 vipLevel = 3;
	//实力
	int64 fight = 4;
	//杀敌数
	int64 killCnt = 5;
	//联盟代号
	string factionCode = 6;
	//联盟内玩家昵称
	string factionNickName = 7;
	//联盟内阶级
	int32 factionLevel = 8;
	//装备信息
	repeated int32 equip_id = 9;
	//英雄id
	int32 hero_id = 10;
	//军阶
	int32 hero_rank = 11;
	//勋章
	int32 hero_medal = 12;
	//玩家名字
	string playerName = 13;
}
//-----------------玩家信息end---------------------
//-----------------行军队列信息start---------------
//请求行军队列信息
message c2g_march_queue_info{
}
//行军队列信息返回
message g2c_march_queue_info_result{
	repeated march_army_info items = 1;
}
//使用行军加速物品 行军的时间戳改变
message g2c_march_end_time_change{
	//士兵的guid
	int64 soldierGuid = 1;
	//到达的时间戳
	int64 endMillTime = 2;
}
//某一队列行军状态发生改变
message g2c_march_state_change{
	//行军队列信息
	march_army_info item = 1;
}
//-----------------行军队列信息end---------------
//-----------------哨塔start---------------------
//请求哨塔信息
message c2g_request_watchTower_info{
}
//哨塔信息返回
message g2c_watchTower_info_result{
	//哨塔信息
	repeated watchTower_soldier_info items = 1;
}

//请求军队具体信息
message c2g_request_army_info{
	//士兵guid
	int64 soldierGuid = 1;
}
//军队具体信息返回
message g2c_army_info_result{
	int64 soldierGuid = 1;
	march_map_type marchType = 2;
	int64 endMillTime = 3;
	string playerName = 4;
	string factionName = 5;
	repeated warrior_item warriorItems = 6;
	repeated hero_simple_info heroInfos = 7 ;
	//玩家主城坐标
	float row = 8;
	float col = 9;
	//守护神信息
}

//通知有士兵向玩家行军
message g2c_soldier_march_to_target_player{
	//士兵guid
	int64 soldierGuid = 1;
	//行军类型
	march_map_type marchType = 2;
	//开始时间
	int64 startMillTime = 3;
	//到达时间
	int64 endMillTime = 4;
}

//行军士兵到达或者返回
message g2c_soldier_march_arrive_target_player{
	//士兵guid
	int64 soldierGuid = 1;
}
//-----------------哨塔end----------------------

//-----------------驻扎start----------------------
//驻扎
message c2g_stationed_to_ally{
	//向盟友家驻扎 为0则驻扎营地(填写坐标)
	int64 playerGuid = 1;
	//坐标
	int32 row = 2;
	int32 col = 3;
	//英雄id
	repeated int32 heroId = 4;
	//士兵信息
	repeated warrior_item items = 5;
	//军械类型
	armament_type armamentType = 6;
}
//驻扎部队出发返回
message g2c_stationed_to_ally_result{
}

//召回驻扎的部队
message c2g_recall_stationed_army{
	//士兵guid
	int64 soldierGuid = 1;
}
//驻扎部队返回 (主动召回部队、被遣散部队时通知士兵的拥有者)
message g2c_stationed_army_back_tell_owner{
	//士兵guid
	int64 soldierGuid = 1;
}
//驻扎部队返回 (通知驻扎的盟友 驻扎部队离开)
message g2c_stationed_army_back_tell_ally{
	//士兵guid
	int64 soldierGuid = 1;
}

//-----------------驻扎end------------------------


//-----------------英雄start--------------------
//提升品质
message c2g_update_quality{
	int32 heroId = 1;//
}
//穿装备
message c2g_wear_equip{
	int32 heroId = 1;//
	int32 equipId = 2;//
}
//更新军阶
message c2g_update_soldiers_grade{
	int32 heroId = 1;//
}
//合成装备
message c2g_compose_equip{
	int32 equipId = 1;//
}
//合成装备
message g2c_compose_equip{
	int32 status = 1;//状态 0失败  1成功
}
//更新
message g2c_update_hero{
	hero_info hero = 1;//
	int32 type = 2;//类型  1：新增  2：更新
}
//请求碎片合成英雄
message c2g_compose_hero{
	int32 heroId = 1;//
}
//-----------------英雄end----------------------

//-----------------野外讨伐战start----------------------
//请求野怪详细信息
message c2g_request_monster_detail_info {
    int64 monsterGuid = 1;
}
//请求野怪详细信息
message g2c_sync_monster_detail_info {
    int64 monsterGuid = 1;
    int32 monsterType = 2;
    int32 monsterLv = 3;
    int64 hp = 4;
    int64 maxHp = 5;
    //连续攻击次数
    int32 comboAttackCnt = 6;
    //伤害加成
    int32 damageAddition = 7;
    //伤害加成结束时间戳
    int64 damageAdditionEndTime = 8;
}

//请求讨伐野怪
message c2g_attack_monster {
    int64 monsterGuid = 1;
    bool autoBattle = 2;
    repeated int32 heroIds = 3;
    int32 attackCnt = 4;
}

//请求讨伐野怪手动战斗
message c2g_attack_monster_manual_battle {
    int64 soldierGuid = 1;
}
message g2c_attack_monster_manual_battle_ok {
    int64 soldierGuid = 1;
}
//讨伐野怪等待超时，进入自动战斗
message g2c_attack_monster_auto_battle {
    int64 soldierGuid = 1;
}

//发送讨伐野怪手动战斗的结果给服务器
message c2g_sync_attack_monster_manual_battle_result {
    int64 monsterGuid = 1;
    int64 soldierGuid = 2;
    int64 hp = 4;
    // 有效伤害次数
    int32 damageCnt = 5;
}

//-----------------野外讨伐战end----------------------

//-----------------任务start--------------------------
//请求所有任务信息
message c2g_request_all_quest_info{
}
//推送所有任务信息
message g2c_all_quest_info{
	repeated one_quest_info items = 1;
}

//任务完成
message g2c_quest_complete{
	//任务id
	int32 questId = 1;
	//任务状态
	task_status status = 2;
}

//领取任务奖励
message c2g_receice_quest_award{
	//任务id
	int32 questId = 1;
}
//领取奖励返回
message g2c_receive_quest_award{
	//任务id
	int32 questId = 1;
}
//-----------------任务end----------------------------

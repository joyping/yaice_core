// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p_enum.proto

package c2game

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//错误码类型
type ErrorCodeType int32

const (
	//-----------------------common--------------------
	//资源不足
	ErrorCodeType_ect_res_not_enough ErrorCodeType = 0
	//未找到配置
	ErrorCodeType_ect_not_found_cfg ErrorCodeType = 2
	//操作项时间已结束
	ErrorCodeType_ect_time_late ErrorCodeType = 3
	//超过免费时长
	ErrorCodeType_ect_pass_free_time ErrorCodeType = 4
	//操作时间未到
	ErrorCodeType_ect_operate_time_not_reach ErrorCodeType = 5
	//领主达到最大等级
	ErrorCodeType_ect_lord_reach_max_level ErrorCodeType = 6
	//客户端传的参数非法
	ErrorCodeType_ect_client_arg_error ErrorCodeType = 7
	//服务器内部错误
	ErrorCodeType_ect_server_internal_error ErrorCodeType = 8
	//找不到该玩家
	ErrorCodeType_ect_player_not_found ErrorCodeType = 9
	// 没有此类型的队列
	ErrorCodeType_ect_not_have_the_type_queue ErrorCodeType = 10
	//-----------------------城建--------------------
	//区域未激活
	ErrorCodeType_ect_area_not_activate ErrorCodeType = 100
	//区域未开拓
	ErrorCodeType_ect_area_not_open ErrorCodeType = 101
	//建造队列已满
	ErrorCodeType_ect_building_queue_full ErrorCodeType = 102
	//前置建筑等级不足
	ErrorCodeType_ect_preBuild_level_not_enough ErrorCodeType = 103
	//建筑位置不合法
	ErrorCodeType_ect_building_pos_not_legal ErrorCodeType = 104
	//建筑不存在
	ErrorCodeType_ect_building_not_exist ErrorCodeType = 105
	//建筑配置不许拆除
	ErrorCodeType_ect_building_cfg_can_not_remove ErrorCodeType = 106
	//建筑不允许重复建造
	ErrorCodeType_ect_building_not_reBuild ErrorCodeType = 107
	//超了修建数量上限
	ErrorCodeType_ect_building_exceed_build_max_num ErrorCodeType = 108
	//已是最高等级
	ErrorCodeType_ect_building_yet_max_lv ErrorCodeType = 109
	//医院有伤兵不能拆除
	ErrorCodeType_ect_have_wounded_warrior_not_remove ErrorCodeType = 110
	//-----------------------兵营--------------------
	//兵营等级不足
	ErrorCodeType_ect_building_not_enougn ErrorCodeType = 120
	//训练士兵达到最大值
	ErrorCodeType_ect_train_warrior_reach_max_count ErrorCodeType = 121
	//正在训练士兵
	ErrorCodeType_ect_training_warrior ErrorCodeType = 122
	//遣散士兵不足
	ErrorCodeType_ect_diss_warrior_not_enough ErrorCodeType = 123
	//没有正在训练的士兵
	ErrorCodeType_ect_not_have_training_warrior ErrorCodeType = 124
	//士兵类型未解锁
	ErrorCodeType_ect_warrior_type_not_unlock ErrorCodeType = 125
	//-----------------------商店--------------------
	//商店类型不存在
	ErrorCodeType_ect_store_type_not_exist ErrorCodeType = 130
	//购买数量不合法
	ErrorCodeType_ect_store_purchase_count_not_illegal ErrorCodeType = 131
	//没有加入联盟
	ErrorCodeType_ect_store_not_add_alliance ErrorCodeType = 132
	//商店不出售此商品
	ErrorCodeType_ect_store_not_sell_the_item ErrorCodeType = 133
	//-----------------------物品--------------------
	//物品不能使用
	ErrorCodeType_ect_can_not_use_goods ErrorCodeType = 140
	//背包空间不足
	ErrorCodeType_ect_bag_space_not_enough ErrorCodeType = 141
	//-----------------------医院--------------------
	//伤兵数目不合法
	ErrorCodeType_ect_wounded_warrior_count_not_illegal ErrorCodeType = 150
	//没有医院
	ErrorCodeType_ect_not_exist_hospital ErrorCodeType = 151
	//有正在治疗的队列
	ErrorCodeType_ect_have_treating_queue ErrorCodeType = 152
	//添加伤兵数目失败
	ErrorCodeType_ect_add_wound_count_defeat ErrorCodeType = 153
	//没有正在治疗的队列
	ErrorCodeType_ect_not_have_treating_queue ErrorCodeType = 154
	//-----------------------研究院------------------
	//有正在研究的队列
	ErrorCodeType_ect_have_research_queue ErrorCodeType = 160
	//研究院等级不足
	ErrorCodeType_ect_research_level_not_encough ErrorCodeType = 161
	//前置研究未解锁
	ErrorCodeType_ect_pre_research_not_undeblocking ErrorCodeType = 162
	//没有正在研究的队列
	ErrorCodeType_ect_not_have_research_queue ErrorCodeType = 163
	//非法研究队列类型
	ErrorCodeType_ect_illegal_research_type ErrorCodeType = 164
	//该研究已在队列当中
	ErrorCodeType_ect_research_exist_queue ErrorCodeType = 165
	//研究到达最大级
	ErrorCodeType_ect_research_reach_max_level ErrorCodeType = 166
	//没有该研究物品
	ErrorCodeType_ect_not_have_research_item ErrorCodeType = 167
	//-----------------------研究院------------------
	//-----------------------装备------------------
	//装备类型和位置不匹配
	ErrorCodeType_ect_equip_pos_not_match ErrorCodeType = 168
	//找不到该装备
	ErrorCodeType_ect_not_found_equip ErrorCodeType = 170
	//玩家等级不足
	ErrorCodeType_ect_level_not_enough ErrorCodeType = 171
	//锻造厂等级不足
	ErrorCodeType_ect_forging_level_not_enough ErrorCodeType = 172
	//该装备玩家未穿戴
	ErrorCodeType_ect_equip_not_wear ErrorCodeType = 173
	//该槽位未开启
	ErrorCodeType_ect_hole_not_open ErrorCodeType = 174
	//该位置已安装宝石
	ErrorCodeType_ect_place_haved_gem ErrorCodeType = 175
	//该类型宝石已镶嵌
	ErrorCodeType_ect_the_type_gem_inlay ErrorCodeType = 176
	//该宝石未镶嵌
	ErrorCodeType_ect_the_gem_not_inlay ErrorCodeType = 177
	//该装备不能锻造
	ErrorCodeType_ect_equip_not_forging ErrorCodeType = 178
	//没有锻造队列
	ErrorCodeType_ect_not_have_forging_queue ErrorCodeType = 179
	//-----------------------庇护所----------------
	//庇护所已经储藏士兵
	ErrorCodeType_ect_sanctuary_has_soldiers ErrorCodeType = 180
	//士兵数目不合法
	ErrorCodeType_ect_soldiers_count_illegal ErrorCodeType = 181
	//庇护所没有储藏士兵
	ErrorCodeType_ect_sanctuary_not_soldiers ErrorCodeType = 182
	//该位置没有镶嵌宝石
	ErrorCodeType_ect_not_inlay_the_gem ErrorCodeType = 183
	//挖宝石器品质与宝石品质不一致;
	ErrorCodeType_ect_quality_not_agreement ErrorCodeType = 184
	//已有锻造队列
	ErrorCodeType_ect_have_forge_queue ErrorCodeType = 185
	//领主已穿戴
	ErrorCodeType_ect_lord_wear ErrorCodeType = 186
	//-----------------------mail------------------
	//邮箱已满
	ErrorCodeType_ect_not_mail_full ErrorCodeType = 190
	//邮件项不存在
	ErrorCodeType_ect_mail_item_not_found ErrorCodeType = 191
	//已全部收藏了
	ErrorCodeType_ect_all_mail_item_already_enshrine ErrorCodeType = 192
	//已全部标记已读了
	ErrorCodeType_ect_all_mail_item_already_read ErrorCodeType = 193
	//-----------------------mail------------------
	//-----------------------使馆------------------
	//已经增援该盟友
	ErrorCodeType_ect_the_ally_has_reinforce ErrorCodeType = 201
	//使馆未修建
	ErrorCodeType_ect_embassy_not_build ErrorCodeType = 202
	//对方未修建使馆
	ErrorCodeType_ect_other_side_not_buid_embassy ErrorCodeType = 203
	//增援数量到达上线
	ErrorCodeType_ect_reinforce_number_arrive_toplimit ErrorCodeType = 204
	//不在同一个王国
	ErrorCodeType_ect_not_one_kingdom ErrorCodeType = 205
	//没有增援该玩家
	ErrorCodeType_ect_not_reinforce_the_ally ErrorCodeType = 206
	//该位置已有单位
	ErrorCodeType_ect_the_pos_have_unit ErrorCodeType = 207
	//-----------------------使馆------------------
	//----------------------炼金所-----------------
	//该位置没有该元素
	ErrorCodeType_ect_not_have_the_element ErrorCodeType = 210
	//黑暗元素不匹配
	ErrorCodeType_ect_dark_element_not_match ErrorCodeType = 211
	//该黑暗元素未鉴定
	ErrorCodeType_ect_dark_element_not_identity ErrorCodeType = 212
	//鉴定时间未到
	ErrorCodeType_ect_identity_time_not_arrive ErrorCodeType = 213
	//----------------------炼金所-----------------
	//----------------------市集-------------------
	//不在同一个联盟
	ErrorCodeType_ect_not_one_faction ErrorCodeType = 220
	//大地图没有该玩家
	ErrorCodeType_ect_not_have_the_player_in_map ErrorCodeType = 221
	//距离太远
	ErrorCodeType_ect_distance_too_far ErrorCodeType = 222
	//行军队列已达上限
	ErrorCodeType_ect_march_num_reach_limit ErrorCodeType = 223
	//市集未修建
	ErrorCodeType_ect_market_not_building ErrorCodeType = 224
	//未加入联盟
	ErrorCodeType_ect_not_join_faction ErrorCodeType = 225
	//----------------------市集-------------------
	//----------------------天赋-------------------
	//天赋达到最大等级
	ErrorCodeType_ect_talent_level_reach_max ErrorCodeType = 230
	//荣誉点数不足
	ErrorCodeType_ect_talent_poin_not_encough ErrorCodeType = 231
	//没有此天赋页
	ErrorCodeType_ect_not_have_the_talent_page ErrorCodeType = 233
	//名字重复
	ErrorCodeType_ect_talent_name_repeat ErrorCodeType = 234
	//前置天赋未解锁
	ErrorCodeType_ect_pre_talent_not_unlock ErrorCodeType = 235
	//----------------------天赋-------------------
	//----------------------城墙-------------------
	//没有造城墙
	ErrorCodeType_ect_wall_no_build ErrorCodeType = 240
	//城墙没有着火
	ErrorCodeType_ect_wall_not_fire ErrorCodeType = 241
	//已经到达灭火时间
	ErrorCodeType_ect_reach_out_fire_time ErrorCodeType = 242
	//未到灭火时间
	ErrorCodeType_ect_not_reach_out_fire_time ErrorCodeType = 243
	//城墙没有灭火
	ErrorCodeType_ect_wall_not_out_fire ErrorCodeType = 244
	//城墙已经满血
	ErrorCodeType_ect_wall_is_bloody ErrorCodeType = 245
	//箭塔未解锁
	ErrorCodeType_ect_arrow_tower_not_unlock ErrorCodeType = 246
	//箭塔未升级
	ErrorCodeType_ect_arrow_tower_not_upgrade ErrorCodeType = 247
	//箭塔正在升级中
	ErrorCodeType_ect_arrow_tower_upgrading ErrorCodeType = 248
	//箭塔升级已完成
	ErrorCodeType_ect_arrow_tower_upgraded ErrorCodeType = 249
	//箭塔已达最高等级
	ErrorCodeType_ect_arrow_tower_reach_max_lv ErrorCodeType = 250
	//前置城墙等级不足
	ErrorCodeType_ect_pre_wall_lv_not_reach ErrorCodeType = 251
	//----------------------城墙-------------------
	//----------------------联盟礼物-------------------
	//未加入联盟
	ErrorCodeType_ect_not_add_faction ErrorCodeType = 260
	//更新数据失败
	ErrorCodeType_ect_update_data_failed ErrorCodeType = 261
	//未找到该礼物
	ErrorCodeType_ect_not_found_the_gift ErrorCodeType = 262
	//该礼物已经开启
	ErrorCodeType_ect_the_gift_opened ErrorCodeType = 263
	//该礼物已将过期
	ErrorCodeType_ect_the_gift_overdue ErrorCodeType = 264
	//该礼物未开启
	ErrorCodeType_ect_the_gift_not_open ErrorCodeType = 265
	//Vip等级不足
	ErrorCodeType_ect_vip_lv_not_reach ErrorCodeType = 266
	//----------------------联盟礼物-------------------
	//----------------------联盟帮助-------------------
	//该状态不能请求帮助
	ErrorCodeType_ect_the_state_not_request_help ErrorCodeType = 271
	//已经请求帮助过
	ErrorCodeType_ect_already_request_help ErrorCodeType = 272
	//超出帮助限制
	ErrorCodeType_ect_exce_help_limit ErrorCodeType = 273
	//没有该帮助项
	ErrorCodeType_ect_not_have_the_help_item ErrorCodeType = 274
	//小于免费时间
	ErrorCodeType_ect_not_less_free_time ErrorCodeType = 275
	//----------------------联盟帮助-------------------
	//----------------------驻扎-----------------------
	//超出英雄数量上限
	ErrorCodeType_ect_overstep_hero_limit ErrorCodeType = 280
	//该英雄未获得
	ErrorCodeType_ect_the_hero_not_gain ErrorCodeType = 281
	//该军械未解锁
	ErrorCodeType_ect_the_armament_not_unlock ErrorCodeType = 282
	//已有玩家驻扎
	ErrorCodeType_ect_have_player_stationed ErrorCodeType = 283
	//未驻扎该玩家
	ErrorCodeType_ect_not_stationed_the_player ErrorCodeType = 284
	//找不到该士兵
	ErrorCodeType_ect_not_found_the_soldier ErrorCodeType = 285
	//----------------------驻扎-----------------------
	//----------------------英雄-------------------
	ErrorCodeType_hero_not_have             ErrorCodeType = 290
	ErrorCodeType_hero_table_data_wrong     ErrorCodeType = 291
	ErrorCodeType_hero_has_max_lv           ErrorCodeType = 292
	ErrorCodeType_hero_has_max_quality      ErrorCodeType = 293
	ErrorCodeType_hero_item_not_enough      ErrorCodeType = 294
	ErrorCodeType_hero_item_has_exist       ErrorCodeType = 295
	ErrorCodeType_hero_lv_limit             ErrorCodeType = 296
	ErrorCodeType_hero_equipment_not_enough ErrorCodeType = 297
	ErrorCodeType_hero_has_exist            ErrorCodeType = 298
)

var ErrorCodeType_name = map[int32]string{
	0:   "ect_res_not_enough",
	2:   "ect_not_found_cfg",
	3:   "ect_time_late",
	4:   "ect_pass_free_time",
	5:   "ect_operate_time_not_reach",
	6:   "ect_lord_reach_max_level",
	7:   "ect_client_arg_error",
	8:   "ect_server_internal_error",
	9:   "ect_player_not_found",
	10:  "ect_not_have_the_type_queue",
	100: "ect_area_not_activate",
	101: "ect_area_not_open",
	102: "ect_building_queue_full",
	103: "ect_preBuild_level_not_enough",
	104: "ect_building_pos_not_legal",
	105: "ect_building_not_exist",
	106: "ect_building_cfg_can_not_remove",
	107: "ect_building_not_reBuild",
	108: "ect_building_exceed_build_max_num",
	109: "ect_building_yet_max_lv",
	110: "ect_have_wounded_warrior_not_remove",
	120: "ect_building_not_enougn",
	121: "ect_train_warrior_reach_max_count",
	122: "ect_training_warrior",
	123: "ect_diss_warrior_not_enough",
	124: "ect_not_have_training_warrior",
	125: "ect_warrior_type_not_unlock",
	130: "ect_store_type_not_exist",
	131: "ect_store_purchase_count_not_illegal",
	132: "ect_store_not_add_alliance",
	133: "ect_store_not_sell_the_item",
	140: "ect_can_not_use_goods",
	141: "ect_bag_space_not_enough",
	150: "ect_wounded_warrior_count_not_illegal",
	151: "ect_not_exist_hospital",
	152: "ect_have_treating_queue",
	153: "ect_add_wound_count_defeat",
	154: "ect_not_have_treating_queue",
	160: "ect_have_research_queue",
	161: "ect_research_level_not_encough",
	162: "ect_pre_research_not_undeblocking",
	163: "ect_not_have_research_queue",
	164: "ect_illegal_research_type",
	165: "ect_research_exist_queue",
	166: "ect_research_reach_max_level",
	167: "ect_not_have_research_item",
	168: "ect_equip_pos_not_match",
	170: "ect_not_found_equip",
	171: "ect_level_not_enough",
	172: "ect_forging_level_not_enough",
	173: "ect_equip_not_wear",
	174: "ect_hole_not_open",
	175: "ect_place_haved_gem",
	176: "ect_the_type_gem_inlay",
	177: "ect_the_gem_not_inlay",
	178: "ect_equip_not_forging",
	179: "ect_not_have_forging_queue",
	180: "ect_sanctuary_has_soldiers",
	181: "ect_soldiers_count_illegal",
	182: "ect_sanctuary_not_soldiers",
	183: "ect_not_inlay_the_gem",
	184: "ect_quality_not_agreement",
	185: "ect_have_forge_queue",
	186: "ect_lord_wear",
	190: "ect_not_mail_full",
	191: "ect_mail_item_not_found",
	192: "ect_all_mail_item_already_enshrine",
	193: "ect_all_mail_item_already_read",
	201: "ect_the_ally_has_reinforce",
	202: "ect_embassy_not_build",
	203: "ect_other_side_not_buid_embassy",
	204: "ect_reinforce_number_arrive_toplimit",
	205: "ect_not_one_kingdom",
	206: "ect_not_reinforce_the_ally",
	207: "ect_the_pos_have_unit",
	210: "ect_not_have_the_element",
	211: "ect_dark_element_not_match",
	212: "ect_dark_element_not_identity",
	213: "ect_identity_time_not_arrive",
	220: "ect_not_one_faction",
	221: "ect_not_have_the_player_in_map",
	222: "ect_distance_too_far",
	223: "ect_march_num_reach_limit",
	224: "ect_market_not_building",
	225: "ect_not_join_faction",
	230: "ect_talent_level_reach_max",
	231: "ect_talent_poin_not_encough",
	233: "ect_not_have_the_talent_page",
	234: "ect_talent_name_repeat",
	235: "ect_pre_talent_not_unlock",
	240: "ect_wall_no_build",
	241: "ect_wall_not_fire",
	242: "ect_reach_out_fire_time",
	243: "ect_not_reach_out_fire_time",
	244: "ect_wall_not_out_fire",
	245: "ect_wall_is_bloody",
	246: "ect_arrow_tower_not_unlock",
	247: "ect_arrow_tower_not_upgrade",
	248: "ect_arrow_tower_upgrading",
	249: "ect_arrow_tower_upgraded",
	250: "ect_arrow_tower_reach_max_lv",
	251: "ect_pre_wall_lv_not_reach",
	260: "ect_not_add_faction",
	261: "ect_update_data_failed",
	262: "ect_not_found_the_gift",
	263: "ect_the_gift_opened",
	264: "ect_the_gift_overdue",
	265: "ect_the_gift_not_open",
	266: "ect_vip_lv_not_reach",
	271: "ect_the_state_not_request_help",
	272: "ect_already_request_help",
	273: "ect_exce_help_limit",
	274: "ect_not_have_the_help_item",
	275: "ect_not_less_free_time",
	280: "ect_overstep_hero_limit",
	281: "ect_the_hero_not_gain",
	282: "ect_the_armament_not_unlock",
	283: "ect_have_player_stationed",
	284: "ect_not_stationed_the_player",
	285: "ect_not_found_the_soldier",
	290: "hero_not_have",
	291: "hero_table_data_wrong",
	292: "hero_has_max_lv",
	293: "hero_has_max_quality",
	294: "hero_item_not_enough",
	295: "hero_item_has_exist",
	296: "hero_lv_limit",
	297: "hero_equipment_not_enough",
	298: "hero_has_exist",
}

var ErrorCodeType_value = map[string]int32{
	"ect_res_not_enough":                    0,
	"ect_not_found_cfg":                     2,
	"ect_time_late":                         3,
	"ect_pass_free_time":                    4,
	"ect_operate_time_not_reach":            5,
	"ect_lord_reach_max_level":              6,
	"ect_client_arg_error":                  7,
	"ect_server_internal_error":             8,
	"ect_player_not_found":                  9,
	"ect_not_have_the_type_queue":           10,
	"ect_area_not_activate":                 100,
	"ect_area_not_open":                     101,
	"ect_building_queue_full":               102,
	"ect_preBuild_level_not_enough":         103,
	"ect_building_pos_not_legal":            104,
	"ect_building_not_exist":                105,
	"ect_building_cfg_can_not_remove":       106,
	"ect_building_not_reBuild":              107,
	"ect_building_exceed_build_max_num":     108,
	"ect_building_yet_max_lv":               109,
	"ect_have_wounded_warrior_not_remove":   110,
	"ect_building_not_enougn":               120,
	"ect_train_warrior_reach_max_count":     121,
	"ect_training_warrior":                  122,
	"ect_diss_warrior_not_enough":           123,
	"ect_not_have_training_warrior":         124,
	"ect_warrior_type_not_unlock":           125,
	"ect_store_type_not_exist":              130,
	"ect_store_purchase_count_not_illegal":  131,
	"ect_store_not_add_alliance":            132,
	"ect_store_not_sell_the_item":           133,
	"ect_can_not_use_goods":                 140,
	"ect_bag_space_not_enough":              141,
	"ect_wounded_warrior_count_not_illegal": 150,
	"ect_not_exist_hospital":                151,
	"ect_have_treating_queue":               152,
	"ect_add_wound_count_defeat":            153,
	"ect_not_have_treating_queue":           154,
	"ect_have_research_queue":               160,
	"ect_research_level_not_encough":        161,
	"ect_pre_research_not_undeblocking":     162,
	"ect_not_have_research_queue":           163,
	"ect_illegal_research_type":             164,
	"ect_research_exist_queue":              165,
	"ect_research_reach_max_level":          166,
	"ect_not_have_research_item":            167,
	"ect_equip_pos_not_match":               168,
	"ect_not_found_equip":                   170,
	"ect_level_not_enough":                  171,
	"ect_forging_level_not_enough":          172,
	"ect_equip_not_wear":                    173,
	"ect_hole_not_open":                     174,
	"ect_place_haved_gem":                   175,
	"ect_the_type_gem_inlay":                176,
	"ect_the_gem_not_inlay":                 177,
	"ect_equip_not_forging":                 178,
	"ect_not_have_forging_queue":            179,
	"ect_sanctuary_has_soldiers":            180,
	"ect_soldiers_count_illegal":            181,
	"ect_sanctuary_not_soldiers":            182,
	"ect_not_inlay_the_gem":                 183,
	"ect_quality_not_agreement":             184,
	"ect_have_forge_queue":                  185,
	"ect_lord_wear":                         186,
	"ect_not_mail_full":                     190,
	"ect_mail_item_not_found":               191,
	"ect_all_mail_item_already_enshrine":    192,
	"ect_all_mail_item_already_read":        193,
	"ect_the_ally_has_reinforce":            201,
	"ect_embassy_not_build":                 202,
	"ect_other_side_not_buid_embassy":       203,
	"ect_reinforce_number_arrive_toplimit":  204,
	"ect_not_one_kingdom":                   205,
	"ect_not_reinforce_the_ally":            206,
	"ect_the_pos_have_unit":                 207,
	"ect_not_have_the_element":              210,
	"ect_dark_element_not_match":            211,
	"ect_dark_element_not_identity":         212,
	"ect_identity_time_not_arrive":          213,
	"ect_not_one_faction":                   220,
	"ect_not_have_the_player_in_map":        221,
	"ect_distance_too_far":                  222,
	"ect_march_num_reach_limit":             223,
	"ect_market_not_building":               224,
	"ect_not_join_faction":                  225,
	"ect_talent_level_reach_max":            230,
	"ect_talent_poin_not_encough":           231,
	"ect_not_have_the_talent_page":          233,
	"ect_talent_name_repeat":                234,
	"ect_pre_talent_not_unlock":             235,
	"ect_wall_no_build":                     240,
	"ect_wall_not_fire":                     241,
	"ect_reach_out_fire_time":               242,
	"ect_not_reach_out_fire_time":           243,
	"ect_wall_not_out_fire":                 244,
	"ect_wall_is_bloody":                    245,
	"ect_arrow_tower_not_unlock":            246,
	"ect_arrow_tower_not_upgrade":           247,
	"ect_arrow_tower_upgrading":             248,
	"ect_arrow_tower_upgraded":              249,
	"ect_arrow_tower_reach_max_lv":          250,
	"ect_pre_wall_lv_not_reach":             251,
	"ect_not_add_faction":                   260,
	"ect_update_data_failed":                261,
	"ect_not_found_the_gift":                262,
	"ect_the_gift_opened":                   263,
	"ect_the_gift_overdue":                  264,
	"ect_the_gift_not_open":                 265,
	"ect_vip_lv_not_reach":                  266,
	"ect_the_state_not_request_help":        271,
	"ect_already_request_help":              272,
	"ect_exce_help_limit":                   273,
	"ect_not_have_the_help_item":            274,
	"ect_not_less_free_time":                275,
	"ect_overstep_hero_limit":               280,
	"ect_the_hero_not_gain":                 281,
	"ect_the_armament_not_unlock":           282,
	"ect_have_player_stationed":             283,
	"ect_not_stationed_the_player":          284,
	"ect_not_found_the_soldier":             285,
	"hero_not_have":                         290,
	"hero_table_data_wrong":                 291,
	"hero_has_max_lv":                       292,
	"hero_has_max_quality":                  293,
	"hero_item_not_enough":                  294,
	"hero_item_has_exist":                   295,
	"hero_lv_limit":                         296,
	"hero_equipment_not_enough":             297,
	"hero_has_exist":                        298,
}

func (x ErrorCodeType) String() string {
	return proto.EnumName(ErrorCodeType_name, int32(x))
}

func (ErrorCodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{0}
}

//属性类型
type AttributeType int32

const (
	AttributeType_attribute_type_DEFAULT AttributeType = 0
	//部队规模，单只军团的总兵量上限
	AttributeType_attribute_type_TROOP_NUM AttributeType = 100
	//行军队列
	AttributeType_attribute_type_MARCH_NUM AttributeType = 101
	//帮助次数
	AttributeType_attribute_type_HELP_NUM AttributeType = 102
	//增加训练士兵数量
	AttributeType_attribute_type_TRAINING_NUM AttributeType = 103
	//降低T1步兵资源消耗
	AttributeType_attribute_type_DECREASE_T1_INFANTRY_RES AttributeType = 104
	//降低T1骑兵资源消耗
	AttributeType_attribute_type_DECREASE_T1_CAVALRY_RES AttributeType = 105
	//降低T1弓兵资源消耗
	AttributeType_attribute_type_DECREASE_T1_ARCHER_RES AttributeType = 106
	//降低T2步兵资源消耗
	AttributeType_attribute_type_DECREASE_T2_INFANTRY_RES AttributeType = 107
	//降低T2骑兵资源消耗
	AttributeType_attribute_type_DECREASE_T2_CAVALRY_RES AttributeType = 108
	//降低T2弓兵资源消耗
	AttributeType_attribute_type_DECREASE_T2_ARCHER_RES AttributeType = 109
	//降低T3步兵资源消耗
	AttributeType_attribute_type_DECREASE_T3_INFANTRY_RES AttributeType = 110
	//降低T3骑兵资源消耗
	AttributeType_attribute_type_DECREASE_T3_CAVALRY_RES AttributeType = 111
	//降低T3弓兵资源消耗
	AttributeType_attribute_type_DECREASE_T3_ARCHER_RES AttributeType = 112
	//降低T4步兵资源消耗
	AttributeType_attribute_type_DECREASE_T4_INFANTRY_RES AttributeType = 113
	//降低T4骑兵资源消耗
	AttributeType_attribute_type_DECREASE_T4_CAVALRY_RES AttributeType = 114
	//降低T4弓兵资源消耗
	AttributeType_attribute_type_DECREASE_T4_ARCHER_RES AttributeType = 115
	//训练士兵加速
	AttributeType_attribute_type_TRAINING_SPEED AttributeType = 116
	//增加医院容量
	AttributeType_attribute_type_HOSPITAL_CAPACITY AttributeType = 117
	//治疗加速
	AttributeType_attribute_type_CURE_SPEED AttributeType = 118
	//治疗减耗
	AttributeType_attribute_type_CURE_DECREASE_RES AttributeType = 119
	//仓库保护量
	AttributeType_attribute_type_SAVERES_RATIO AttributeType = 120
	//仓库保护量上限
	AttributeType_attribute_type_SAVERES AttributeType = 121
	//增加城墙耐久度上限
	AttributeType_attribute_type_WALL_ENDURANCE_LIMIT AttributeType = 122
	//城墙耐久度加成
	AttributeType_attribute_type_WALL_ENDURANCE_RATIO AttributeType = 123
	//城墙耐久度恢复加成
	AttributeType_attribute_type_WALL_ENDURANCE_SPEED AttributeType = 124
	//城墙防御力加成
	AttributeType_attribute_type_WALL_DEF_RATIO AttributeType = 125
	//箭塔攻击加成
	AttributeType_attribute_type_TOWER_ATK AttributeType = 126
	//箭塔防御加成
	AttributeType_attribute_type_TOWER_DEF AttributeType = 127
	//箭塔生命加成
	AttributeType_attribute_type_TOWER_HP AttributeType = 128
	//行军速度加成
	AttributeType_attribute_type_MARCH_SPEED AttributeType = 129
	//采集行军速度加成
	AttributeType_attribute_type_MARCH_GATHER_SPEED AttributeType = 130
	//讨伐1行军速度加成
	AttributeType_attribute_type_MARCH_HUNT1_SPEED AttributeType = 131
	//讨伐2行军速度加成
	AttributeType_attribute_type_MARCH_HUNT2_SPEED AttributeType = 132
	//参与集结行军速度加成
	AttributeType_attribute_type_MARCH_JOINRALLY_SPEED AttributeType = 133
	//集结PVE目标行军速度加成
	AttributeType_attribute_type_MARCH_PVERALLY_SPEED AttributeType = 134
	//采集加速
	AttributeType_attribute_type_GATHER_SPEED AttributeType = 135
	//提高负重
	AttributeType_attribute_type_LOAD_RES AttributeType = 136
	//死亡士兵转换为伤兵
	AttributeType_attribute_type_DEATH_INJURED AttributeType = 137
	//行动力上限
	AttributeType_attribute_type_SKILLPOINT_LIMIT AttributeType = 138
	//行动力减耗
	AttributeType_attribute_type_SKILLPOINT_DECREASE AttributeType = 139
	//行动力恢复加速
	AttributeType_attribute_type_SKILLPOINT_RESTORE AttributeType = 140
	//步兵攻击力加成
	AttributeType_attribute_type_INFANTRY_ATK AttributeType = 141
	//步兵防御力加成
	AttributeType_attribute_type_INFANTRY_DEF AttributeType = 142
	//步兵生命值加成
	AttributeType_attribute_type_INFANTRY_HP AttributeType = 143
	//骑兵攻击加成
	AttributeType_attribute_type_CAVALRY_ATK AttributeType = 144
	//骑兵防御加成
	AttributeType_attribute_type_CAVALRY_DEF AttributeType = 145
	//骑兵生命加成
	AttributeType_attribute_type_CAVALRY_HP AttributeType = 146
	//弓兵攻击加成
	AttributeType_attribute_type_ARCHER_ATK AttributeType = 147
	//弓兵防御加成
	AttributeType_attribute_type_ARCHER_DEF AttributeType = 148
	//弓兵生命加成
	AttributeType_attribute_type_ARCHER_HP AttributeType = 149
	//攻城车攻击加成
	AttributeType_attribute_type_CATAPULT_ATK AttributeType = 150
	//攻城车御加成
	AttributeType_attribute_type_CATAPULT_DEF AttributeType = 151
	//攻城车生命加成
	AttributeType_attribute_type_CATAPULT_HP AttributeType = 152
	//井栏攻击加成
	AttributeType_attribute_type_ARROW_ATK AttributeType = 153
	AttributeType_attribute_type_ARROW_DEF AttributeType = 154
	//井栏生命加成
	AttributeType_attribute_type_ARROW_HP AttributeType = 155
	//全体部队攻击加成
	AttributeType_attribute_type_ALL_ATK AttributeType = 156
	//全体部队防御加成
	AttributeType_attribute_type_ALL_DEF AttributeType = 157
	//全体部队生命加成
	AttributeType_attribute_type_ALL_HP AttributeType = 158
	//全体军械攻击加成
	AttributeType_attribute_type_ALLCHARIOT_ATK AttributeType = 159
	//全体军械防御加成
	AttributeType_attribute_type_ALLCHARIOT_DEF AttributeType = 160
	//全体军械血量加成
	AttributeType_attribute_type_ALLCHARIOT_HP AttributeType = 161
	//降低进攻方攻击(防守时有效）
	AttributeType_attribute_type_REDUCE_ATK AttributeType = 162
	//降低进攻方防御(防守时有效）
	AttributeType_attribute_type_REDUCE_DEF AttributeType = 163
	//降低进攻方生命(防守时有效）
	AttributeType_attribute_type_REDUCE_HP AttributeType = 164
	//降低敌方攻击
	AttributeType_attribute_type_REDUCEALL_ATK AttributeType = 165
	//降低敌方防御
	AttributeType_attribute_type_REDUCEALL_DEF AttributeType = 166
	//降低敌方生命
	AttributeType_attribute_type_REDUCEALL_HP AttributeType = 167
	//粮食产量
	AttributeType_attribute_type_FOOD_PRODUCTION AttributeType = 168
	//石头产量
	AttributeType_attribute_type_STONE_PRODUCTION AttributeType = 169
	//木材产量
	AttributeType_attribute_type_WOOD_PRODUCTION AttributeType = 170
	//铁矿产量
	AttributeType_attribute_type_IRON_PRODUCTION AttributeType = 171
	//金币产量
	AttributeType_attribute_type_GOLD_PRODUCTION AttributeType = 172
	//粮食容量
	AttributeType_attribute_type_FOOD_MAX AttributeType = 173
	//木材容量
	AttributeType_attribute_type_WOOD_MAX AttributeType = 174
	//铁矿容量
	AttributeType_attribute_type_IRON_MAX AttributeType = 175
	//石头容量
	AttributeType_attribute_type_STONE_MAX AttributeType = 176
	//金币容量
	AttributeType_attribute_type_GOLD_MAX AttributeType = 177
	//研究速度加成
	AttributeType_attribut_type_RESEARCH_SPEED AttributeType = 178
	//建设速度加成
	AttributeType_attribut_type_BUILDING_SPEED AttributeType = 179
	//统御经验加成
	AttributeType_attribut_type_EXPERIENCE_UP AttributeType = 180
	//战争狂热
	AttributeType_attribut_type_WAR AttributeType = 181
	//护盾
	AttributeType_attribut_type_SHIELD_DEPRECATED AttributeType = 182
	//反侦察
	AttributeType_attribut_type_ANTISCOUT AttributeType = 183
	//疑兵
	AttributeType_attribut_type_MISLEAD AttributeType = 184
	//讨伐2（军团pve）伤害
	AttributeType_attribut_type_FIGHTMONSTER_DAMAGE_INCREASE2 AttributeType = 185
	//讨伐1（猎魔）伤害
	AttributeType_attribut_type_FIGHTMONSTER_DAMAGE_INCREASE1 AttributeType = 186
	//猎魔行动力恢复
	AttributeType_attribut_type_FIGHTMONSTER_POINT_RESTORE AttributeType = 187
	//猎魔行动力上限
	AttributeType_attribut_type_FIGHTMONSTER_POINT_MAX AttributeType = 188
	//猎魔行动力减耗
	AttributeType_attribut_type_FIGHTMONSTER_POINT_DECREASE AttributeType = 189
	//猎魔连击数
	AttributeType_attribut_type_FIGHTMONSTER_COMBO_MAX AttributeType = 190
	//猎魔战英雄生命加成
	AttributeType_attribut_type_FIGHTMONSTER_HP_INCREASE AttributeType = 191
	//猎魔战治疗效果加成
	AttributeType_attribut_type_FIGHTMONSTER_TREATMENT_INCREASE AttributeType = 192
	//猎魔战英雄初始怒气加成
	AttributeType_attribut_type_FIGHTMONSTER_ANGER_INITIAL AttributeType = 193
	//侦查,根据具体功能说明依次解锁
	AttributeType_attribut_type_SCOUTING AttributeType = 194
	//锻造速度
	AttributeType_attribut_type_FORGING_SPEED AttributeType = 195
	//减少燃烧时间
	AttributeType_attribut_type_BURNING_TIME AttributeType = 196
	//提高防御部队攻防血
	AttributeType_attribut_type_DEFENSE_BUFF AttributeType = 197
	//集结部队上限
	AttributeType_attribut_type_BUFF_TYPE_RALLY_ARMY_NUM AttributeType = 198
	//集结部队攻击力
	AttributeType_attribut_type_BUFF_TYPE_RALLY_ATK AttributeType = 199
	//援军部队上限
	AttributeType_attribut_type_BUFF_TYPE_REINFORCE_ARMY_NUM AttributeType = 200
	//增援行军速度
	AttributeType_attribut_type_BUFF_TYPE_REINFORCE_SPEED AttributeType = 201
	//增加运输资源速度
	AttributeType_attribut_type_BUFF_TYPE_TRANSPORT_SPEED AttributeType = 202
	//天赋记忆组合数量
	AttributeType_attribut_type_BUFF_TYPE_TALENT AttributeType = 203
	//T2步兵
	AttributeType_attribut_type_BUFF_TYPE_T2_INFANTRY AttributeType = 204
	//T2骑兵
	AttributeType_attribut_type_BUFF_TYPE_T2_CAVALRY AttributeType = 205
	//T2弓兵
	AttributeType_attribut_type_BUFF_TYPE_T2_ARCHER AttributeType = 206
	//T3步兵
	AttributeType_attribut_type_BUFF_TYPE_T3_INFANTRY AttributeType = 207
	//T3骑兵
	AttributeType_attribut_type_BUFF_TYPE_T3_CAVALRY AttributeType = 208
	//T3弓兵
	AttributeType_attribut_type_BUFF_TYPE_T3_ARCHER AttributeType = 209
	//T4步兵
	AttributeType_attribut_type_BUFF_TYPE_T4_INFANTRY AttributeType = 210
	//T4骑兵
	AttributeType_attribut_type_BUFF_TYPE_T4_CAVALRY AttributeType = 211
	//T4弓兵
	AttributeType_attribut_type_BUFF_TYPE_T4_ARCHER AttributeType = 212
	//箭塔
	AttributeType_attribut_type_BUFF_TYPE_ARROWTOWER_UNLOCK AttributeType = 213
	//水晶矿采集速度
	AttributeType_attribut_type_BUFF_TYPE_CRYSTAL_GATHER_SPEED AttributeType = 214
	//解锁箭楼（军械）
	AttributeType_attribut_type_BUFF_TYPE_ARROWBUILDING_UNLOCK AttributeType = 215
	//军械升级加速
	AttributeType_BUFF_TYPE_ALLCHARIOT_SPEED AttributeType = 216
	//降低投石车升级消耗
	AttributeType_attribut_type_BUFF_TYPE_DECREASE_CATAPULT_RES AttributeType = 217
	//降低箭楼（井栏）升级消耗
	AttributeType_attribut_type_BUFF_TYPE_DECREASE_ARROW_RES AttributeType = 218
	//百分比提高训练士兵数量
	AttributeType_attribut_type_BUFF_TYPE_TRAINING_NUM_RATIO AttributeType = 219
	//百分比提高医院容量
	AttributeType_attribut_type_BUFF_TYPE_HOSPITAL_CAPACITY_RATIO AttributeType = 220
	//领主装备组合存储数量
	AttributeType_attribut_type_BUFF_TYPE_LORDEQUIP AttributeType = 221
)

var AttributeType_name = map[int32]string{
	0:   "attribute_type_DEFAULT",
	100: "attribute_type_TROOP_NUM",
	101: "attribute_type_MARCH_NUM",
	102: "attribute_type_HELP_NUM",
	103: "attribute_type_TRAINING_NUM",
	104: "attribute_type_DECREASE_T1_INFANTRY_RES",
	105: "attribute_type_DECREASE_T1_CAVALRY_RES",
	106: "attribute_type_DECREASE_T1_ARCHER_RES",
	107: "attribute_type_DECREASE_T2_INFANTRY_RES",
	108: "attribute_type_DECREASE_T2_CAVALRY_RES",
	109: "attribute_type_DECREASE_T2_ARCHER_RES",
	110: "attribute_type_DECREASE_T3_INFANTRY_RES",
	111: "attribute_type_DECREASE_T3_CAVALRY_RES",
	112: "attribute_type_DECREASE_T3_ARCHER_RES",
	113: "attribute_type_DECREASE_T4_INFANTRY_RES",
	114: "attribute_type_DECREASE_T4_CAVALRY_RES",
	115: "attribute_type_DECREASE_T4_ARCHER_RES",
	116: "attribute_type_TRAINING_SPEED",
	117: "attribute_type_HOSPITAL_CAPACITY",
	118: "attribute_type_CURE_SPEED",
	119: "attribute_type_CURE_DECREASE_RES",
	120: "attribute_type_SAVERES_RATIO",
	121: "attribute_type_SAVERES",
	122: "attribute_type_WALL_ENDURANCE_LIMIT",
	123: "attribute_type_WALL_ENDURANCE_RATIO",
	124: "attribute_type_WALL_ENDURANCE_SPEED",
	125: "attribute_type_WALL_DEF_RATIO",
	126: "attribute_type_TOWER_ATK",
	127: "attribute_type_TOWER_DEF",
	128: "attribute_type_TOWER_HP",
	129: "attribute_type_MARCH_SPEED",
	130: "attribute_type_MARCH_GATHER_SPEED",
	131: "attribute_type_MARCH_HUNT1_SPEED",
	132: "attribute_type_MARCH_HUNT2_SPEED",
	133: "attribute_type_MARCH_JOINRALLY_SPEED",
	134: "attribute_type_MARCH_PVERALLY_SPEED",
	135: "attribute_type_GATHER_SPEED",
	136: "attribute_type_LOAD_RES",
	137: "attribute_type_DEATH_INJURED",
	138: "attribute_type_SKILLPOINT_LIMIT",
	139: "attribute_type_SKILLPOINT_DECREASE",
	140: "attribute_type_SKILLPOINT_RESTORE",
	141: "attribute_type_INFANTRY_ATK",
	142: "attribute_type_INFANTRY_DEF",
	143: "attribute_type_INFANTRY_HP",
	144: "attribute_type_CAVALRY_ATK",
	145: "attribute_type_CAVALRY_DEF",
	146: "attribute_type_CAVALRY_HP",
	147: "attribute_type_ARCHER_ATK",
	148: "attribute_type_ARCHER_DEF",
	149: "attribute_type_ARCHER_HP",
	150: "attribute_type_CATAPULT_ATK",
	151: "attribute_type_CATAPULT_DEF",
	152: "attribute_type_CATAPULT_HP",
	153: "attribute_type_ARROW_ATK",
	154: "attribute_type_ARROW_DEF",
	155: "attribute_type_ARROW_HP",
	156: "attribute_type_ALL_ATK",
	157: "attribute_type_ALL_DEF",
	158: "attribute_type_ALL_HP",
	159: "attribute_type_ALLCHARIOT_ATK",
	160: "attribute_type_ALLCHARIOT_DEF",
	161: "attribute_type_ALLCHARIOT_HP",
	162: "attribute_type_REDUCE_ATK",
	163: "attribute_type_REDUCE_DEF",
	164: "attribute_type_REDUCE_HP",
	165: "attribute_type_REDUCEALL_ATK",
	166: "attribute_type_REDUCEALL_DEF",
	167: "attribute_type_REDUCEALL_HP",
	168: "attribute_type_FOOD_PRODUCTION",
	169: "attribute_type_STONE_PRODUCTION",
	170: "attribute_type_WOOD_PRODUCTION",
	171: "attribute_type_IRON_PRODUCTION",
	172: "attribute_type_GOLD_PRODUCTION",
	173: "attribute_type_FOOD_MAX",
	174: "attribute_type_WOOD_MAX",
	175: "attribute_type_IRON_MAX",
	176: "attribute_type_STONE_MAX",
	177: "attribute_type_GOLD_MAX",
	178: "attribut_type_RESEARCH_SPEED",
	179: "attribut_type_BUILDING_SPEED",
	180: "attribut_type_EXPERIENCE_UP",
	181: "attribut_type_WAR",
	182: "attribut_type_SHIELD_DEPRECATED",
	183: "attribut_type_ANTISCOUT",
	184: "attribut_type_MISLEAD",
	185: "attribut_type_FIGHTMONSTER_DAMAGE_INCREASE2",
	186: "attribut_type_FIGHTMONSTER_DAMAGE_INCREASE1",
	187: "attribut_type_FIGHTMONSTER_POINT_RESTORE",
	188: "attribut_type_FIGHTMONSTER_POINT_MAX",
	189: "attribut_type_FIGHTMONSTER_POINT_DECREASE",
	190: "attribut_type_FIGHTMONSTER_COMBO_MAX",
	191: "attribut_type_FIGHTMONSTER_HP_INCREASE",
	192: "attribut_type_FIGHTMONSTER_TREATMENT_INCREASE",
	193: "attribut_type_FIGHTMONSTER_ANGER_INITIAL",
	194: "attribut_type_SCOUTING",
	195: "attribut_type_FORGING_SPEED",
	196: "attribut_type_BURNING_TIME",
	197: "attribut_type_DEFENSE_BUFF",
	198: "attribut_type_BUFF_TYPE_RALLY_ARMY_NUM",
	199: "attribut_type_BUFF_TYPE_RALLY_ATK",
	200: "attribut_type_BUFF_TYPE_REINFORCE_ARMY_NUM",
	201: "attribut_type_BUFF_TYPE_REINFORCE_SPEED",
	202: "attribut_type_BUFF_TYPE_TRANSPORT_SPEED",
	203: "attribut_type_BUFF_TYPE_TALENT",
	204: "attribut_type_BUFF_TYPE_T2_INFANTRY",
	205: "attribut_type_BUFF_TYPE_T2_CAVALRY",
	206: "attribut_type_BUFF_TYPE_T2_ARCHER",
	207: "attribut_type_BUFF_TYPE_T3_INFANTRY",
	208: "attribut_type_BUFF_TYPE_T3_CAVALRY",
	209: "attribut_type_BUFF_TYPE_T3_ARCHER",
	210: "attribut_type_BUFF_TYPE_T4_INFANTRY",
	211: "attribut_type_BUFF_TYPE_T4_CAVALRY",
	212: "attribut_type_BUFF_TYPE_T4_ARCHER",
	213: "attribut_type_BUFF_TYPE_ARROWTOWER_UNLOCK",
	214: "attribut_type_BUFF_TYPE_CRYSTAL_GATHER_SPEED",
	215: "attribut_type_BUFF_TYPE_ARROWBUILDING_UNLOCK",
	216: "BUFF_TYPE_ALLCHARIOT_SPEED",
	217: "attribut_type_BUFF_TYPE_DECREASE_CATAPULT_RES",
	218: "attribut_type_BUFF_TYPE_DECREASE_ARROW_RES",
	219: "attribut_type_BUFF_TYPE_TRAINING_NUM_RATIO",
	220: "attribut_type_BUFF_TYPE_HOSPITAL_CAPACITY_RATIO",
	221: "attribut_type_BUFF_TYPE_LORDEQUIP",
}

var AttributeType_value = map[string]int32{
	"attribute_type_DEFAULT":                          0,
	"attribute_type_TROOP_NUM":                        100,
	"attribute_type_MARCH_NUM":                        101,
	"attribute_type_HELP_NUM":                         102,
	"attribute_type_TRAINING_NUM":                     103,
	"attribute_type_DECREASE_T1_INFANTRY_RES":         104,
	"attribute_type_DECREASE_T1_CAVALRY_RES":          105,
	"attribute_type_DECREASE_T1_ARCHER_RES":           106,
	"attribute_type_DECREASE_T2_INFANTRY_RES":         107,
	"attribute_type_DECREASE_T2_CAVALRY_RES":          108,
	"attribute_type_DECREASE_T2_ARCHER_RES":           109,
	"attribute_type_DECREASE_T3_INFANTRY_RES":         110,
	"attribute_type_DECREASE_T3_CAVALRY_RES":          111,
	"attribute_type_DECREASE_T3_ARCHER_RES":           112,
	"attribute_type_DECREASE_T4_INFANTRY_RES":         113,
	"attribute_type_DECREASE_T4_CAVALRY_RES":          114,
	"attribute_type_DECREASE_T4_ARCHER_RES":           115,
	"attribute_type_TRAINING_SPEED":                   116,
	"attribute_type_HOSPITAL_CAPACITY":                117,
	"attribute_type_CURE_SPEED":                       118,
	"attribute_type_CURE_DECREASE_RES":                119,
	"attribute_type_SAVERES_RATIO":                    120,
	"attribute_type_SAVERES":                          121,
	"attribute_type_WALL_ENDURANCE_LIMIT":             122,
	"attribute_type_WALL_ENDURANCE_RATIO":             123,
	"attribute_type_WALL_ENDURANCE_SPEED":             124,
	"attribute_type_WALL_DEF_RATIO":                   125,
	"attribute_type_TOWER_ATK":                        126,
	"attribute_type_TOWER_DEF":                        127,
	"attribute_type_TOWER_HP":                         128,
	"attribute_type_MARCH_SPEED":                      129,
	"attribute_type_MARCH_GATHER_SPEED":               130,
	"attribute_type_MARCH_HUNT1_SPEED":                131,
	"attribute_type_MARCH_HUNT2_SPEED":                132,
	"attribute_type_MARCH_JOINRALLY_SPEED":            133,
	"attribute_type_MARCH_PVERALLY_SPEED":             134,
	"attribute_type_GATHER_SPEED":                     135,
	"attribute_type_LOAD_RES":                         136,
	"attribute_type_DEATH_INJURED":                    137,
	"attribute_type_SKILLPOINT_LIMIT":                 138,
	"attribute_type_SKILLPOINT_DECREASE":              139,
	"attribute_type_SKILLPOINT_RESTORE":               140,
	"attribute_type_INFANTRY_ATK":                     141,
	"attribute_type_INFANTRY_DEF":                     142,
	"attribute_type_INFANTRY_HP":                      143,
	"attribute_type_CAVALRY_ATK":                      144,
	"attribute_type_CAVALRY_DEF":                      145,
	"attribute_type_CAVALRY_HP":                       146,
	"attribute_type_ARCHER_ATK":                       147,
	"attribute_type_ARCHER_DEF":                       148,
	"attribute_type_ARCHER_HP":                        149,
	"attribute_type_CATAPULT_ATK":                     150,
	"attribute_type_CATAPULT_DEF":                     151,
	"attribute_type_CATAPULT_HP":                      152,
	"attribute_type_ARROW_ATK":                        153,
	"attribute_type_ARROW_DEF":                        154,
	"attribute_type_ARROW_HP":                         155,
	"attribute_type_ALL_ATK":                          156,
	"attribute_type_ALL_DEF":                          157,
	"attribute_type_ALL_HP":                           158,
	"attribute_type_ALLCHARIOT_ATK":                   159,
	"attribute_type_ALLCHARIOT_DEF":                   160,
	"attribute_type_ALLCHARIOT_HP":                    161,
	"attribute_type_REDUCE_ATK":                       162,
	"attribute_type_REDUCE_DEF":                       163,
	"attribute_type_REDUCE_HP":                        164,
	"attribute_type_REDUCEALL_ATK":                    165,
	"attribute_type_REDUCEALL_DEF":                    166,
	"attribute_type_REDUCEALL_HP":                     167,
	"attribute_type_FOOD_PRODUCTION":                  168,
	"attribute_type_STONE_PRODUCTION":                 169,
	"attribute_type_WOOD_PRODUCTION":                  170,
	"attribute_type_IRON_PRODUCTION":                  171,
	"attribute_type_GOLD_PRODUCTION":                  172,
	"attribute_type_FOOD_MAX":                         173,
	"attribute_type_WOOD_MAX":                         174,
	"attribute_type_IRON_MAX":                         175,
	"attribute_type_STONE_MAX":                        176,
	"attribute_type_GOLD_MAX":                         177,
	"attribut_type_RESEARCH_SPEED":                    178,
	"attribut_type_BUILDING_SPEED":                    179,
	"attribut_type_EXPERIENCE_UP":                     180,
	"attribut_type_WAR":                               181,
	"attribut_type_SHIELD_DEPRECATED":                 182,
	"attribut_type_ANTISCOUT":                         183,
	"attribut_type_MISLEAD":                           184,
	"attribut_type_FIGHTMONSTER_DAMAGE_INCREASE2":     185,
	"attribut_type_FIGHTMONSTER_DAMAGE_INCREASE1":     186,
	"attribut_type_FIGHTMONSTER_POINT_RESTORE":        187,
	"attribut_type_FIGHTMONSTER_POINT_MAX":            188,
	"attribut_type_FIGHTMONSTER_POINT_DECREASE":       189,
	"attribut_type_FIGHTMONSTER_COMBO_MAX":            190,
	"attribut_type_FIGHTMONSTER_HP_INCREASE":          191,
	"attribut_type_FIGHTMONSTER_TREATMENT_INCREASE":   192,
	"attribut_type_FIGHTMONSTER_ANGER_INITIAL":        193,
	"attribut_type_SCOUTING":                          194,
	"attribut_type_FORGING_SPEED":                     195,
	"attribut_type_BURNING_TIME":                      196,
	"attribut_type_DEFENSE_BUFF":                      197,
	"attribut_type_BUFF_TYPE_RALLY_ARMY_NUM":          198,
	"attribut_type_BUFF_TYPE_RALLY_ATK":               199,
	"attribut_type_BUFF_TYPE_REINFORCE_ARMY_NUM":      200,
	"attribut_type_BUFF_TYPE_REINFORCE_SPEED":         201,
	"attribut_type_BUFF_TYPE_TRANSPORT_SPEED":         202,
	"attribut_type_BUFF_TYPE_TALENT":                  203,
	"attribut_type_BUFF_TYPE_T2_INFANTRY":             204,
	"attribut_type_BUFF_TYPE_T2_CAVALRY":              205,
	"attribut_type_BUFF_TYPE_T2_ARCHER":               206,
	"attribut_type_BUFF_TYPE_T3_INFANTRY":             207,
	"attribut_type_BUFF_TYPE_T3_CAVALRY":              208,
	"attribut_type_BUFF_TYPE_T3_ARCHER":               209,
	"attribut_type_BUFF_TYPE_T4_INFANTRY":             210,
	"attribut_type_BUFF_TYPE_T4_CAVALRY":              211,
	"attribut_type_BUFF_TYPE_T4_ARCHER":               212,
	"attribut_type_BUFF_TYPE_ARROWTOWER_UNLOCK":       213,
	"attribut_type_BUFF_TYPE_CRYSTAL_GATHER_SPEED":    214,
	"attribut_type_BUFF_TYPE_ARROWBUILDING_UNLOCK":    215,
	"BUFF_TYPE_ALLCHARIOT_SPEED":                      216,
	"attribut_type_BUFF_TYPE_DECREASE_CATAPULT_RES":   217,
	"attribut_type_BUFF_TYPE_DECREASE_ARROW_RES":      218,
	"attribut_type_BUFF_TYPE_TRAINING_NUM_RATIO":      219,
	"attribut_type_BUFF_TYPE_HOSPITAL_CAPACITY_RATIO": 220,
	"attribut_type_BUFF_TYPE_LORDEQUIP":               221,
}

func (x AttributeType) String() string {
	return proto.EnumName(AttributeType_name, int32(x))
}

func (AttributeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{1}
}

//建筑类型
type CityBuildingCategoryType int32

const (
	CityBuildingCategoryType_cbct_none CityBuildingCategoryType = 0
	//政府建筑
	CityBuildingCategoryType_cbct_government CityBuildingCategoryType = 1
	//军事建筑
	CityBuildingCategoryType_cbct_military CityBuildingCategoryType = 2
	//资源建筑
	CityBuildingCategoryType_cbct_resource CityBuildingCategoryType = 3
	//守护神建筑
	CityBuildingCategoryType_cbct_guard_god CityBuildingCategoryType = 4
)

var CityBuildingCategoryType_name = map[int32]string{
	0: "cbct_none",
	1: "cbct_government",
	2: "cbct_military",
	3: "cbct_resource",
	4: "cbct_guard_god",
}

var CityBuildingCategoryType_value = map[string]int32{
	"cbct_none":       0,
	"cbct_government": 1,
	"cbct_military":   2,
	"cbct_resource":   3,
	"cbct_guard_god":  4,
}

func (x CityBuildingCategoryType) String() string {
	return proto.EnumName(CityBuildingCategoryType_name, int32(x))
}

func (CityBuildingCategoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{2}
}

//城建类别
type CityBuildingType int32

const (
	CityBuildingType_cbt_none CityBuildingType = 0
	//主城
	CityBuildingType_cbt_main_city CityBuildingType = 1
	//城墙
	CityBuildingType_cbt_wall CityBuildingType = 2
	//医院
	CityBuildingType_cbt_hospital CityBuildingType = 3
	//哨塔
	CityBuildingType_cbt_sentry_tower CityBuildingType = 4
	//兵营
	CityBuildingType_cbt_barracks CityBuildingType = 5
	//仓库
	CityBuildingType_cbt_storage CityBuildingType = 6
	//军械所
	CityBuildingType_cbt_armory CityBuildingType = 7
	//研究院
	CityBuildingType_cbt_research CityBuildingType = 8
	//农场
	CityBuildingType_cbt_farm CityBuildingType = 9
	//采石场
	CityBuildingType_cbt_quarry CityBuildingType = 10
	//伐木场
	CityBuildingType_cbt_sawmill CityBuildingType = 11
	//矿场
	CityBuildingType_cbt_mine CityBuildingType = 12
	//庄园
	CityBuildingType_cbt_barrack CityBuildingType = 13
	//建造厂
	CityBuildingType_cbt_fabricate_factory CityBuildingType = 14
	//使馆
	CityBuildingType_cbt_embassy CityBuildingType = 15
	//战争大厅(集会所)
	CityBuildingType_cbt_war_hall CityBuildingType = 16
	//市集
	CityBuildingType_cbt_market CityBuildingType = 17
)

var CityBuildingType_name = map[int32]string{
	0:  "cbt_none",
	1:  "cbt_main_city",
	2:  "cbt_wall",
	3:  "cbt_hospital",
	4:  "cbt_sentry_tower",
	5:  "cbt_barracks",
	6:  "cbt_storage",
	7:  "cbt_armory",
	8:  "cbt_research",
	9:  "cbt_farm",
	10: "cbt_quarry",
	11: "cbt_sawmill",
	12: "cbt_mine",
	13: "cbt_barrack",
	14: "cbt_fabricate_factory",
	15: "cbt_embassy",
	16: "cbt_war_hall",
	17: "cbt_market",
}

var CityBuildingType_value = map[string]int32{
	"cbt_none":              0,
	"cbt_main_city":         1,
	"cbt_wall":              2,
	"cbt_hospital":          3,
	"cbt_sentry_tower":      4,
	"cbt_barracks":          5,
	"cbt_storage":           6,
	"cbt_armory":            7,
	"cbt_research":          8,
	"cbt_farm":              9,
	"cbt_quarry":            10,
	"cbt_sawmill":           11,
	"cbt_mine":              12,
	"cbt_barrack":           13,
	"cbt_fabricate_factory": 14,
	"cbt_embassy":           15,
	"cbt_war_hall":          16,
	"cbt_market":            17,
}

func (x CityBuildingType) String() string {
	return proto.EnumName(CityBuildingType_name, int32(x))
}

func (CityBuildingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{3}
}

//初始化类型
type InitialType int32

const (
	InitialType_it_none InitialType = 0
	//初始道具
	InitialType_it_goods InitialType = 1
	//初始军队
	InitialType_cbt_warrior InitialType = 2
	//初始建筑
	InitialType_cbt_building InitialType = 3
	//初始英雄
	InitialType_cbt_hero InitialType = 4
	//初始资源
	InitialType_cbt_resource InitialType = 5
)

var InitialType_name = map[int32]string{
	0: "it_none",
	1: "it_goods",
	2: "cbt_warrior",
	3: "cbt_building",
	4: "cbt_hero",
	5: "cbt_resource",
}

var InitialType_value = map[string]int32{
	"it_none":      0,
	"it_goods":     1,
	"cbt_warrior":  2,
	"cbt_building": 3,
	"cbt_hero":     4,
	"cbt_resource": 5,
}

func (x InitialType) String() string {
	return proto.EnumName(InitialType_name, int32(x))
}

func (InitialType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{4}
}

//士兵类型
type AtkType int32

const (
	AtkType_at_none AtkType = 0
	//步兵
	AtkType_at_infantry AtkType = 1
	//骑兵
	AtkType_at_cavalry AtkType = 2
	//弓兵
	AtkType_at_archer AtkType = 3
)

var AtkType_name = map[int32]string{
	0: "at_none",
	1: "at_infantry",
	2: "at_cavalry",
	3: "at_archer",
}

var AtkType_value = map[string]int32{
	"at_none":     0,
	"at_infantry": 1,
	"at_cavalry":  2,
	"at_archer":   3,
}

func (x AtkType) String() string {
	return proto.EnumName(AtkType_name, int32(x))
}

func (AtkType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{5}
}

//军械类型
type ArmamentType int32

const (
	ArmamentType_armament_type_none ArmamentType = 0
	//投石机
	ArmamentType_armament_type_mangonel ArmamentType = 1
	//井栏(箭楼)
	ArmamentType_armament_type_brandreth ArmamentType = 2
)

var ArmamentType_name = map[int32]string{
	0: "armament_type_none",
	1: "armament_type_mangonel",
	2: "armament_type_brandreth",
}

var ArmamentType_value = map[string]int32{
	"armament_type_none":      0,
	"armament_type_mangonel":  1,
	"armament_type_brandreth": 2,
}

func (x ArmamentType) String() string {
	return proto.EnumName(ArmamentType_name, int32(x))
}

func (ArmamentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{6}
}

//资源类型
type ResourceType int32

const (
	ResourceType_rt_none ResourceType = 0
	//粮草
	ResourceType_rt_grain ResourceType = 1
	//石料
	ResourceType_rt_stone ResourceType = 2
	//木材
	ResourceType_rt_wood ResourceType = 3
	//铁矿
	ResourceType_rt_iron ResourceType = 4
	//金币
	ResourceType_rt_gold ResourceType = 5
	//水晶
	ResourceType_rt_pebble ResourceType = 6
	//联盟币
	ResourceType_rt_alliCoin ResourceType = 7
	//行动力
	ResourceType_rt_execution ResourceType = 8
	//体力
	ResourceType_rt_strength ResourceType = 9
	//行军令
	ResourceType_rt_march_order ResourceType = 10
)

var ResourceType_name = map[int32]string{
	0:  "rt_none",
	1:  "rt_grain",
	2:  "rt_stone",
	3:  "rt_wood",
	4:  "rt_iron",
	5:  "rt_gold",
	6:  "rt_pebble",
	7:  "rt_alliCoin",
	8:  "rt_execution",
	9:  "rt_strength",
	10: "rt_march_order",
}

var ResourceType_value = map[string]int32{
	"rt_none":        0,
	"rt_grain":       1,
	"rt_stone":       2,
	"rt_wood":        3,
	"rt_iron":        4,
	"rt_gold":        5,
	"rt_pebble":      6,
	"rt_alliCoin":    7,
	"rt_execution":   8,
	"rt_strength":    9,
	"rt_march_order": 10,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}

func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{7}
}

//建筑操作类型枚举
type BuildingOperateType int32

const (
	//空闲，无操作
	BuildingOperateType_bot_none_building_operate BuildingOperateType = 0
	//造建筑
	BuildingOperateType_bot_create_building BuildingOperateType = 2
	//升级建筑
	BuildingOperateType_bot_upgrade_building BuildingOperateType = 3
	//拆建筑
	BuildingOperateType_bot_delete_building BuildingOperateType = 4
)

var BuildingOperateType_name = map[int32]string{
	0: "bot_none_building_operate",
	2: "bot_create_building",
	3: "bot_upgrade_building",
	4: "bot_delete_building",
}

var BuildingOperateType_value = map[string]int32{
	"bot_none_building_operate": 0,
	"bot_create_building":       2,
	"bot_upgrade_building":      3,
	"bot_delete_building":       4,
}

func (x BuildingOperateType) String() string {
	return proto.EnumName(BuildingOperateType_name, int32(x))
}

func (BuildingOperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{8}
}

//消耗、奖励类型
type CostAwardType int32

const (
	//空消耗
	CostAwardType_cat_none CostAwardType = 0
	//数值类型的资源,粮食、石料等
	CostAwardType_cat_value_res CostAwardType = 2
	//物品类型消耗
	CostAwardType_cat_goods CostAwardType = 3
)

var CostAwardType_name = map[int32]string{
	0: "cat_none",
	2: "cat_value_res",
	3: "cat_goods",
}

var CostAwardType_value = map[string]int32{
	"cat_none":      0,
	"cat_value_res": 2,
	"cat_goods":     3,
}

func (x CostAwardType) String() string {
	return proto.EnumName(CostAwardType_name, int32(x))
}

func (CostAwardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{9}
}

//总的背包类型
type GoodsBagType int32

const (
	GoodsBagType_gbt_none GoodsBagType = 0
	//特殊
	GoodsBagType_gbt_special GoodsBagType = 1
	//资源
	GoodsBagType_gbt_res GoodsBagType = 2
	//加速
	GoodsBagType_gbt_accelerate GoodsBagType = 3
	//战争
	GoodsBagType_gbt_war GoodsBagType = 4
	//宝箱
	GoodsBagType_gbt_treasure_box GoodsBagType = 5
	//装备
	GoodsBagType_gbt_equip GoodsBagType = 6
	//宝石
	GoodsBagType_gbt_gem GoodsBagType = 7
	//材料
	GoodsBagType_gbt_material GoodsBagType = 8
)

var GoodsBagType_name = map[int32]string{
	0: "gbt_none",
	1: "gbt_special",
	2: "gbt_res",
	3: "gbt_accelerate",
	4: "gbt_war",
	5: "gbt_treasure_box",
	6: "gbt_equip",
	7: "gbt_gem",
	8: "gbt_material",
}

var GoodsBagType_value = map[string]int32{
	"gbt_none":         0,
	"gbt_special":      1,
	"gbt_res":          2,
	"gbt_accelerate":   3,
	"gbt_war":          4,
	"gbt_treasure_box": 5,
	"gbt_equip":        6,
	"gbt_gem":          7,
	"gbt_material":     8,
}

func (x GoodsBagType) String() string {
	return proto.EnumName(GoodsBagType_name, int32(x))
}

func (GoodsBagType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{10}
}

//物品是否可以使用
type GoodsCanUseType int32

const (
	//不能用
	GoodsCanUseType_gcut_none GoodsCanUseType = 0
	//能用1个
	GoodsCanUseType_gcut_one GoodsCanUseType = 1
	//能用多个
	GoodsCanUseType_gcut_multi GoodsCanUseType = 2
)

var GoodsCanUseType_name = map[int32]string{
	0: "gcut_none",
	1: "gcut_one",
	2: "gcut_multi",
}

var GoodsCanUseType_value = map[string]int32{
	"gcut_none":  0,
	"gcut_one":   1,
	"gcut_multi": 2,
}

func (x GoodsCanUseType) String() string {
	return proto.EnumName(GoodsCanUseType_name, int32(x))
}

func (GoodsCanUseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{11}
}

//物品使用类型
type GoodsOpType int32

const (
	GoodsOpType_got_none GoodsOpType = 0
	//加资源
	GoodsOpType_got_add_res GoodsOpType = 1
	//加速
	GoodsOpType_got_accelerate GoodsOpType = 2
	//增加装备背包容量
	GoodsOpType_got_add_equip_bag_capacity GoodsOpType = 3
	//挖宝石
	GoodsOpType_got_remove_gem GoodsOpType = 4
	//立刻删除建筑
	GoodsOpType_got_immediately_remove_building GoodsOpType = 5
	//定点传送
	GoodsOpType_got_fix_point_transfer GoodsOpType = 6
	//随机传送
	GoodsOpType_got_random_transfer GoodsOpType = 7
	//重置天赋书
	GoodsOpType_got_reset_talent GoodsOpType = 8
	//天赋记忆书
	GoodsOpType_got_talent_memeory GoodsOpType = 9
	//行军召回
	GoodsOpType_got_march_recall GoodsOpType = 10
	//联盟名称更改
	GoodsOpType_got_faction_change_name GoodsOpType = 11
	//联盟代号更改
	GoodsOpType_got_faction_change_code GoodsOpType = 12
	//装备记录
	GoodsOpType_got_equipment_record GoodsOpType = 13
	//宝箱
	GoodsOpType_got_chest GoodsOpType = 100
)

var GoodsOpType_name = map[int32]string{
	0:   "got_none",
	1:   "got_add_res",
	2:   "got_accelerate",
	3:   "got_add_equip_bag_capacity",
	4:   "got_remove_gem",
	5:   "got_immediately_remove_building",
	6:   "got_fix_point_transfer",
	7:   "got_random_transfer",
	8:   "got_reset_talent",
	9:   "got_talent_memeory",
	10:  "got_march_recall",
	11:  "got_faction_change_name",
	12:  "got_faction_change_code",
	13:  "got_equipment_record",
	100: "got_chest",
}

var GoodsOpType_value = map[string]int32{
	"got_none":                        0,
	"got_add_res":                     1,
	"got_accelerate":                  2,
	"got_add_equip_bag_capacity":      3,
	"got_remove_gem":                  4,
	"got_immediately_remove_building": 5,
	"got_fix_point_transfer":          6,
	"got_random_transfer":             7,
	"got_reset_talent":                8,
	"got_talent_memeory":              9,
	"got_march_recall":                10,
	"got_faction_change_name":         11,
	"got_faction_change_code":         12,
	"got_equipment_record":            13,
	"got_chest":                       100,
}

func (x GoodsOpType) String() string {
	return proto.EnumName(GoodsOpType_name, int32(x))
}

func (GoodsOpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{12}
}

//加速物品类型
type AccelerateGoodsType int32

const (
	//通用加速类型
	AccelerateGoodsType_agt_accelerate_common AccelerateGoodsType = 0
	//加速建筑
	AccelerateGoodsType_agt_building_operate AccelerateGoodsType = 1
	//加速造兵
	AccelerateGoodsType_agt_train_warrior AccelerateGoodsType = 2
	//加速治疗
	AccelerateGoodsType_agt_treat_warrior AccelerateGoodsType = 3
	//加速城墙恢复血量
	AccelerateGoodsType_agt_wall_restore_hp AccelerateGoodsType = 4
	//加速升级箭塔
	AccelerateGoodsType_agt_upgrade_arrow_tower AccelerateGoodsType = 5
	//加速研究院研究
	AccelerateGoodsType_agt_research_item AccelerateGoodsType = 7
	//加速升级军械
	AccelerateGoodsType_agt_upgrade_armament AccelerateGoodsType = 6
	//加速锻造速度
	AccelerateGoodsType_agt_forge_equipment AccelerateGoodsType = 8
	//加速行军
	AccelerateGoodsType_agt_march AccelerateGoodsType = 9
)

var AccelerateGoodsType_name = map[int32]string{
	0: "agt_accelerate_common",
	1: "agt_building_operate",
	2: "agt_train_warrior",
	3: "agt_treat_warrior",
	4: "agt_wall_restore_hp",
	5: "agt_upgrade_arrow_tower",
	7: "agt_research_item",
	6: "agt_upgrade_armament",
	8: "agt_forge_equipment",
	9: "agt_march",
}

var AccelerateGoodsType_value = map[string]int32{
	"agt_accelerate_common":   0,
	"agt_building_operate":    1,
	"agt_train_warrior":       2,
	"agt_treat_warrior":       3,
	"agt_wall_restore_hp":     4,
	"agt_upgrade_arrow_tower": 5,
	"agt_research_item":       7,
	"agt_upgrade_armament":    6,
	"agt_forge_equipment":     8,
	"agt_march":               9,
}

func (x AccelerateGoodsType) String() string {
	return proto.EnumName(AccelerateGoodsType_name, int32(x))
}

func (AccelerateGoodsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{13}
}

//道具品质:1-白，2-绿，3-蓝，4-紫，5-橙
type GoodsQualityType int32

const (
	GoodsQualityType_gqt_none   GoodsQualityType = 0
	GoodsQualityType_gqt_white  GoodsQualityType = 1
	GoodsQualityType_gqt_green  GoodsQualityType = 2
	GoodsQualityType_gqt_blue   GoodsQualityType = 3
	GoodsQualityType_gqt_purple GoodsQualityType = 4
	GoodsQualityType_gqt_orange GoodsQualityType = 5
)

var GoodsQualityType_name = map[int32]string{
	0: "gqt_none",
	1: "gqt_white",
	2: "gqt_green",
	3: "gqt_blue",
	4: "gqt_purple",
	5: "gqt_orange",
}

var GoodsQualityType_value = map[string]int32{
	"gqt_none":   0,
	"gqt_white":  1,
	"gqt_green":  2,
	"gqt_blue":   3,
	"gqt_purple": 4,
	"gqt_orange": 5,
}

func (x GoodsQualityType) String() string {
	return proto.EnumName(GoodsQualityType_name, int32(x))
}

func (GoodsQualityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{14}
}

//商店类型
type StoreType int32

const (
	StoreType_st_none StoreType = 0
	//水晶商店
	StoreType_st_diamond StoreType = 1
	//联盟商店
	StoreType_st_alliance StoreType = 2
)

var StoreType_name = map[int32]string{
	0: "st_none",
	1: "st_diamond",
	2: "st_alliance",
}

var StoreType_value = map[string]int32{
	"st_none":     0,
	"st_diamond":  1,
	"st_alliance": 2,
}

func (x StoreType) String() string {
	return proto.EnumName(StoreType_name, int32(x))
}

func (StoreType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{15}
}

type FightAttributeType int32

const (
	FightAttributeType_fight_attribute_type_strength           FightAttributeType = 0
	FightAttributeType_fight_attribute_type_speed              FightAttributeType = 1
	FightAttributeType_fight_attribute_type_brains             FightAttributeType = 2
	FightAttributeType_fight_attribute_type_Hp                 FightAttributeType = 3
	FightAttributeType_fight_attribute_type_phy_atk            FightAttributeType = 4
	FightAttributeType_fight_attribute_type_magic_atk          FightAttributeType = 5
	FightAttributeType_fight_attribute_type_phy_def            FightAttributeType = 6
	FightAttributeType_fight_attribute_type_magic_def          FightAttributeType = 7
	FightAttributeType_fight_attribute_type_phy_crit           FightAttributeType = 8
	FightAttributeType_fight_attribute_type_magic_crit         FightAttributeType = 9
	FightAttributeType_fight_attribute_type_block_percent      FightAttributeType = 10
	FightAttributeType_fight_attribute_type_block_reduce       FightAttributeType = 11
	FightAttributeType_fight_attribute_type_hp_reply           FightAttributeType = 12
	FightAttributeType_fight_attribute_type_ruge_reply         FightAttributeType = 13
	FightAttributeType_fight_attribute_type_cure               FightAttributeType = 14
	FightAttributeType_fight_attribute_type_ignore_phy_def     FightAttributeType = 15
	FightAttributeType_fight_attribute_type_ignore_magic_def   FightAttributeType = 16
	FightAttributeType_fight_attribute_type_suck_blood         FightAttributeType = 17
	FightAttributeType_fight_attribute_type_Atk                FightAttributeType = 18
	FightAttributeType_fight_attribute_type_Def                FightAttributeType = 19
	FightAttributeType_fight_attribute_type_phy_crit_percent   FightAttributeType = 20
	FightAttributeType_fight_attribute_type_magic_crit_percent FightAttributeType = 21
	FightAttributeType_fight_attribute_type_MaxHp              FightAttributeType = 22
)

var FightAttributeType_name = map[int32]string{
	0:  "fight_attribute_type_strength",
	1:  "fight_attribute_type_speed",
	2:  "fight_attribute_type_brains",
	3:  "fight_attribute_type_Hp",
	4:  "fight_attribute_type_phy_atk",
	5:  "fight_attribute_type_magic_atk",
	6:  "fight_attribute_type_phy_def",
	7:  "fight_attribute_type_magic_def",
	8:  "fight_attribute_type_phy_crit",
	9:  "fight_attribute_type_magic_crit",
	10: "fight_attribute_type_block_percent",
	11: "fight_attribute_type_block_reduce",
	12: "fight_attribute_type_hp_reply",
	13: "fight_attribute_type_ruge_reply",
	14: "fight_attribute_type_cure",
	15: "fight_attribute_type_ignore_phy_def",
	16: "fight_attribute_type_ignore_magic_def",
	17: "fight_attribute_type_suck_blood",
	18: "fight_attribute_type_Atk",
	19: "fight_attribute_type_Def",
	20: "fight_attribute_type_phy_crit_percent",
	21: "fight_attribute_type_magic_crit_percent",
	22: "fight_attribute_type_MaxHp",
}

var FightAttributeType_value = map[string]int32{
	"fight_attribute_type_strength":           0,
	"fight_attribute_type_speed":              1,
	"fight_attribute_type_brains":             2,
	"fight_attribute_type_Hp":                 3,
	"fight_attribute_type_phy_atk":            4,
	"fight_attribute_type_magic_atk":          5,
	"fight_attribute_type_phy_def":            6,
	"fight_attribute_type_magic_def":          7,
	"fight_attribute_type_phy_crit":           8,
	"fight_attribute_type_magic_crit":         9,
	"fight_attribute_type_block_percent":      10,
	"fight_attribute_type_block_reduce":       11,
	"fight_attribute_type_hp_reply":           12,
	"fight_attribute_type_ruge_reply":         13,
	"fight_attribute_type_cure":               14,
	"fight_attribute_type_ignore_phy_def":     15,
	"fight_attribute_type_ignore_magic_def":   16,
	"fight_attribute_type_suck_blood":         17,
	"fight_attribute_type_Atk":                18,
	"fight_attribute_type_Def":                19,
	"fight_attribute_type_phy_crit_percent":   20,
	"fight_attribute_type_magic_crit_percent": 21,
	"fight_attribute_type_MaxHp":              22,
}

func (x FightAttributeType) String() string {
	return proto.EnumName(FightAttributeType_name, int32(x))
}

func (FightAttributeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{16}
}

//操作队列类型
type OperateQueueItemType int32

const (
	//建筑
	OperateQueueItemType_oqit_building OperateQueueItemType = 0
	//造小兵
	OperateQueueItemType_oqit_train OperateQueueItemType = 2
	//治疗小兵
	OperateQueueItemType_oqit_treat OperateQueueItemType = 3
	//箭塔
	OperateQueueItemType_oqit_arrow_tower OperateQueueItemType = 4
	//城墙结束燃烧
	OperateQueueItemType_oqit_city_wall_end_burn OperateQueueItemType = 5
	//城墙已到回到满血时间
	OperateQueueItemType_oqit_city_wall_restore_full_hp OperateQueueItemType = 6
	//研究物品
	OperateQueueItemType_oqit_research_item OperateQueueItemType = 7
	//升级军械完成
	OperateQueueItemType_oqit_end_upgrade_armament OperateQueueItemType = 8
	//锻造装备
	OperateQueueItemType_oqit_arrow_forge_equipment OperateQueueItemType = 9
	//庇护所藏兵
	OperateQueueItemType_oqit_sanctuary_hide_soldiers OperateQueueItemType = 10
)

var OperateQueueItemType_name = map[int32]string{
	0:  "oqit_building",
	2:  "oqit_train",
	3:  "oqit_treat",
	4:  "oqit_arrow_tower",
	5:  "oqit_city_wall_end_burn",
	6:  "oqit_city_wall_restore_full_hp",
	7:  "oqit_research_item",
	8:  "oqit_end_upgrade_armament",
	9:  "oqit_arrow_forge_equipment",
	10: "oqit_sanctuary_hide_soldiers",
}

var OperateQueueItemType_value = map[string]int32{
	"oqit_building":                  0,
	"oqit_train":                     2,
	"oqit_treat":                     3,
	"oqit_arrow_tower":               4,
	"oqit_city_wall_end_burn":        5,
	"oqit_city_wall_restore_full_hp": 6,
	"oqit_research_item":             7,
	"oqit_end_upgrade_armament":      8,
	"oqit_arrow_forge_equipment":     9,
	"oqit_sanctuary_hide_soldiers":   10,
}

func (x OperateQueueItemType) String() string {
	return proto.EnumName(OperateQueueItemType_name, int32(x))
}

func (OperateQueueItemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{17}
}

//联盟帮助类型
type FactionHelpType int32

const (
	//建筑类型
	FactionHelpType_fht_building FactionHelpType = 0
	//研发类型
	FactionHelpType_fht_research FactionHelpType = 1
)

var FactionHelpType_name = map[int32]string{
	0: "fht_building",
	1: "fht_research",
}

var FactionHelpType_value = map[string]int32{
	"fht_building": 0,
	"fht_research": 1,
}

func (x FactionHelpType) String() string {
	return proto.EnumName(FactionHelpType_name, int32(x))
}

func (FactionHelpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{18}
}

//行军地图类型
type MarchMapType int32

const (
	//攻击主城
	MarchMapType_MM_ATTACK_TOWN MarchMapType = 0
	//去采集资源
	MarchMapType_MM_COLLECT_RES MarchMapType = 3
	//侦查
	MarchMapType_MM_SPY_POSITION MarchMapType = 5
	//增援盟友
	MarchMapType_MM_REINFORCE_ALLY MarchMapType = 6
	//运输物资
	MarchMapType_MM_TRANSPORT_RES MarchMapType = 8
	//参与集结攻击
	MarchMapType_MM_PARTICIPATION_MASS_ATTACK MarchMapType = 9
	//集结攻击
	MarchMapType_MM_MASS_ATTACK MarchMapType = 10
	//驻扎
	MarchMapType_MM_CAMP MarchMapType = 11
	//野外讨伐
	MarchMapType_MM_ATK_MONSTER MarchMapType = 12
)

var MarchMapType_name = map[int32]string{
	0:  "MM_ATTACK_TOWN",
	3:  "MM_COLLECT_RES",
	5:  "MM_SPY_POSITION",
	6:  "MM_REINFORCE_ALLY",
	8:  "MM_TRANSPORT_RES",
	9:  "MM_PARTICIPATION_MASS_ATTACK",
	10: "MM_MASS_ATTACK",
	11: "MM_CAMP",
	12: "MM_ATK_MONSTER",
}

var MarchMapType_value = map[string]int32{
	"MM_ATTACK_TOWN":               0,
	"MM_COLLECT_RES":               3,
	"MM_SPY_POSITION":              5,
	"MM_REINFORCE_ALLY":            6,
	"MM_TRANSPORT_RES":             8,
	"MM_PARTICIPATION_MASS_ATTACK": 9,
	"MM_MASS_ATTACK":               10,
	"MM_CAMP":                      11,
	"MM_ATK_MONSTER":               12,
}

func (x MarchMapType) String() string {
	return proto.EnumName(MarchMapType_name, int32(x))
}

func (MarchMapType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{19}
}

//行军类型的状态
type MarchState int32

const (
	//前往目的地
	MarchState_MS_TO_DESTIONS MarchState = 0
	//停留目的地状态(播放攻击动画、增援中等)
	MarchState_MS_STOP_DESTIONS MarchState = 1
	//离开目的地(回家)
	MarchState_MS_LEAVE_DESTIONS MarchState = 2
)

var MarchState_name = map[int32]string{
	0: "MS_TO_DESTIONS",
	1: "MS_STOP_DESTIONS",
	2: "MS_LEAVE_DESTIONS",
}

var MarchState_value = map[string]int32{
	"MS_TO_DESTIONS":    0,
	"MS_STOP_DESTIONS":  1,
	"MS_LEAVE_DESTIONS": 2,
}

func (x MarchState) String() string {
	return proto.EnumName(MarchState_name, int32(x))
}

func (MarchState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{20}
}

//邮件类型
type MailType int32

const (
	MailType_mail_type_none MailType = 0
	//系统邮件
	MailType_mail_type_system MailType = 1
	//战报
	MailType_mail_type_battle_report MailType = 2
	//讨伐战报
	MailType_mail_type_attack_report MailType = 3
	//玩家邮件
	MailType_mail_type_player_mail MailType = 4
	//采集报告
	MailType_mail_type_collect_report MailType = 5
	//收藏
	MailType_mail_type_enshrine MailType = 6
)

var MailType_name = map[int32]string{
	0: "mail_type_none",
	1: "mail_type_system",
	2: "mail_type_battle_report",
	3: "mail_type_attack_report",
	4: "mail_type_player_mail",
	5: "mail_type_collect_report",
	6: "mail_type_enshrine",
}

var MailType_value = map[string]int32{
	"mail_type_none":           0,
	"mail_type_system":         1,
	"mail_type_battle_report":  2,
	"mail_type_attack_report":  3,
	"mail_type_player_mail":    4,
	"mail_type_collect_report": 5,
	"mail_type_enshrine":       6,
}

func (x MailType) String() string {
	return proto.EnumName(MailType_name, int32(x))
}

func (MailType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{21}
}

//装备类型
type EquipType int32

const (
	EquipType_equip_type_none EquipType = 0
	//武器
	EquipType_equip_type_weapon EquipType = 1
	//衣服
	EquipType_equip_type_clothes EquipType = 2
	//副手
	EquipType_equip_type_hand EquipType = 3
	//腿部
	EquipType_equip_type_leg EquipType = 4
	//头部
	EquipType_equip_type_head EquipType = 5
	//饰品
	EquipType_equip_type_accessories EquipType = 6
)

var EquipType_name = map[int32]string{
	0: "equip_type_none",
	1: "equip_type_weapon",
	2: "equip_type_clothes",
	3: "equip_type_hand",
	4: "equip_type_leg",
	5: "equip_type_head",
	6: "equip_type_accessories",
}

var EquipType_value = map[string]int32{
	"equip_type_none":        0,
	"equip_type_weapon":      1,
	"equip_type_clothes":     2,
	"equip_type_hand":        3,
	"equip_type_leg":         4,
	"equip_type_head":        5,
	"equip_type_accessories": 6,
}

func (x EquipType) String() string {
	return proto.EnumName(EquipType_name, int32(x))
}

func (EquipType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{22}
}

//宝石、材料、战纹 操作类型
type ItemOperateType int32

const (
	//合成
	ItemOperateType_iot_compound ItemOperateType = 0
	//还原
	ItemOperateType_iot_restore ItemOperateType = 1
)

var ItemOperateType_name = map[int32]string{
	0: "iot_compound",
	1: "iot_restore",
}

var ItemOperateType_value = map[string]int32{
	"iot_compound": 0,
	"iot_restore":  1,
}

func (x ItemOperateType) String() string {
	return proto.EnumName(ItemOperateType_name, int32(x))
}

func (ItemOperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{23}
}

//玩家装备操作类型
type EquipOperateType int32

const (
	//穿装备
	EquipOperateType_eot_wear EquipOperateType = 0
	//卸装备
	EquipOperateType_eot_remove EquipOperateType = 1
)

var EquipOperateType_name = map[int32]string{
	0: "eot_wear",
	1: "eot_remove",
}

var EquipOperateType_value = map[string]int32{
	"eot_wear":   0,
	"eot_remove": 1,
}

func (x EquipOperateType) String() string {
	return proto.EnumName(EquipOperateType_name, int32(x))
}

func (EquipOperateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{24}
}

//领主装备位置
type LordEquipPlace int32

const (
	//none
	LordEquipPlace_lep_none LordEquipPlace = 0
	//武器
	LordEquipPlace_lep_equip LordEquipPlace = 1
	//盔甲
	LordEquipPlace_lep_corselet LordEquipPlace = 2
	//副手
	LordEquipPlace_lep_hand LordEquipPlace = 3
	//鞋子
	LordEquipPlace_lep_shoe LordEquipPlace = 4
	//头盔
	LordEquipPlace_lep_helmet LordEquipPlace = 5
	//饰品1
	LordEquipPlace_lep_accessories1 LordEquipPlace = 6
	//饰品2
	LordEquipPlace_lep_accessories2 LordEquipPlace = 7
	//饰品3
	LordEquipPlace_lep_accessories3 LordEquipPlace = 8
)

var LordEquipPlace_name = map[int32]string{
	0: "lep_none",
	1: "lep_equip",
	2: "lep_corselet",
	3: "lep_hand",
	4: "lep_shoe",
	5: "lep_helmet",
	6: "lep_accessories1",
	7: "lep_accessories2",
	8: "lep_accessories3",
}

var LordEquipPlace_value = map[string]int32{
	"lep_none":         0,
	"lep_equip":        1,
	"lep_corselet":     2,
	"lep_hand":         3,
	"lep_shoe":         4,
	"lep_helmet":       5,
	"lep_accessories1": 6,
	"lep_accessories2": 7,
	"lep_accessories3": 8,
}

func (x LordEquipPlace) String() string {
	return proto.EnumName(LordEquipPlace_name, int32(x))
}

func (LordEquipPlace) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{25}
}

//宝石孔的位置
type GemHolePlace int32

const (
	GemHolePlace_ghp_one   GemHolePlace = 0
	GemHolePlace_ghp_two   GemHolePlace = 1
	GemHolePlace_ghp_three GemHolePlace = 2
	GemHolePlace_ghp_four  GemHolePlace = 3
)

var GemHolePlace_name = map[int32]string{
	0: "ghp_one",
	1: "ghp_two",
	2: "ghp_three",
	3: "ghp_four",
}

var GemHolePlace_value = map[string]int32{
	"ghp_one":   0,
	"ghp_two":   1,
	"ghp_three": 2,
	"ghp_four":  3,
}

func (x GemHolePlace) String() string {
	return proto.EnumName(GemHolePlace_name, int32(x))
}

func (GemHolePlace) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{26}
}

type LanguageType int32

const (
	//所有
	LanguageType_lt_All LanguageType = 0
	//简体中文
	LanguageType_lt_Chinese LanguageType = 1
	//英语
	LanguageType_lt_English LanguageType = 2
	//法语
	LanguageType_lt_French LanguageType = 3
	//德语
	LanguageType_lt_German LanguageType = 4
	//俄语
	LanguageType_lt_Ruassian LanguageType = 5
	//西班牙语
	LanguageType_lt_Spanish LanguageType = 6
	//葡萄牙语
	LanguageType_lt_Portuguese LanguageType = 7
	//意大利语
	LanguageType_lt_Italian LanguageType = 8
	//荷兰语
	LanguageType_lt_Dutch LanguageType = 9
	//土耳其语
	LanguageType_lt_Osmanli LanguageType = 10
	//波兰语
	LanguageType_lt_Polish LanguageType = 11
	//罗马尼亚语
	LanguageType_lt_Romanian LanguageType = 12
	//泰语
	LanguageType_lt_Thai LanguageType = 13
	//波斯语
	LanguageType_lt_Fasi LanguageType = 14
	//阿拉伯语
	LanguageType_lt_Arabic LanguageType = 15
	//巴哈萨
	LanguageType_lt_Bahasa LanguageType = 16
	//中国繁体
	LanguageType_lt_Chinese_Traditional LanguageType = 17
	//韩语
	LanguageType_lt_Korean LanguageType = 18
	//日语
	LanguageType_lt_Japanese LanguageType = 19
)

var LanguageType_name = map[int32]string{
	0:  "lt_All",
	1:  "lt_Chinese",
	2:  "lt_English",
	3:  "lt_French",
	4:  "lt_German",
	5:  "lt_Ruassian",
	6:  "lt_Spanish",
	7:  "lt_Portuguese",
	8:  "lt_Italian",
	9:  "lt_Dutch",
	10: "lt_Osmanli",
	11: "lt_Polish",
	12: "lt_Romanian",
	13: "lt_Thai",
	14: "lt_Fasi",
	15: "lt_Arabic",
	16: "lt_Bahasa",
	17: "lt_Chinese_Traditional",
	18: "lt_Korean",
	19: "lt_Japanese",
}

var LanguageType_value = map[string]int32{
	"lt_All":                 0,
	"lt_Chinese":             1,
	"lt_English":             2,
	"lt_French":              3,
	"lt_German":              4,
	"lt_Ruassian":            5,
	"lt_Spanish":             6,
	"lt_Portuguese":          7,
	"lt_Italian":             8,
	"lt_Dutch":               9,
	"lt_Osmanli":             10,
	"lt_Polish":              11,
	"lt_Romanian":            12,
	"lt_Thai":                13,
	"lt_Fasi":                14,
	"lt_Arabic":              15,
	"lt_Bahasa":              16,
	"lt_Chinese_Traditional": 17,
	"lt_Korean":              18,
	"lt_Japanese":            19,
}

func (x LanguageType) String() string {
	return proto.EnumName(LanguageType_name, int32(x))
}

func (LanguageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{27}
}

type SpyType int32

const (
	//玩家城市
	SpyType_st_player_city SpyType = 0
	//玩家占领资源点
	SpyType_st_player_capture_resPoint SpyType = 1
	//野外都城
	SpyType_st_wild_city SpyType = 2
	//王城
	SpyType_st_royal_city SpyType = 3
	//野怪
	SpyType_st_monster SpyType = 4
	//营地
	SpyType_st_camp SpyType = 5
)

var SpyType_name = map[int32]string{
	0: "st_player_city",
	1: "st_player_capture_resPoint",
	2: "st_wild_city",
	3: "st_royal_city",
	4: "st_monster",
	5: "st_camp",
}

var SpyType_value = map[string]int32{
	"st_player_city":             0,
	"st_player_capture_resPoint": 1,
	"st_wild_city":               2,
	"st_royal_city":              3,
	"st_monster":                 4,
	"st_camp":                    5,
}

func (x SpyType) String() string {
	return proto.EnumName(SpyType_name, int32(x))
}

func (SpyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{28}
}

//申请加入联盟的结果类型
type JoinFactionResultType int32

const (
	//真正加入成功
	JoinFactionResultType_jfrt_ok JoinFactionResultType = 0
	//加入失败,被拒绝加入
	JoinFactionResultType_jfrt_fail JoinFactionResultType = 1
	//申请成功，等待审核
	JoinFactionResultType_jfrt_wait_examine JoinFactionResultType = 2
)

var JoinFactionResultType_name = map[int32]string{
	0: "jfrt_ok",
	1: "jfrt_fail",
	2: "jfrt_wait_examine",
}

var JoinFactionResultType_value = map[string]int32{
	"jfrt_ok":           0,
	"jfrt_fail":         1,
	"jfrt_wait_examine": 2,
}

func (x JoinFactionResultType) String() string {
	return proto.EnumName(JoinFactionResultType_name, int32(x))
}

func (JoinFactionResultType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{29}
}

//可以集结攻击的目标类型
type MassAttackTargetType int32

const (
	//集结攻击玩家主城
	MassAttackTargetType_matt_player_town MassAttackTargetType = 0
	//集结攻击野怪
	MassAttackTargetType_matt_monster MassAttackTargetType = 1
)

var MassAttackTargetType_name = map[int32]string{
	0: "matt_player_town",
	1: "matt_monster",
}

var MassAttackTargetType_value = map[string]int32{
	"matt_player_town": 0,
	"matt_monster":     1,
}

func (x MassAttackTargetType) String() string {
	return proto.EnumName(MassAttackTargetType_name, int32(x))
}

func (MassAttackTargetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{30}
}

// 集结状态枚举
type MassStateType int32

const (
	//集结准备中
	MassStateType_mass_state_type_readying MassStateType = 0
	//准备时间结束，等人到齐
	MassStateType_mass_state_type_wait_all_soldier_come_here MassStateType = 1
	//正式出发，行军中
	MassStateType_mass_state_type_soldier_going MassStateType = 2
)

var MassStateType_name = map[int32]string{
	0: "mass_state_type_readying",
	1: "mass_state_type_wait_all_soldier_come_here",
	2: "mass_state_type_soldier_going",
}

var MassStateType_value = map[string]int32{
	"mass_state_type_readying":                   0,
	"mass_state_type_wait_all_soldier_come_here": 1,
	"mass_state_type_soldier_going":              2,
}

func (x MassStateType) String() string {
	return proto.EnumName(MassStateType_name, int32(x))
}

func (MassStateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{31}
}

//英雄装备位置
type HeroEquipPos int32

const (
	HeroEquipPos_pos_none   HeroEquipPos = 0
	HeroEquipPos_pos_first  HeroEquipPos = 1
	HeroEquipPos_pos_second HeroEquipPos = 2
	HeroEquipPos_pos_third  HeroEquipPos = 3
	HeroEquipPos_pos_fourth HeroEquipPos = 4
	HeroEquipPos_pos_fifth  HeroEquipPos = 5
	HeroEquipPos_pos_sixth  HeroEquipPos = 6
)

var HeroEquipPos_name = map[int32]string{
	0: "pos_none",
	1: "pos_first",
	2: "pos_second",
	3: "pos_third",
	4: "pos_fourth",
	5: "pos_fifth",
	6: "pos_sixth",
}

var HeroEquipPos_value = map[string]int32{
	"pos_none":   0,
	"pos_first":  1,
	"pos_second": 2,
	"pos_third":  3,
	"pos_fourth": 4,
	"pos_fifth":  5,
	"pos_sixth":  6,
}

func (x HeroEquipPos) String() string {
	return proto.EnumName(HeroEquipPos_name, int32(x))
}

func (HeroEquipPos) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{32}
}

//主线任务状态
type TaskStatus int32

const (
	//未完成
	TaskStatus_ts_uncomplete TaskStatus = 0
	//完成未领取
	TaskStatus_ts_completed TaskStatus = 1
	//已领取
	TaskStatus_ts_received TaskStatus = 2
)

var TaskStatus_name = map[int32]string{
	0: "ts_uncomplete",
	1: "ts_completed",
	2: "ts_received",
}

var TaskStatus_value = map[string]int32{
	"ts_uncomplete": 0,
	"ts_completed":  1,
	"ts_received":   2,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c4ce4d22f26e55a, []int{33}
}

func init() {
	proto.RegisterEnum("c2game.ErrorCodeType", ErrorCodeType_name, ErrorCodeType_value)
	proto.RegisterEnum("c2game.AttributeType", AttributeType_name, AttributeType_value)
	proto.RegisterEnum("c2game.CityBuildingCategoryType", CityBuildingCategoryType_name, CityBuildingCategoryType_value)
	proto.RegisterEnum("c2game.CityBuildingType", CityBuildingType_name, CityBuildingType_value)
	proto.RegisterEnum("c2game.InitialType", InitialType_name, InitialType_value)
	proto.RegisterEnum("c2game.AtkType", AtkType_name, AtkType_value)
	proto.RegisterEnum("c2game.ArmamentType", ArmamentType_name, ArmamentType_value)
	proto.RegisterEnum("c2game.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterEnum("c2game.BuildingOperateType", BuildingOperateType_name, BuildingOperateType_value)
	proto.RegisterEnum("c2game.CostAwardType", CostAwardType_name, CostAwardType_value)
	proto.RegisterEnum("c2game.GoodsBagType", GoodsBagType_name, GoodsBagType_value)
	proto.RegisterEnum("c2game.GoodsCanUseType", GoodsCanUseType_name, GoodsCanUseType_value)
	proto.RegisterEnum("c2game.GoodsOpType", GoodsOpType_name, GoodsOpType_value)
	proto.RegisterEnum("c2game.AccelerateGoodsType", AccelerateGoodsType_name, AccelerateGoodsType_value)
	proto.RegisterEnum("c2game.GoodsQualityType", GoodsQualityType_name, GoodsQualityType_value)
	proto.RegisterEnum("c2game.StoreType", StoreType_name, StoreType_value)
	proto.RegisterEnum("c2game.FightAttributeType", FightAttributeType_name, FightAttributeType_value)
	proto.RegisterEnum("c2game.OperateQueueItemType", OperateQueueItemType_name, OperateQueueItemType_value)
	proto.RegisterEnum("c2game.FactionHelpType", FactionHelpType_name, FactionHelpType_value)
	proto.RegisterEnum("c2game.MarchMapType", MarchMapType_name, MarchMapType_value)
	proto.RegisterEnum("c2game.MarchState", MarchState_name, MarchState_value)
	proto.RegisterEnum("c2game.MailType", MailType_name, MailType_value)
	proto.RegisterEnum("c2game.EquipType", EquipType_name, EquipType_value)
	proto.RegisterEnum("c2game.ItemOperateType", ItemOperateType_name, ItemOperateType_value)
	proto.RegisterEnum("c2game.EquipOperateType", EquipOperateType_name, EquipOperateType_value)
	proto.RegisterEnum("c2game.LordEquipPlace", LordEquipPlace_name, LordEquipPlace_value)
	proto.RegisterEnum("c2game.GemHolePlace", GemHolePlace_name, GemHolePlace_value)
	proto.RegisterEnum("c2game.LanguageType", LanguageType_name, LanguageType_value)
	proto.RegisterEnum("c2game.SpyType", SpyType_name, SpyType_value)
	proto.RegisterEnum("c2game.JoinFactionResultType", JoinFactionResultType_name, JoinFactionResultType_value)
	proto.RegisterEnum("c2game.MassAttackTargetType", MassAttackTargetType_name, MassAttackTargetType_value)
	proto.RegisterEnum("c2game.MassStateType", MassStateType_name, MassStateType_value)
	proto.RegisterEnum("c2game.HeroEquipPos", HeroEquipPos_name, HeroEquipPos_value)
	proto.RegisterEnum("c2game.TaskStatus", TaskStatus_name, TaskStatus_value)
}

func init() { proto.RegisterFile("p_enum.proto", fileDescriptor_1c4ce4d22f26e55a) }

var fileDescriptor_1c4ce4d22f26e55a = []byte{
	// 5277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x7b, 0x57, 0x94, 0x1c, 0xc7,
	0x75, 0x36, 0x7a, 0x00, 0x2c, 0x16, 0x05, 0x2c, 0xf6, 0xa2, 0x09, 0x80, 0x00, 0x49, 0x30, 0x81,
	0x14, 0xc5, 0xa1, 0x44, 0xfd, 0x04, 0x79, 0x7e, 0x9f, 0xe3, 0xb7, 0xc1, 0xee, 0x2c, 0x76, 0x84,
	0x49, 0x9e, 0x9d, 0x25, 0x84, 0xa7, 0x72, 0x4d, 0x77, 0x4d, 0x4f, 0x73, 0x7b, 0xba, 0x07, 0xd5,
	0x35, 0xbb, 0x58, 0x05, 0x5b, 0x56, 0x96, 0x2c, 0x59, 0xc9, 0x56, 0x96, 0xad, 0x1c, 0xa8, 0x9c,
	0x83, 0x6d, 0x05, 0x67, 0x65, 0x2b, 0x39, 0x4a, 0x0e, 0x2f, 0xf6, 0xb1, 0xfd, 0xe0, 0x6c, 0x39,
	0xbc, 0xf8, 0xdc, 0xaa, 0xee, 0xea, 0xee, 0xd9, 0xde, 0xc1, 0xf1, 0x0b, 0x0e, 0xea, 0xde, 0xaf,
	0x6e, 0xdd, 0x54, 0xb7, 0x6e, 0x4d, 0xd7, 0x92, 0xe3, 0x13, 0xca, 0xc3, 0xe9, 0xf8, 0xe1, 0x89,
	0x88, 0x64, 0x64, 0x2f, 0x38, 0x17, 0x3d, 0x36, 0xe6, 0xd5, 0x7f, 0xbc, 0x93, 0x2c, 0x73, 0x21,
	0x22, 0x41, 0x9d, 0xc8, 0xe5, 0x54, 0xee, 0x4e, 0xb8, 0x7d, 0x86, 0xd8, 0xdc, 0x91, 0x54, 0xf0,
	0x98, 0x86, 0x91, 0xa4, 0x3c, 0x8c, 0xa6, 0xde, 0x08, 0x0e, 0xd8, 0xa7, 0xc9, 0x49, 0xa4, 0x23,
	0x6d, 0x18, 0x4d, 0x43, 0x97, 0x3a, 0x43, 0x0f, 0x2a, 0xf6, 0x49, 0xb2, 0x84, 0x64, 0xe9, 0x8f,
	0x39, 0x0d, 0x98, 0xe4, 0x70, 0x30, 0x95, 0x30, 0x61, 0x71, 0x4c, 0x87, 0x82, 0x73, 0xc5, 0x84,
	0x43, 0xf6, 0x9d, 0xe4, 0x36, 0xa4, 0x47, 0x13, 0x2e, 0x98, 0xd4, 0x54, 0x25, 0x4e, 0x70, 0xe6,
	0x8c, 0xe0, 0xb0, 0x7d, 0x07, 0x39, 0x8b, 0xfc, 0x20, 0x12, 0xae, 0xa6, 0xd1, 0x31, 0xbb, 0x41,
	0x03, 0xbe, 0xcd, 0x03, 0x58, 0xb0, 0xcf, 0x92, 0x53, 0xc8, 0x75, 0x02, 0x9f, 0x87, 0x92, 0x32,
	0xe1, 0x51, 0xa5, 0x39, 0x1c, 0xb1, 0xcf, 0x93, 0x73, 0xc8, 0x89, 0xb9, 0xd8, 0xe6, 0x82, 0xfa,
	0xa1, 0xe4, 0x22, 0x64, 0x41, 0xc2, 0x5e, 0x4c, 0x27, 0x4e, 0x02, 0xb6, 0xcb, 0x45, 0xa6, 0x3f,
	0x1c, 0xb5, 0xef, 0x22, 0xb7, 0xa7, 0x26, 0x8d, 0xd8, 0x36, 0xa7, 0x72, 0xa4, 0x7d, 0x40, 0xaf,
	0x4f, 0xf9, 0x94, 0x03, 0xb1, 0xcf, 0x91, 0xd3, 0x08, 0x60, 0x82, 0x33, 0x85, 0x62, 0x8e, 0xf4,
	0xb7, 0xd1, 0x48, 0x37, 0x75, 0x87, 0x61, 0x45, 0x13, 0x1e, 0x02, 0xb7, 0x6f, 0x27, 0xb7, 0x22,
	0x79, 0x30, 0xf5, 0x03, 0xd7, 0x0f, 0x3d, 0x2d, 0x89, 0x0e, 0xa7, 0x41, 0x00, 0x43, 0xfb, 0x1e,
	0x72, 0x5e, 0x69, 0x22, 0xf8, 0x25, 0xe4, 0x6b, 0xd3, 0xf2, 0x5e, 0xf6, 0x52, 0x1f, 0x99, 0xf9,
	0x93, 0x48, 0x87, 0x21, 0xe0, 0x1e, 0x0b, 0x60, 0x64, 0xdf, 0x46, 0xce, 0x14, 0xf8, 0x6a, 0xf2,
	0x0d, 0x3f, 0x96, 0xe0, 0xdb, 0x17, 0xc8, 0x5d, 0x05, 0x9e, 0x33, 0xf4, 0xa8, 0xc3, 0xc2, 0xc4,
	0xc7, 0xe3, 0x68, 0x9b, 0xc3, 0x13, 0xa9, 0x93, 0x0b, 0x02, 0x12, 0x7d, 0x60, 0xcb, 0xbe, 0x9f,
	0xdc, 0x53, 0xe0, 0xf2, 0x1b, 0x0e, 0xe7, 0xae, 0x1e, 0xab, 0x68, 0x84, 0xd3, 0x31, 0x04, 0x7b,
	0xac, 0xdc, 0xe5, 0x52, 0xc7, 0x6a, 0x1b, 0xc6, 0xf6, 0x03, 0xe4, 0x02, 0x32, 0x95, 0x47, 0x77,
	0xd0, 0xd3, 0xdc, 0xa5, 0x3b, 0x4c, 0x08, 0x3f, 0x12, 0x79, 0x55, 0xc2, 0x3d, 0x52, 0x8c, 0x23,
	0x42, 0xb8, 0x91, 0x6a, 0x22, 0x05, 0xf3, 0x43, 0x33, 0x3d, 0xcb, 0x0a, 0x27, 0x9a, 0x86, 0x12,
	0x76, 0xd3, 0xe0, 0x2a, 0x18, 0xca, 0x48, 0x90, 0xf0, 0xec, 0x34, 0xb8, 0xae, 0x1f, 0xc7, 0x85,
	0xe5, 0x13, 0x57, 0x3f, 0x27, 0x8d, 0x46, 0x16, 0xfd, 0x59, 0x19, 0xcf, 0x4d, 0x65, 0xa4, 0xd3,
	0x55, 0x6e, 0x20, 0x7e, 0x1a, 0x06, 0x91, 0xb3, 0x05, 0xcf, 0xb3, 0xcf, 0x6b, 0x6f, 0xc6, 0x32,
	0x12, 0x3c, 0x63, 0xeb, 0x80, 0xbc, 0xc0, 0xb2, 0x1f, 0x24, 0xf7, 0x65, 0xec, 0xc9, 0x54, 0x38,
	0x23, 0x16, 0x73, 0xad, 0xbb, 0x02, 0xfa, 0x81, 0x8e, 0xeb, 0x0b, 0x2d, 0xfb, 0x2e, 0x1d, 0x78,
	0x0d, 0x55, 0xb9, 0xe6, 0xba, 0x94, 0x05, 0x81, 0xcf, 0x42, 0x87, 0xc3, 0x8b, 0x2c, 0xfb, 0x6e,
	0xad, 0x4b, 0x06, 0x88, 0x79, 0x10, 0xa8, 0x94, 0xf5, 0x25, 0x1f, 0xc3, 0x8b, 0x2d, 0xfb, 0x36,
	0x9d, 0xad, 0x69, 0xc8, 0xa7, 0x31, 0xa7, 0x5e, 0x14, 0xb9, 0x31, 0xbc, 0xd2, 0x4a, 0x15, 0x1d,
	0x30, 0x8f, 0xc6, 0x13, 0xe6, 0xf0, 0xbc, 0x2b, 0x5e, 0x65, 0xd9, 0x55, 0x72, 0xbf, 0x32, 0x74,
	0x26, 0x5c, 0x7b, 0x35, 0x7d, 0x83, 0x65, 0xdf, 0xae, 0x53, 0xd0, 0x18, 0x4a, 0x47, 0x51, 0x3c,
	0xf1, 0x25, 0x0b, 0xe0, 0x8d, 0x96, 0x7d, 0x87, 0x8e, 0x69, 0xe2, 0x50, 0xce, 0xa4, 0xd9, 0x04,
	0xf0, 0x26, 0x63, 0x24, 0x9a, 0xb6, 0xa3, 0x6b, 0x88, 0x5a, 0xc0, 0xe5, 0x43, 0xce, 0x24, 0xbc,
	0xd9, 0x18, 0x99, 0x8b, 0x49, 0x41, 0xc4, 0x5b, 0x8a, 0x0b, 0x08, 0x1e, 0x73, 0x26, 0x9c, 0x51,
	0xc2, 0x7d, 0x87, 0x65, 0x5f, 0x20, 0x77, 0x26, 0xc5, 0x4b, 0x33, 0xf2, 0x3b, 0xcc, 0x51, 0xc6,
	0xbe, 0xd3, 0xb2, 0x9f, 0xa2, 0x53, 0x6b, 0x22, 0x72, 0x12, 0x74, 0x54, 0x5d, 0x3e, 0xc0, 0xc0,
	0xfa, 0xa1, 0x07, 0xef, 0xda, 0xab, 0xcc, 0xcc, 0x72, 0xef, 0xb6, 0xec, 0x3b, 0x75, 0xe5, 0x49,
	0x9c, 0x93, 0x01, 0x30, 0x13, 0xe0, 0x3d, 0xc6, 0xeb, 0x86, 0xae, 0xfd, 0xa5, 0xa7, 0xbf, 0xd7,
	0xb2, 0xef, 0x21, 0x77, 0x14, 0xd8, 0xb3, 0x45, 0xef, 0x7d, 0xc6, 0x63, 0x7b, 0x75, 0x50, 0x41,
	0x7f, 0xbf, 0xf1, 0x07, 0xbf, 0x3e, 0xf5, 0x27, 0xa6, 0x5a, 0x8c, 0x99, 0x74, 0x46, 0xf0, 0x01,
	0xcb, 0x3e, 0x4b, 0x6e, 0x29, 0x16, 0x6d, 0x85, 0x83, 0x27, 0x2d, 0xfb, 0x9c, 0xde, 0x38, 0x7b,
	0x4a, 0xd0, 0x87, 0x8c, 0x5a, 0xc3, 0x48, 0x78, 0xe8, 0xfa, 0x3d, 0x90, 0x0f, 0x5b, 0xf6, 0xad,
	0xba, 0xc4, 0xeb, 0x55, 0x91, 0xb5, 0xc3, 0x99, 0x80, 0x8f, 0x58, 0xf6, 0x19, 0x5d, 0x16, 0x47,
	0x51, 0xc0, 0xb3, 0xb2, 0xf8, 0x51, 0xa3, 0xc8, 0x24, 0xc0, 0xdc, 0x43, 0x4b, 0x5c, 0xea, 0xf1,
	0x31, 0x7c, 0xcc, 0xa4, 0x93, 0xa9, 0xbd, 0x1e, 0x1f, 0x53, 0x3f, 0x0c, 0xd8, 0x2e, 0x7c, 0xdc,
	0xa4, 0x34, 0x32, 0x91, 0xae, 0x32, 0x51, 0xf1, 0x3e, 0x61, 0x78, 0x99, 0x0e, 0x89, 0xc2, 0xf0,
	0xc9, 0xbd, 0x6e, 0x4b, 0x6d, 0xd1, 0xae, 0xff, 0x54, 0xb6, 0xdd, 0x58, 0xe8, 0xc8, 0x29, 0x13,
	0xbb, 0x74, 0xc4, 0x62, 0x1a, 0x47, 0x81, 0xeb, 0x73, 0x11, 0xc3, 0xa7, 0x33, 0x40, 0x42, 0x4a,
	0x32, 0x35, 0xdd, 0x06, 0x9f, 0x29, 0x91, 0xa0, 0xf6, 0x64, 0x2a, 0xe1, 0xb3, 0x46, 0x3f, 0xa3,
	0x73, 0x6a, 0x05, 0x7c, 0xce, 0x24, 0xce, 0xf5, 0x29, 0x0b, 0x7c, 0xa9, 0xa7, 0x32, 0x4f, 0x70,
	0x3e, 0xe6, 0xa1, 0x84, 0xcf, 0x9b, 0xe8, 0x18, 0xdd, 0xd3, 0x23, 0xe9, 0x0b, 0x96, 0x6d, 0xeb,
	0x03, 0x57, 0x9d, 0x92, 0xca, 0xeb, 0x5f, 0x34, 0x5e, 0xd7, 0xa1, 0xf7, 0x03, 0x7d, 0xde, 0x7c,
	0xc9, 0x24, 0x87, 0xa2, 0x61, 0xc2, 0xe4, 0x4e, 0xbf, 0x2f, 0x5b, 0xf6, 0x03, 0xe4, 0x5e, 0xb5,
	0x1b, 0x83, 0x20, 0x87, 0x60, 0x81, 0xe0, 0xcc, 0xdd, 0xa5, 0x3c, 0x8c, 0x47, 0xc2, 0x0f, 0x39,
	0x7c, 0xc5, 0xec, 0xaa, 0x72, 0x20, 0xfe, 0x0b, 0x5f, 0x35, 0xfe, 0x40, 0x23, 0x59, 0x10, 0x68,
	0x87, 0x0a, 0xee, 0x87, 0xc3, 0x48, 0x38, 0x1c, 0xbe, 0x96, 0xc5, 0x6b, 0x3c, 0x60, 0x71, 0xac,
	0x6d, 0x56, 0xa5, 0x1f, 0xbe, 0x6e, 0xd9, 0xf7, 0xe9, 0xa3, 0x2b, 0x92, 0x23, 0x2e, 0x68, 0xec,
	0xbb, 0x3c, 0x65, 0xbb, 0x29, 0x1e, 0xbe, 0x61, 0xca, 0xa9, 0x91, 0x8a, 0xa7, 0xd1, 0x80, 0x0b,
	0x8a, 0xd5, 0x0a, 0x8b, 0x45, 0x34, 0x09, 0xfc, 0xb1, 0x2f, 0xe1, 0x9b, 0x85, 0xc4, 0x8f, 0x42,
	0x4e, 0x71, 0x4b, 0xbb, 0xd1, 0x18, 0xbe, 0x55, 0x48, 0x8d, 0x4c, 0x50, 0xaa, 0x35, 0x7c, 0xbb,
	0x90, 0x73, 0xb8, 0x9f, 0x54, 0x0c, 0xa6, 0xa1, 0x2f, 0xe1, 0x3b, 0x66, 0x43, 0x17, 0x3a, 0x06,
	0x1e, 0xe8, 0xb0, 0x7d, 0xcf, 0xc8, 0x76, 0x99, 0xd8, 0x4a, 0xc9, 0xb9, 0xfd, 0xf8, 0x7d, 0xcb,
	0xbe, 0x57, 0x9f, 0x39, 0x7b, 0x00, 0xbe, 0xcb, 0x43, 0xe9, 0xcb, 0x5d, 0xf8, 0x81, 0xd9, 0x7e,
	0x29, 0x29, 0xeb, 0x93, 0xb4, 0x99, 0xf0, 0xc3, 0x3d, 0xd6, 0x0d, 0xb1, 0x2f, 0x89, 0x42, 0xf8,
	0x91, 0x09, 0x55, 0x41, 0xc1, 0xa4, 0xf3, 0xf1, 0x43, 0x3a, 0x66, 0x13, 0xf8, 0xb1, 0xc9, 0x2e,
	0xd7, 0x8f, 0x25, 0x9e, 0x2e, 0x54, 0x46, 0x11, 0x1d, 0x32, 0x01, 0x7f, 0x61, 0x12, 0x73, 0xac,
	0x8b, 0xe2, 0x74, 0x9c, 0xd4, 0x24, 0xed, 0xd7, 0xbf, 0xcc, 0x65, 0x94, 0xd8, 0xe2, 0x32, 0x8b,
	0x21, 0x6e, 0xbb, 0xbf, 0x32, 0x82, 0x91, 0xfc, 0x44, 0xe4, 0x87, 0x46, 0xb1, 0xbf, 0xce, 0xd2,
	0x83, 0x05, 0x68, 0xb3, 0xae, 0x29, 0xa6, 0xde, 0xc1, 0xdf, 0x98, 0x6a, 0x9b, 0x00, 0x26, 0x38,
	0x3d, 0x5f, 0xb7, 0xff, 0xd6, 0x38, 0xa6, 0xd8, 0xae, 0x25, 0x70, 0xe6, 0x71, 0xf8, 0xbb, 0xac,
	0x98, 0x68, 0x6a, 0xc8, 0xc6, 0x58, 0x31, 0x27, 0x78, 0xb8, 0xfc, 0xbd, 0xb1, 0x0d, 0xeb, 0x7e,
	0x0a, 0xc8, 0xce, 0xf2, 0x7f, 0x30, 0xbb, 0x68, 0x07, 0xf3, 0x3c, 0x8c, 0x92, 0xe4, 0xfc, 0xa7,
	0x59, 0xba, 0xa4, 0x43, 0x5f, 0x70, 0xf8, 0x67, 0xe3, 0x0b, 0x6d, 0x45, 0x34, 0xd5, 0x0c, 0xdd,
	0xec, 0xfe, 0x4b, 0xe1, 0xf4, 0x28, 0x43, 0xfc, 0xab, 0x49, 0x34, 0x23, 0x37, 0x05, 0xc0, 0xbf,
	0x99, 0x02, 0xab, 0x78, 0x7e, 0x4c, 0x07, 0x41, 0x14, 0xb9, 0xbb, 0xf0, 0xef, 0xd9, 0x11, 0x2a,
	0x44, 0xb4, 0x43, 0x65, 0xb4, 0x93, 0xb4, 0xb4, 0x89, 0x15, 0xff, 0x61, 0xd6, 0xdd, 0x03, 0x98,
	0x78, 0x82, 0xb9, 0x1c, 0x7e, 0x62, 0xfc, 0x90, 0x47, 0x68, 0x2e, 0x46, 0xf1, 0x3f, 0x4d, 0x92,
	0xef, 0xe5, 0x73, 0x17, 0xfe, 0xcb, 0x84, 0x21, 0xcf, 0xce, 0x1d, 0x5c, 0xdb, 0xf0, 0xdf, 0x05,
	0x4f, 0x2b, 0x0b, 0x82, 0xed, 0x5c, 0xa3, 0xff, 0x3f, 0x85, 0xfc, 0xc5, 0x5e, 0x20, 0x4d, 0x93,
	0x17, 0x55, 0xd2, 0x00, 0x4e, 0x27, 0x2e, 0x5e, 0x11, 0x5c, 0x26, 0x19, 0x1d, 0x32, 0x3f, 0xe0,
	0x2e, 0xbc, 0xb8, 0x92, 0xef, 0x3c, 0xf4, 0x69, 0xa6, 0x2a, 0xaa, 0x3f, 0x94, 0xf0, 0x92, 0x4a,
	0x2a, 0x33, 0x25, 0xa9, 0x93, 0x87, 0xbb, 0xf0, 0xd2, 0x4a, 0x9a, 0x95, 0x19, 0x67, 0x9b, 0x0b,
	0x77, 0xca, 0xe1, 0x65, 0x95, 0xc2, 0xf9, 0x82, 0x2c, 0x73, 0x64, 0xbd, 0xdc, 0x4c, 0xdb, 0xf6,
	0x27, 0x45, 0xfd, 0x5f, 0x51, 0x49, 0x77, 0x19, 0x4e, 0x8b, 0x25, 0x2a, 0xaa, 0xb9, 0xd7, 0xa7,
	0x1c, 0xdb, 0x21, 0x1e, 0x4c, 0xe0, 0xd5, 0x15, 0xe3, 0x46, 0x53, 0x27, 0x73, 0xec, 0xd7, 0x18,
	0x7d, 0xb1, 0xc3, 0x56, 0xb4, 0x64, 0x8f, 0xbd, 0xb6, 0xb2, 0xe7, 0xf0, 0xc2, 0x65, 0x14, 0x42,
	0x9d, 0xf9, 0xaf, 0x2b, 0xf8, 0x21, 0xe0, 0x85, 0x4b, 0xd6, 0xeb, 0x2b, 0x69, 0x56, 0xa2, 0x91,
	0xb1, 0xe4, 0x13, 0x3a, 0xe2, 0x22, 0x4a, 0x64, 0xbf, 0xa9, 0x60, 0xb0, 0x62, 0xa0, 0x0c, 0x8f,
	0xf9, 0x21, 0xbc, 0xb9, 0x62, 0x76, 0x20, 0xd6, 0x42, 0x31, 0x66, 0xe3, 0x99, 0x1d, 0xf2, 0x96,
	0x4a, 0x1a, 0x57, 0xa5, 0x55, 0x52, 0x55, 0xd0, 0x7e, 0x3f, 0x42, 0x4f, 0xbf, 0xb5, 0x92, 0xdf,
	0xa1, 0x86, 0x9e, 0x2b, 0x41, 0xf0, 0x36, 0x23, 0xa2, 0x18, 0xc3, 0xe4, 0xd8, 0x84, 0xb7, 0x57,
	0xf0, 0x78, 0x33, 0x8a, 0xe1, 0x3a, 0xf0, 0x2e, 0xa5, 0xb4, 0xa2, 0x49, 0x36, 0x08, 0x92, 0xa4,
	0xd8, 0x11, 0x51, 0xe8, 0xc1, 0xbb, 0x2b, 0xf6, 0x29, 0xb2, 0xac, 0x78, 0x78, 0xdc, 0x24, 0x09,
	0xf8, 0x1e, 0x15, 0xbb, 0x02, 0x35, 0x39, 0x68, 0xe1, 0xbd, 0x19, 0xcb, 0x9c, 0x87, 0x49, 0x57,
	0xf3, 0x3e, 0x15, 0x92, 0x8c, 0x85, 0x53, 0x75, 0x23, 0xff, 0xfe, 0x4c, 0xab, 0x60, 0x3b, 0x71,
	0xe5, 0x07, 0x94, 0x25, 0x8a, 0xa6, 0x1a, 0x10, 0xe3, 0xac, 0x44, 0xda, 0x07, 0x2b, 0xf6, 0x2d,
	0xe4, 0x84, 0xd1, 0x41, 0x0b, 0x7a, 0xb2, 0x52, 0xfd, 0xc8, 0x7d, 0xe4, 0x04, 0x93, 0x52, 0xf8,
	0x83, 0xa9, 0x4c, 0x2e, 0xdc, 0xb7, 0x91, 0x33, 0x45, 0x0a, 0x5d, 0xad, 0xaf, 0xd5, 0x36, 0x9b,
	0x7d, 0x38, 0x80, 0xb7, 0xb5, 0x19, 0x5e, 0xbf, 0xd7, 0xe9, 0x74, 0x69, 0x7b, 0xb3, 0x05, 0x6e,
	0x09, 0xb7, 0x55, 0xeb, 0xad, 0xac, 0x2b, 0xae, 0xba, 0x8a, 0xce, 0x70, 0xd7, 0xeb, 0x4d, 0x3d,
	0x75, 0x88, 0x37, 0x9b, 0x3d, 0x82, 0x6b, 0x8d, 0x76, 0xa3, 0x7d, 0x59, 0x01, 0x3c, 0xfb, 0x21,
	0xf2, 0xc0, 0x1e, 0xad, 0x56, 0x7a, 0xf5, 0xda, 0x46, 0x9d, 0xf6, 0x1f, 0xa1, 0x8d, 0xf6, 0x5a,
	0xad, 0xdd, 0xef, 0x5d, 0xa3, 0xbd, 0xfa, 0x06, 0x8c, 0xec, 0x2a, 0x79, 0xca, 0x1c, 0xf0, 0x4a,
	0xed, 0xf1, 0x5a, 0x33, 0xc1, 0xfa, 0xf6, 0x83, 0xe4, 0xfe, 0x39, 0x58, 0xd4, 0xbf, 0xde, 0x53,
	0xd0, 0x27, 0xe6, 0xea, 0x70, 0xb1, 0xa8, 0xc3, 0xd6, 0x5c, 0x1d, 0x2e, 0x16, 0x74, 0x08, 0xe6,
	0xea, 0x70, 0x31, 0xaf, 0xc3, 0x78, 0xae, 0x0e, 0x8f, 0x16, 0x75, 0x08, 0xe7, 0xea, 0xf0, 0x68,
	0x41, 0x87, 0x68, 0xae, 0x0e, 0x8f, 0xe6, 0x75, 0x98, 0xcc, 0xd5, 0xe1, 0xb1, 0xa2, 0x0e, 0xd7,
	0xe7, 0xea, 0xf0, 0x58, 0x41, 0x07, 0x31, 0x57, 0x87, 0xc7, 0xf2, 0x3a, 0xc4, 0x78, 0x5b, 0xde,
	0x2f, 0x61, 0x36, 0xba, 0xf5, 0xfa, 0x2a, 0x48, 0xfb, 0x3e, 0x72, 0xf7, 0x6c, 0xc2, 0x75, 0x36,
	0xba, 0x8d, 0x7e, 0xad, 0x49, 0x57, 0x6a, 0xdd, 0xda, 0x4a, 0xa3, 0x7f, 0x0d, 0xa6, 0xf6, 0x79,
	0x72, 0x6e, 0x06, 0xb5, 0xb2, 0xd9, 0xab, 0x27, 0x42, 0xb6, 0x4b, 0x84, 0x28, 0xb6, 0xd1, 0x0b,
	0xb5, 0xd9, 0xb1, 0xef, 0x26, 0x77, 0xcc, 0xa0, 0x36, 0x6a, 0x8f, 0xd7, 0x7b, 0xf5, 0x0d, 0xda,
	0xab, 0xf5, 0x1b, 0x1d, 0xb8, 0x51, 0xb2, 0xab, 0x12, 0x04, 0xec, 0xda, 0x0f, 0x90, 0x0b, 0x33,
	0xbc, 0xab, 0xb5, 0x66, 0x93, 0xd6, 0xdb, 0xab, 0x9b, 0xbd, 0x5a, 0x7b, 0xa5, 0x4e, 0x9b, 0x8d,
	0x56, 0xa3, 0x0f, 0xcf, 0xbe, 0x39, 0x50, 0xaf, 0xf6, 0x9c, 0x9b, 0x03, 0xb5, 0x79, 0xcf, 0x2d,
	0x71, 0xa3, 0x02, 0xae, 0xd6, 0xd7, 0x12, 0x59, 0xcf, 0x2b, 0xdb, 0xf3, 0x9d, 0xab, 0xf5, 0x1e,
	0xad, 0xf5, 0xaf, 0xc0, 0xcf, 0xed, 0xcb, 0x5d, 0xad, 0xaf, 0xc1, 0xcf, 0x63, 0xf1, 0x2f, 0xe5,
	0xae, 0x77, 0xe1, 0xf9, 0xaa, 0x77, 0x28, 0xad, 0x17, 0x5a, 0xb9, 0x5f, 0x50, 0x37, 0xe3, 0x52,
	0xc0, 0xe5, 0x5a, 0x1f, 0x33, 0x41, 0xe3, 0x5e, 0x60, 0xd9, 0xf7, 0xef, 0x09, 0x92, 0xc6, 0xad,
	0x6f, 0xb6, 0xfb, 0x8f, 0x24, 0xb0, 0x17, 0xce, 0x87, 0x5d, 0x4c, 0x60, 0x2f, 0x52, 0x6d, 0x7d,
	0x29, 0xec, 0x99, 0x9d, 0x46, 0xbb, 0x57, 0x6b, 0x36, 0xaf, 0x25, 0xd0, 0x17, 0x5b, 0xf6, 0x53,
	0xf7, 0xf8, 0x59, 0x43, 0xbb, 0x8f, 0xd7, 0xf3, 0xc8, 0x97, 0xa8, 0x36, 0x68, 0x06, 0x59, 0x30,
	0xe2, 0xa5, 0x56, 0x89, 0xaf, 0x9a, 0x9d, 0xda, 0xaa, 0x4a, 0xb0, 0x97, 0xa9, 0x2e, 0x67, 0xcf,
	0xd6, 0xa8, 0xf5, 0xd7, 0x69, 0xa3, 0xfd, 0xcc, 0xcd, 0x5e, 0x7d, 0x15, 0x5e, 0xae, 0x2e, 0x2d,
	0xb3, 0x29, 0x76, 0xa5, 0xd1, 0x6c, 0x76, 0x3b, 0x8d, 0x76, 0x3f, 0x49, 0xa1, 0x57, 0xa8, 0x5b,
	0xd6, 0xfe, 0xa8, 0x34, 0xad, 0xe1, 0x17, 0xcb, 0x9c, 0x9f, 0x03, 0xf6, 0xea, 0x1b, 0xfd, 0x4e,
	0xaf, 0x0e, 0xaf, 0x2c, 0xb3, 0xcc, 0x54, 0x00, 0x4c, 0x91, 0x57, 0xcd, 0x45, 0x60, 0x9a, 0xfc,
	0x52, 0x59, 0x26, 0x18, 0xc4, 0x7a, 0x17, 0x5e, 0x5d, 0x06, 0x48, 0x2b, 0x07, 0xae, 0xf1, 0x9a,
	0x79, 0x00, 0x5c, 0xe2, 0xb5, 0xaa, 0x07, 0xdc, 0x07, 0xb0, 0xde, 0x85, 0xd7, 0x95, 0xf1, 0x93,
	0x7a, 0x83, 0x0b, 0xbc, 0x7e, 0x0e, 0x1f, 0xe5, 0xff, 0xb2, 0xea, 0x52, 0xcb, 0xf9, 0xeb, 0x5d,
	0xf8, 0x95, 0x32, 0x1f, 0xac, 0xd4, 0xfa, 0xb5, 0xee, 0x66, 0xb3, 0xaf, 0x16, 0x78, 0xc3, 0x5c,
	0x04, 0x2e, 0xf1, 0xc6, 0x72, 0x1b, 0x13, 0xc4, 0x7a, 0x17, 0xde, 0x54, 0xae, 0x43, 0xaf, 0x73,
	0x55, 0xad, 0xf0, 0xe6, 0xfd, 0xd9, 0x28, 0xfe, 0x2d, 0x65, 0x09, 0xa8, 0xd9, 0xeb, 0x5d, 0x78,
	0xab, 0xba, 0xca, 0xcc, 0x72, 0x9b, 0x4d, 0x25, 0xf9, 0x6d, 0xfb, 0x31, 0x51, 0xee, 0xdb, 0xd5,
	0xbd, 0xa2, 0x84, 0xb9, 0xde, 0x85, 0x5f, 0x55, 0x17, 0xd0, 0xbd, 0xbc, 0x95, 0xf5, 0x5a, 0xaf,
	0xd1, 0xd1, 0x8e, 0xf9, 0xb5, 0x9b, 0x60, 0x70, 0x8d, 0x77, 0x94, 0x6d, 0x8f, 0x1c, 0x66, 0xbd,
	0x0b, 0xef, 0x2c, 0x0b, 0x60, 0xaf, 0xbe, 0xba, 0xb9, 0x52, 0x57, 0xcb, 0xbc, 0x6b, 0x0e, 0x1f,
	0x97, 0x78, 0x77, 0x99, 0xf7, 0x12, 0xfe, 0x7a, 0x17, 0xde, 0x53, 0xa6, 0x81, 0x66, 0xa7, 0x5e,
	0x7a, 0xef, 0x7c, 0x08, 0x2e, 0xf2, 0xbe, 0xb2, 0x24, 0xc8, 0x20, 0xeb, 0x5d, 0x78, 0xbf, 0xba,
	0x51, 0xcf, 0x20, 0xd6, 0x3a, 0x9d, 0x55, 0xda, 0xed, 0x75, 0x56, 0x37, 0x57, 0xfa, 0x8d, 0x4e,
	0x1b, 0x3e, 0x50, 0x5a, 0x0a, 0xfa, 0x9d, 0x76, 0x3d, 0x8f, 0xfa, 0x60, 0x99, 0xa8, 0xab, 0x33,
	0xa2, 0x9e, 0x2c, 0x03, 0x35, 0x7a, 0x9d, 0x76, 0x1e, 0xf4, 0xa1, 0x32, 0xd0, 0xe5, 0x4e, 0xb3,
	0x20, 0xe9, 0xc3, 0x65, 0xf9, 0xa5, 0x34, 0x6f, 0xd5, 0x9e, 0x05, 0x1f, 0x29, 0xe3, 0x5e, 0x4d,
	0xb9, 0x1f, 0x2d, 0xe3, 0x2a, 0x2d, 0x90, 0xfb, 0xb1, 0xb2, 0xd0, 0x68, 0x73, 0x91, 0xfd, 0xf1,
	0xb2, 0xc9, 0x4a, 0x3b, 0xe4, 0x7e, 0xa2, 0x10, 0x95, 0xd4, 0xe3, 0x1b, 0xf5, 0xdc, 0x39, 0xf4,
	0xc9, 0x12, 0xc8, 0xa5, 0xcd, 0x46, 0x73, 0x35, 0xeb, 0x35, 0x3e, 0x55, 0x08, 0x9c, 0x86, 0xd4,
	0x9f, 0xd5, 0xad, 0xf7, 0x1a, 0x75, 0x3c, 0x6c, 0x37, 0xbb, 0xf0, 0x69, 0x75, 0x6d, 0x2f, 0x22,
	0xae, 0xd6, 0x7a, 0xf0, 0x99, 0x42, 0xac, 0x12, 0xdd, 0xd7, 0x1b, 0xf5, 0xe6, 0x2a, 0x5d, 0xad,
	0x77, 0x7b, 0xf5, 0x95, 0x5a, 0xbf, 0xbe, 0x0a, 0x9f, 0x2d, 0xd8, 0x90, 0xe4, 0x77, 0xbb, 0xdf,
	0xd8, 0x58, 0xe9, 0x6c, 0xf6, 0xe1, 0x73, 0x85, 0x2d, 0x96, 0x1c, 0x43, 0x8d, 0x8d, 0x66, 0xbd,
	0xb6, 0x0a, 0x9f, 0xb7, 0xec, 0xff, 0x47, 0x1e, 0x2a, 0xf2, 0xd6, 0x1a, 0x97, 0xd7, 0xfb, 0xad,
	0x4e, 0x7b, 0xa3, 0x8f, 0xd5, 0xab, 0xd6, 0xaa, 0x5d, 0xae, 0xd3, 0x46, 0x5b, 0x17, 0xfe, 0x8b,
	0xf0, 0x85, 0xff, 0xe3, 0x8c, 0x47, 0xe0, 0x8b, 0x96, 0xfd, 0x74, 0xf2, 0xd4, 0x39, 0x33, 0x8a,
	0x47, 0xc6, 0xaf, 0x17, 0x4e, 0xd8, 0x7d, 0xe1, 0x18, 0x9d, 0xdf, 0xb0, 0xec, 0x87, 0xc9, 0x83,
	0x37, 0x85, 0x9a, 0x53, 0xeb, 0x37, 0x6f, 0x26, 0x7a, 0xa5, 0xd3, 0xba, 0xd4, 0x51, 0xa2, 0xbf,
	0x64, 0xd9, 0x0f, 0x65, 0x9d, 0x69, 0x09, 0x74, 0xbd, 0x6b, 0x4c, 0x84, 0x2f, 0x5b, 0xf6, 0x45,
	0xf2, 0xf4, 0x39, 0xe0, 0x7e, 0xaf, 0x5e, 0xeb, 0xb7, 0xea, 0xed, 0x7e, 0x36, 0xe7, 0x2b, 0x37,
	0xf3, 0x4a, 0xad, 0x7d, 0xb9, 0xde, 0xa3, 0x8d, 0x76, 0xa3, 0xdf, 0xa8, 0x35, 0xe1, 0xab, 0x85,
	0x22, 0x9a, 0x24, 0x02, 0x86, 0xb7, 0xd1, 0xbe, 0x0c, 0xbf, 0x55, 0x92, 0x5f, 0x6b, 0x9d, 0xde,
	0xe5, 0x2c, 0x03, 0x7f, 0xbb, 0x70, 0x3a, 0xa4, 0x49, 0xda, 0x53, 0xfd, 0x70, 0xbf, 0xd1, 0xaa,
	0xc3, 0xef, 0x94, 0x00, 0x56, 0xeb, 0x6b, 0xf5, 0xf6, 0x46, 0x9d, 0x5e, 0xda, 0x5c, 0x5b, 0x83,
	0xdf, 0x2d, 0x71, 0x08, 0x32, 0x68, 0xff, 0x5a, 0x17, 0x1b, 0x4b, 0xec, 0x66, 0x6a, 0xbd, 0xd6,
	0x35, 0x75, 0x1f, 0xfb, 0xbd, 0x42, 0x7b, 0xb0, 0x0f, 0xb8, 0x7f, 0x05, 0x7e, 0xdf, 0xb2, 0x9f,
	0x41, 0xaa, 0xfb, 0xe2, 0xea, 0x8d, 0xf6, 0x5a, 0xa7, 0x87, 0x25, 0x38, 0x15, 0xfc, 0x07, 0x96,
	0xfd, 0xb4, 0xec, 0x76, 0xb1, 0xff, 0x04, 0x6d, 0xf5, 0xd7, 0xe6, 0xa2, 0xfb, 0xbd, 0x5a, 0x7b,
	0xa3, 0xdb, 0xe9, 0xf5, 0x13, 0xf4, 0xd7, 0x0b, 0x75, 0x6a, 0x0f, 0xba, 0xd6, 0xac, 0xb7, 0xfb,
	0xf0, 0x8d, 0x42, 0x53, 0xb7, 0x07, 0x94, 0x5d, 0xf3, 0xe0, 0x9b, 0x85, 0x5e, 0xaa, 0x04, 0x99,
	0xf4, 0x17, 0xf0, 0xad, 0xb9, 0xce, 0x32, 0x17, 0x3c, 0xf8, 0xf6, 0xfc, 0xa5, 0xb3, 0xdb, 0x1d,
	0x7c, 0x67, 0xfe, 0xd2, 0xe6, 0x6a, 0x07, 0x7f, 0x38, 0x7f, 0xe9, 0xf4, 0x5e, 0x07, 0xdf, 0x9d,
	0xbf, 0x74, 0x76, 0xa9, 0x83, 0xef, 0xcd, 0x5f, 0xda, 0xdc, 0xe8, 0xe0, 0xfb, 0xf3, 0x97, 0x4e,
	0xaf, 0x73, 0xf0, 0x83, 0x92, 0x3d, 0x9e, 0xe1, 0x54, 0x07, 0xa2, 0xef, 0x0c, 0x9b, 0xed, 0x66,
	0x67, 0xe5, 0x0a, 0xfc, 0xd0, 0xb2, 0x1f, 0x21, 0x4f, 0xdb, 0x0f, 0xbf, 0xd2, 0xbb, 0xb6, 0x81,
	0x17, 0xbc, 0x42, 0x73, 0xfd, 0x47, 0x73, 0xa7, 0xa8, 0x25, 0x4c, 0x41, 0x4f, 0x56, 0xf9, 0x63,
	0xb5, 0x5d, 0x72, 0xa0, 0xac, 0x9b, 0xd0, 0x32, 0xff, 0xa4, 0xa4, 0x24, 0x64, 0x70, 0x73, 0x3d,
	0x34, 0x0d, 0x1a, 0xb6, 0xf1, 0x7f, 0x3a, 0x77, 0x37, 0x98, 0x39, 0xba, 0xeb, 0xc2, 0x09, 0x7f,
	0x36, 0x77, 0x42, 0xfe, 0x17, 0x92, 0xe4, 0xb6, 0xf6, 0xe7, 0x96, 0xfd, 0x18, 0x79, 0xc6, 0x7e,
	0x13, 0xf6, 0x5c, 0x7f, 0x93, 0x59, 0x3f, 0x9a, 0x1b, 0xaa, 0x66, 0xa7, 0xb7, 0x5a, 0xff, 0x99,
	0xcd, 0x46, 0x17, 0x7e, 0x6c, 0x55, 0x9f, 0x43, 0x6e, 0x77, 0x7c, 0xb9, 0x9b, 0xfb, 0xa8, 0xcf,
	0x24, 0xf7, 0x22, 0xb1, 0xab, 0x7f, 0x3b, 0x5a, 0x22, 0x47, 0x9d, 0x81, 0xfa, 0x39, 0x2d, 0xe4,
	0x70, 0xc0, 0xbe, 0x85, 0x2c, 0xab, 0xa1, 0x17, 0x6d, 0x73, 0x11, 0xaa, 0xaf, 0x12, 0x96, 0x7d,
	0x92, 0x2c, 0x29, 0xe2, 0xd8, 0x0f, 0x7c, 0xc9, 0xc4, 0xae, 0x7e, 0xb4, 0xa1, 0x48, 0x82, 0xc7,
	0xd1, 0x54, 0x38, 0x1c, 0x0e, 0xda, 0x36, 0x39, 0xa1, 0xa7, 0x4e, 0x99, 0x70, 0xa9, 0x17, 0xb9,
	0x70, 0xa8, 0xfa, 0xcd, 0x0a, 0xb1, 0x8b, 0xab, 0xab, 0x45, 0x8f, 0x93, 0x45, 0x67, 0x60, 0xd6,
	0x54, 0xb2, 0xd4, 0x37, 0xa6, 0x90, 0x22, 0x18, 0xac, 0x14, 0xb0, 0xc3, 0x82, 0x00, 0x2a, 0x36,
	0x90, 0xe3, 0x38, 0x32, 0x5f, 0x89, 0x0f, 0xda, 0xa7, 0x08, 0x20, 0x25, 0xe6, 0xa1, 0x44, 0x43,
	0xa2, 0x1d, 0x2e, 0xe0, 0x50, 0x8a, 0x1b, 0x30, 0x21, 0x98, 0xb3, 0x15, 0xc3, 0x61, 0x7b, 0x99,
	0x1c, 0x53, 0x38, 0x19, 0x09, 0xe6, 0x71, 0x58, 0xb0, 0x4f, 0x10, 0x82, 0x04, 0x26, 0xc6, 0x91,
	0xd8, 0x85, 0x23, 0xe9, 0x94, 0xf4, 0xa3, 0x28, 0x2c, 0xa6, 0x4b, 0x0f, 0x99, 0x18, 0xc3, 0xd1,
	0x14, 0x7f, 0x7d, 0xca, 0x84, 0xd8, 0x05, 0x62, 0x04, 0xb2, 0x9d, 0xb1, 0x1f, 0x04, 0x70, 0x2c,
	0x85, 0x8f, 0xfd, 0x90, 0xc3, 0xf1, 0x94, 0x9d, 0x68, 0x00, 0x4b, 0xf6, 0x39, 0x72, 0x5a, 0x4b,
	0x1b, 0x08, 0x1f, 0x1d, 0xaf, 0x7e, 0xa9, 0xc6, 0xa5, 0x4f, 0xa4, 0xd8, 0xf4, 0xeb, 0xd4, 0x72,
	0xaa, 0xcb, 0x0e, 0x13, 0x74, 0x84, 0x86, 0x43, 0xba, 0xba, 0xfe, 0x56, 0x02, 0x27, 0xab, 0x01,
	0x39, 0xee, 0x87, 0xbe, 0xf4, 0x59, 0xa0, 0xfd, 0x78, 0x8c, 0x1c, 0xf1, 0x8d, 0x1b, 0x8f, 0x93,
	0x45, 0x5f, 0x26, 0xdf, 0xeb, 0xad, 0x54, 0x7a, 0xfa, 0x12, 0xc1, 0x38, 0xd1, 0x7c, 0x6c, 0x39,
	0x98, 0xaa, 0x3e, 0xe2, 0x22, 0xca, 0x9c, 0x67, 0x02, 0x7a, 0xb8, 0x7a, 0x99, 0x2c, 0x32, 0xb9,
	0x65, 0x56, 0x62, 0x66, 0xa5, 0x65, 0x72, 0x8c, 0x49, 0xea, 0x87, 0x43, 0x86, 0xee, 0x07, 0x0b,
	0xf5, 0x64, 0x92, 0x3a, 0x6c, 0x9b, 0x05, 0x2a, 0x3b, 0x96, 0xc8, 0x51, 0x86, 0x4e, 0x76, 0x46,
	0x5c, 0xc0, 0xc1, 0xea, 0xcf, 0x92, 0x25, 0xf3, 0x73, 0x70, 0xfa, 0x42, 0xa8, 0x40, 0x48, 0x05,
	0xdf, 0x46, 0xce, 0x14, 0xe9, 0x63, 0x16, 0x7a, 0x51, 0xc8, 0x03, 0xb0, 0xd4, 0x8f, 0x91, 0x05,
	0xde, 0x40, 0xb0, 0xd0, 0x15, 0x5c, 0x8e, 0xa0, 0x52, 0xfd, 0xac, 0x45, 0x96, 0x52, 0xcd, 0x8d,
	0xc2, 0x22, 0xef, 0x1a, 0x21, 0xa9, 0x27, 0x98, 0x1f, 0xea, 0xe4, 0x12, 0x2a, 0x27, 0x42, 0x0e,
	0x95, 0x04, 0xb8, 0x13, 0x45, 0x2e, 0x1c, 0x4c, 0x06, 0xbe, 0x88, 0x42, 0x38, 0x94, 0x0c, 0xbc,
	0x28, 0x70, 0xe1, 0x30, 0x9a, 0x24, 0x24, 0x9d, 0xf0, 0xc1, 0x20, 0xc0, 0x3c, 0x5a, 0x26, 0xc7,
	0x84, 0xfa, 0x9e, 0xe9, 0xaf, 0x44, 0x7e, 0xa8, 0x13, 0x49, 0x48, 0xca, 0x6f, 0x70, 0x67, 0xaa,
	0xbe, 0x44, 0x2c, 0x26, 0x90, 0x58, 0x0a, 0x1e, 0x7a, 0x72, 0x04, 0x47, 0x71, 0x83, 0x88, 0xf4,
	0xc3, 0x58, 0x24, 0x5c, 0x2e, 0x80, 0x54, 0x5f, 0x60, 0x91, 0xd3, 0x66, 0x6f, 0x98, 0x77, 0x4d,
	0x68, 0xc0, 0x79, 0x72, 0x6e, 0x10, 0x69, 0x0b, 0xe8, 0x2c, 0x02, 0x0e, 0xd8, 0xb7, 0x92, 0x5b,
	0x90, 0xed, 0x08, 0x8e, 0x33, 0x4c, 0x54, 0x2b, 0xf6, 0x59, 0x72, 0x6a, 0x90, 0x7d, 0xad, 0xc9,
	0xc7, 0x3b, 0x99, 0xe2, 0xf2, 0x80, 0xe7, 0xa7, 0x1c, 0xaa, 0xd6, 0xc8, 0xb2, 0x13, 0xc5, 0x92,
	0xb2, 0x1d, 0xdc, 0xb9, 0x66, 0x87, 0xb2, 0xc2, 0x0e, 0x65, 0x92, 0x6e, 0xb3, 0x60, 0xaa, 0x1e,
	0x10, 0xe8, 0x10, 0x23, 0x49, 0xa7, 0xdb, 0xc1, 0xea, 0x3b, 0x2d, 0x72, 0x42, 0xfd, 0x5f, 0x3d,
	0x10, 0x49, 0x45, 0x78, 0x83, 0x7c, 0xce, 0xe0, 0x28, 0x9e, 0x70, 0xc7, 0x67, 0x18, 0xcf, 0x63,
	0xe4, 0x88, 0xa7, 0xf3, 0x0d, 0x2a, 0xe8, 0x1a, 0x1c, 0x30, 0xc7, 0xe1, 0x81, 0xb6, 0xf0, 0x60,
	0x0a, 0xd8, 0x61, 0xb8, 0xb5, 0x4f, 0x11, 0xc0, 0x81, 0x14, 0x9c, 0xc5, 0x53, 0xc1, 0xe9, 0x20,
	0xba, 0xa1, 0x83, 0x82, 0x54, 0xfd, 0x24, 0x61, 0x21, 0x9d, 0xe1, 0xf1, 0xb1, 0x0e, 0x88, 0xa7,
	0xf6, 0x8e, 0xe4, 0x02, 0x57, 0x5c, 0xac, 0xd6, 0x88, 0xad, 0x55, 0x74, 0x58, 0xa8, 0xde, 0xb6,
	0xa4, 0x05, 0xd0, 0x73, 0xa6, 0xf9, 0x54, 0x51, 0x43, 0x1c, 0xa9, 0xc4, 0x56, 0xa3, 0xf1, 0x34,
	0x90, 0x3e, 0x54, 0xaa, 0x3f, 0xa9, 0x90, 0x25, 0x2d, 0x23, 0x9a, 0x64, 0x56, 0x46, 0x05, 0x2b,
	0x93, 0x4f, 0x52, 0x68, 0x98, 0xa5, 0x0c, 0x8b, 0x0a, 0x86, 0x55, 0xec, 0x3b, 0xc9, 0x6d, 0x29,
	0x48, 0x3f, 0x3d, 0x40, 0x97, 0x39, 0x6c, 0xc2, 0x54, 0xf1, 0x3b, 0x98, 0xce, 0xd1, 0xaf, 0x9c,
	0x94, 0x35, 0x87, 0xec, 0x0b, 0xe4, 0x2e, 0xa4, 0xf9, 0xe3, 0x31, 0x77, 0x7d, 0x26, 0x79, 0xb0,
	0x9b, 0xf2, 0x4d, 0x1c, 0x0f, 0xe3, 0xf6, 0xf1, 0xd4, 0xd7, 0xc5, 0x1b, 0xea, 0xeb, 0xa7, 0x7a,
	0xd4, 0x14, 0xc6, 0x43, 0x2e, 0x60, 0x01, 0x83, 0xaf, 0x84, 0xb2, 0xd0, 0x8d, 0xc6, 0x19, 0xe3,
	0x88, 0xf2, 0x6c, 0xa4, 0x2b, 0x60, 0xfa, 0xd9, 0x13, 0x16, 0x71, 0x87, 0x22, 0x35, 0xf9, 0xca,
	0x39, 0xe6, 0x63, 0x8e, 0x45, 0xeb, 0x68, 0x8a, 0x1e, 0x27, 0xaf, 0x4d, 0x1c, 0xac, 0x53, 0x04,
	0xf7, 0xa6, 0x5a, 0x58, 0x7f, 0x85, 0xa3, 0xce, 0x88, 0x85, 0x1e, 0x57, 0x1f, 0x4f, 0xe1, 0xd8,
	0x3e, 0x4c, 0x27, 0x72, 0xb1, 0x60, 0x9e, 0x25, 0xa7, 0x90, 0x99, 0x7d, 0x01, 0x11, 0xdc, 0x89,
	0x84, 0x0b, 0x4b, 0x2a, 0x2e, 0x98, 0xe0, 0x23, 0x1e, 0x4b, 0x70, 0xab, 0x2f, 0xaf, 0x90, 0xd3,
	0x99, 0x17, 0x75, 0xde, 0xe9, 0x08, 0x9c, 0x23, 0xa7, 0x99, 0x97, 0x77, 0x31, 0x75, 0xa2, 0xf1,
	0x38, 0x0a, 0xe1, 0x00, 0x4a, 0x47, 0xd6, 0x9e, 0xed, 0x63, 0xd9, 0xa7, 0xc9, 0x49, 0xe4, 0x14,
	0x1e, 0x87, 0x41, 0x25, 0x23, 0x73, 0x96, 0xd5, 0x4e, 0xb5, 0x73, 0x90, 0xac, 0xbe, 0x44, 0x0a,
	0xae, 0x1f, 0x50, 0x8d, 0x26, 0x70, 0x48, 0x15, 0x25, 0x2f, 0xdb, 0x6c, 0xb9, 0x2f, 0x9a, 0x70,
	0x38, 0x15, 0x56, 0x7c, 0x70, 0x73, 0x24, 0x55, 0x2a, 0x9b, 0xa3, 0x8b, 0x9a, 0x8e, 0x11, 0x72,
	0xf4, 0x73, 0x0d, 0xe3, 0x12, 0x58, 0x54, 0xf5, 0xd4, 0x4b, 0xbc, 0x0e, 0x47, 0xab, 0x61, 0x9a,
	0xc8, 0xe9, 0xeb, 0x0f, 0x93, 0x89, 0xd7, 0x4d, 0x26, 0xa2, 0xfb, 0xae, 0x4b, 0xba, 0x33, 0xf2,
	0x95, 0xbd, 0xc9, 0xd0, 0x13, 0x9c, 0x87, 0x50, 0x49, 0xb1, 0x83, 0x60, 0x8a, 0x3b, 0x0d, 0xb3,
	0xfc, 0xba, 0xa4, 0x93, 0xa9, 0x98, 0x04, 0x1c, 0x0e, 0xa5, 0xe3, 0x48, 0x60, 0xa4, 0xe0, 0x70,
	0xf5, 0xa7, 0x09, 0xc9, 0xde, 0xa7, 0xe1, 0x2e, 0x8b, 0xcd, 0x32, 0x27, 0x90, 0x45, 0x5d, 0x9f,
	0x8d, 0xa3, 0xd0, 0xd5, 0xc7, 0x4e, 0x2c, 0xb3, 0x57, 0x67, 0x95, 0xea, 0xb7, 0x17, 0xc8, 0xa9,
	0xa1, 0xef, 0x8d, 0x24, 0x9d, 0xf9, 0x68, 0x75, 0x0f, 0x39, 0x5f, 0x46, 0xcf, 0x0a, 0xe6, 0x01,
	0xdc, 0x28, 0xe5, 0x90, 0x09, 0xe7, 0xb8, 0xd8, 0x5d, 0xe4, 0xf6, 0x52, 0xfe, 0x00, 0xa3, 0x8a,
	0x65, 0xe5, 0x76, 0x72, 0x6b, 0x29, 0x60, 0x7d, 0x02, 0x07, 0xed, 0xbb, 0xc9, 0x1d, 0xa5, 0xcc,
	0xc9, 0x68, 0x97, 0x32, 0xb9, 0x05, 0x87, 0xec, 0x7b, 0xc9, 0x9d, 0xa5, 0x88, 0x31, 0xf3, 0x7c,
	0x47, 0x61, 0x0e, 0xcf, 0x95, 0xe2, 0xf2, 0x21, 0x2c, 0xdc, 0x44, 0x0a, 0x62, 0x8e, 0xec, 0xeb,
	0x0c, 0x94, 0xe2, 0x08, 0x1f, 0x73, 0xe0, 0x02, 0xb9, 0x6b, 0x8e, 0x18, 0x05, 0x3a, 0x6a, 0x3f,
	0x85, 0xdc, 0x5b, 0xee, 0x91, 0x20, 0x72, 0xb6, 0xe8, 0x84, 0x0b, 0x07, 0x13, 0x8a, 0xd8, 0xf7,
	0x93, 0x7b, 0xe6, 0xe0, 0x04, 0x77, 0xa7, 0x0e, 0x6e, 0xdd, 0xfd, 0xd4, 0x1a, 0x4d, 0xa8, 0xe0,
	0x93, 0x60, 0x17, 0x8e, 0xef, 0xab, 0x96, 0x98, 0x7a, 0x3c, 0x01, 0x2d, 0xe1, 0x59, 0x56, 0x0a,
	0x72, 0xa6, 0x82, 0xc3, 0x09, 0xfb, 0x01, 0x72, 0xa1, 0x94, 0xed, 0x7b, 0xa1, 0x7a, 0xf6, 0x98,
	0xb8, 0x72, 0xd9, 0x7e, 0x90, 0xdc, 0x3f, 0x0f, 0x98, 0x79, 0x14, 0xf6, 0xd5, 0x2b, 0x9e, 0x3a,
	0x5b, 0xfa, 0x31, 0x04, 0x9c, 0xb4, 0xef, 0x20, 0x67, 0x4b, 0x41, 0x35, 0xb9, 0x05, 0xf6, 0xbe,
	0xdc, 0x55, 0x3e, 0x84, 0x5b, 0xf6, 0xd5, 0x25, 0x0d, 0x99, 0xf1, 0xf6, 0x29, 0xfb, 0x21, 0xf2,
	0xc0, 0x4d, 0x42, 0x67, 0xc0, 0xa7, 0xf7, 0x4d, 0xfa, 0x16, 0xbb, 0xb1, 0x3e, 0x81, 0x33, 0xd5,
	0xb7, 0x55, 0xc8, 0xad, 0x69, 0xa3, 0xa0, 0xdf, 0x06, 0xab, 0x8f, 0xcd, 0x6a, 0x4f, 0x9d, 0x24,
	0x4b, 0xd1, 0x75, 0x3f, 0xd7, 0xe4, 0xa9, 0x0d, 0xaa, 0x48, 0xaa, 0xd2, 0x41, 0x25, 0x37, 0xe6,
	0x4c, 0xea, 0x4e, 0x5a, 0x8d, 0xf3, 0xa5, 0x4b, 0xd5, 0x35, 0x45, 0x55, 0xbd, 0xbb, 0x2a, 0x7b,
	0x3c, 0x74, 0xe9, 0x60, 0x2a, 0x42, 0x38, 0x8c, 0x09, 0x3d, 0xc3, 0x4c, 0x6b, 0xe2, 0x70, 0x1a,
	0x04, 0x58, 0x18, 0x17, 0xf0, 0xfc, 0x50, 0x98, 0xd9, 0xe2, 0x77, 0x9e, 0x9c, 0x53, 0x74, 0x14,
	0xb7, 0xa7, 0x02, 0x2e, 0xa2, 0xf1, 0x39, 0x6d, 0x66, 0x0b, 0xe1, 0x51, 0xdc, 0x6d, 0x8a, 0x9f,
	0x7b, 0x75, 0xe7, 0xbb, 0x3c, 0x7b, 0x34, 0x47, 0xaa, 0x3f, 0x45, 0x4e, 0xa6, 0x27, 0x8d, 0x7a,
	0xf1, 0xa0, 0xfc, 0x02, 0xe4, 0xf8, 0x70, 0x54, 0x70, 0x4b, 0x42, 0x31, 0x7d, 0xbf, 0x55, 0xfd,
	0xae, 0x45, 0x4e, 0xe8, 0x63, 0x6d, 0xcc, 0x92, 0x69, 0x36, 0x39, 0xd1, 0x6a, 0xd1, 0x5a, 0xbf,
	0x5f, 0x5b, 0xb9, 0x42, 0xfb, 0x9d, 0xab, 0x6d, 0x38, 0x90, 0xd0, 0x56, 0x3a, 0xcd, 0x66, 0x7d,
	0x45, 0xdf, 0x11, 0x0f, 0xe2, 0xa5, 0xa9, 0xd5, 0xa2, 0x1b, 0xdd, 0x6b, 0xb4, 0xdb, 0xd9, 0x68,
	0xa8, 0x1f, 0x4f, 0x55, 0xf5, 0x6f, 0xb5, 0xf2, 0x3f, 0x98, 0x34, 0x9b, 0xd7, 0x60, 0x01, 0xfd,
	0xdd, 0x6a, 0xe5, 0x7e, 0xe8, 0x40, 0x09, 0x8b, 0x68, 0x57, 0xab, 0x45, 0xbb, 0xb5, 0x5e, 0xbf,
	0xb1, 0xd2, 0xe8, 0xe2, 0x15, 0xaf, 0x4d, 0x5b, 0xb5, 0x8d, 0x8d, 0x64, 0x71, 0xdd, 0x3c, 0xb6,
	0x5a, 0x05, 0x1a, 0xc1, 0x4a, 0x8c, 0xba, 0xd4, 0x5a, 0x5d, 0x38, 0x66, 0x94, 0xbd, 0x42, 0x93,
	0x9f, 0xab, 0xe0, 0x78, 0xb5, 0x4d, 0x8e, 0x69, 0x93, 0xd4, 0x1b, 0x13, 0x05, 0xd9, 0xa0, 0xfd,
	0x0e, 0x5d, 0xad, 0x6f, 0xe0, 0x12, 0x1b, 0x70, 0x40, 0xe9, 0xb3, 0x41, 0x37, 0xfa, 0x9d, 0x6e,
	0x46, 0x55, 0xc7, 0x63, 0x6b, 0x83, 0x36, 0xeb, 0xb5, 0xc7, 0xeb, 0x19, 0xb9, 0x52, 0xfd, 0x8a,
	0x45, 0x8e, 0xaa, 0xf7, 0x7b, 0xa9, 0x7b, 0xcc, 0x20, 0x3d, 0x0f, 0x4e, 0x11, 0xc8, 0x68, 0xf1,
	0x6e, 0x8c, 0x51, 0x57, 0xbd, 0x7b, 0x46, 0x1d, 0x30, 0x29, 0x03, 0x55, 0x1b, 0x22, 0x21, 0x75,
	0x91, 0xce, 0x98, 0x4c, 0x4a, 0xa6, 0x2a, 0x90, 0x62, 0x1e, 0xc4, 0xc3, 0x3d, 0x63, 0x26, 0x0f,
	0x46, 0x90, 0x00, 0x87, 0x70, 0x7b, 0x66, 0x2c, 0x27, 0x0a, 0x02, 0xfd, 0x94, 0x4a, 0x4d, 0x3c,
	0x8c, 0x09, 0x98, 0x71, 0xcd, 0x53, 0xc4, 0x85, 0xea, 0x93, 0x16, 0x21, 0xba, 0xeb, 0x52, 0x36,
	0xdc, 0x42, 0x96, 0xb3, 0x51, 0x6a, 0xc4, 0x69, 0x72, 0x32, 0x47, 0xdc, 0xe1, 0x6c, 0x12, 0xe1,
	0xbd, 0xe1, 0x0c, 0xb1, 0x73, 0x64, 0x27, 0x88, 0xe4, 0x48, 0x35, 0xaf, 0x45, 0x19, 0x23, 0x16,
	0xba, 0xba, 0x89, 0xcb, 0x11, 0x03, 0xee, 0xc1, 0xa1, 0x59, 0x20, 0x67, 0xae, 0x6e, 0xda, 0x72,
	0x44, 0xec, 0x62, 0xe2, 0x38, 0x12, 0x3e, 0x8f, 0x61, 0xa1, 0xfa, 0xff, 0xc9, 0x49, 0xb5, 0xb9,
	0x0b, 0x17, 0x03, 0x20, 0xc7, 0x7d, 0x6c, 0x8c, 0xa2, 0xf1, 0x44, 0xbd, 0xc3, 0x54, 0x5d, 0xa7,
	0xaf, 0x5b, 0x38, 0xdc, 0x85, 0x60, 0x55, 0x2f, 0xa6, 0x9a, 0x16, 0x26, 0x1e, 0x27, 0x8b, 0x3c,
	0x7d, 0x68, 0xab, 0x0a, 0x03, 0xcf, 0xde, 0xd2, 0x5b, 0xd5, 0x8f, 0x59, 0x04, 0xd4, 0x93, 0xd0,
	0xe4, 0x21, 0x70, 0xc0, 0x1c, 0x35, 0x25, 0xe0, 0x93, 0x5c, 0x4f, 0x81, 0x23, 0xdd, 0x6e, 0x5b,
	0xa8, 0x08, 0x0e, 0x9d, 0x48, 0xc4, 0x78, 0xa5, 0xd0, 0x6d, 0x05, 0x52, 0x12, 0x17, 0x24, 0xa3,
	0x78, 0x14, 0x25, 0x4d, 0x85, 0xe2, 0xf1, 0x60, 0xcc, 0x31, 0x40, 0xa7, 0x08, 0xe0, 0x38, 0x67,
	0xf0, 0x23, 0x7a, 0x7b, 0xcc, 0x50, 0x2f, 0xea, 0x1e, 0x75, 0x86, 0xfa, 0x28, 0x2c, 0x56, 0x2f,
	0x93, 0x13, 0x1e, 0x1f, 0xeb, 0x97, 0xc2, 0x5a, 0x5d, 0xbc, 0x00, 0x8c, 0x26, 0x54, 0x6b, 0x9b,
	0x0c, 0xe4, 0x4e, 0x94, 0xf4, 0x3f, 0x38, 0x18, 0x09, 0xce, 0x93, 0xfe, 0x67, 0x34, 0xa1, 0xc3,
	0x68, 0x8a, 0xf7, 0xd3, 0xef, 0x54, 0xc8, 0x52, 0xc0, 0x42, 0x6f, 0xca, 0xbc, 0xc4, 0x55, 0x84,
	0x2c, 0x04, 0x92, 0xd6, 0x82, 0x40, 0x3b, 0x2a, 0x90, 0x74, 0x65, 0xe4, 0x87, 0x3c, 0x4e, 0xee,
	0x04, 0x81, 0xa4, 0xf5, 0xd0, 0x0b, 0xfc, 0x78, 0xa4, 0x6f, 0x42, 0x81, 0xa4, 0x6b, 0x82, 0x87,
	0xce, 0x08, 0x0e, 0x26, 0xc3, 0xcb, 0x5c, 0x8c, 0x19, 0x5e, 0x22, 0x97, 0xc9, 0xb1, 0x40, 0xd2,
	0xde, 0x94, 0xc5, 0xb1, 0xcf, 0xb0, 0x7a, 0xea, 0xe9, 0x1b, 0x13, 0x16, 0xe2, 0xf4, 0x05, 0xac,
	0xd9, 0x81, 0xa4, 0xdd, 0x48, 0xc8, 0xa9, 0x37, 0xc5, 0x15, 0x8e, 0x24, 0x90, 0x86, 0x64, 0xd8,
	0x45, 0xe9, 0x9f, 0x24, 0x02, 0x49, 0x57, 0xa7, 0x12, 0xbb, 0xbf, 0x84, 0xdb, 0x89, 0xc7, 0x2c,
	0x0c, 0x7c, 0x20, 0xc9, 0x82, 0xdd, 0x48, 0xa9, 0x73, 0x2c, 0x5d, 0x30, 0x1a, 0xb3, 0x10, 0x67,
	0x1f, 0x47, 0x3f, 0x04, 0x92, 0xf6, 0x47, 0xcc, 0x87, 0xa5, 0x64, 0xb0, 0xc6, 0x62, 0x1f, 0x4e,
	0x24, 0x33, 0x6b, 0x82, 0x0d, 0x7c, 0x07, 0x96, 0x93, 0xe1, 0x25, 0x36, 0x62, 0x31, 0x03, 0xc0,
	0xc4, 0xcc, 0xec, 0xa6, 0x7d, 0xc1, 0x5c, 0x1f, 0xcb, 0x2a, 0x0b, 0xe0, 0x64, 0x02, 0xbd, 0x12,
	0x09, 0xce, 0x42, 0xb0, 0x93, 0x35, 0x9f, 0xc9, 0x26, 0x4c, 0xf9, 0xe8, 0x96, 0xea, 0xf3, 0x2d,
	0xb2, 0x18, 0x4f, 0x76, 0x4d, 0x9d, 0x88, 0xcd, 0x5f, 0xcf, 0xa8, 0x3b, 0x8e, 0x6a, 0xed, 0x72,
	0x34, 0x36, 0x91, 0x53, 0xfd, 0x96, 0xbe, 0x8b, 0xf7, 0x16, 0x9d, 0x5b, 0xb1, 0xa4, 0x3b, 0x7e,
	0xe0, 0xea, 0x19, 0xea, 0x17, 0xa7, 0x58, 0x52, 0x11, 0xed, 0xb2, 0x80, 0x26, 0x17, 0x25, 0xdd,
	0x7c, 0x8e, 0xa3, 0x30, 0x96, 0xea, 0xd4, 0xd2, 0x9d, 0xa9, 0xc3, 0xc6, 0x13, 0x38, 0x5c, 0x6d,
	0x91, 0xb3, 0xf9, 0x17, 0xa4, 0x28, 0x7c, 0x1a, 0x48, 0xd3, 0xc2, 0x3e, 0x31, 0x14, 0x92, 0x46,
	0x5b, 0x3a, 0xab, 0xd5, 0x60, 0x88, 0x65, 0x45, 0x95, 0x3e, 0x35, 0xdc, 0x61, 0x78, 0x4c, 0xdd,
	0x60, 0xea, 0x97, 0x9d, 0x4a, 0xb5, 0x86, 0x55, 0x2a, 0x8e, 0xd3, 0x02, 0x25, 0x99, 0xf0, 0x78,
	0x22, 0x4d, 0xd5, 0x3c, 0x69, 0xac, 0x91, 0xd1, 0x4e, 0xa8, 0x4f, 0x18, 0x45, 0x4d, 0xd5, 0xb3,
	0xf0, 0xae, 0xbf, 0xac, 0x64, 0xe8, 0x17, 0x7f, 0x6a, 0xae, 0x2a, 0x62, 0x05, 0x92, 0x7a, 0x0e,
	0xbd, 0xab, 0x4f, 0xa9, 0x87, 0x49, 0x75, 0x96, 0xab, 0xd4, 0xc2, 0x33, 0x37, 0x39, 0xf3, 0xb0,
	0x0e, 0xa8, 0x97, 0x78, 0x98, 0x9a, 0xf7, 0x90, 0xf3, 0xb3, 0xf8, 0x14, 0xe6, 0x45, 0xea, 0xe7,
	0x81, 0xea, 0xb3, 0x93, 0x37, 0x65, 0xe6, 0xb9, 0x3f, 0x66, 0x97, 0x7e, 0xf5, 0x9f, 0xee, 0x71,
	0x1c, 0x0d, 0x7d, 0x11, 0x4b, 0x9d, 0xec, 0x38, 0x8c, 0xb9, 0x83, 0xfd, 0x7d, 0x25, 0x65, 0xcb,
	0x91, 0x2f, 0x5c, 0x1d, 0x01, 0x85, 0x8e, 0xa6, 0x42, 0x8e, 0xe0, 0x50, 0x36, 0x7b, 0x28, 0x47,
	0xfa, 0x7e, 0xae, 0x66, 0xfb, 0x37, 0xe4, 0x08, 0x16, 0xaa, 0x2b, 0xe4, 0x98, 0x64, 0xf1, 0x96,
	0x52, 0x6f, 0x1a, 0x63, 0x44, 0x65, 0x4c, 0xa7, 0x21, 0x56, 0xb2, 0x80, 0xab, 0x5f, 0x35, 0x80,
	0x1c, 0x97, 0x31, 0x4d, 0x09, 0xc9, 0x85, 0x42, 0xc6, 0x78, 0x2b, 0xe4, 0xfe, 0x36, 0x77, 0xa1,
	0x72, 0xe9, 0x5e, 0x72, 0xc6, 0x09, 0x1f, 0xf6, 0x76, 0x77, 0x6f, 0xe8, 0x3f, 0x45, 0xd3, 0xff,
	0x0e, 0xa6, 0xc3, 0x4b, 0x0b, 0xfa, 0x2f, 0xd4, 0xd6, 0xad, 0xc1, 0x82, 0xa2, 0x3d, 0xfa, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x91, 0x6c, 0xce, 0xb1, 0xb4, 0x36, 0x00, 0x00,
}

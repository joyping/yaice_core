<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.38.0 (20140413.2041)
 -->
<!-- Title: unnamed Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1250)">
<title>unnamed</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1250 528.5,-1250 528.5,4 -4,4"/>
<g id="clust1" class="cluster"><title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-1142 8,-1238 402,-1238 402,-1142 8,-1142"/>
</g>
<!-- Type: cpu -->
<g id="node1" class="node"><title>Type: cpu</title>
<polygon fill="#f8f8f8" stroke="black" points="393.5,-1230 16.5,-1230 16.5,-1150 393.5,-1150 393.5,-1230"/>
<text text-anchor="start" x="24.5" y="-1213.2" font-family="Times New Roman,serif" font-size="16.00">Type: cpu</text>
<text text-anchor="start" x="24.5" y="-1195.2" font-family="Times New Roman,serif" font-size="16.00">Time: Sep 10, 2019 at 6:29pm (CST)</text>
<text text-anchor="start" x="24.5" y="-1177.2" font-family="Times New Roman,serif" font-size="16.00">Duration: 1s, Total samples = 10ms ( &#160;&#160;&#160;1%)</text>
<text text-anchor="start" x="24.5" y="-1159.2" font-family="Times New Roman,serif" font-size="16.00">Showing nodes accounting for 10ms, 100% of 10ms total</text>
</g>
<!-- N1 -->
<g id="node1" class="node"><title>N1</title>
<g id="a_node1"><a xlink:title="runtime.newobject (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="524.5,-86 379.5,-86 379.5,-0 524.5,-0 524.5,-86"/>
<text text-anchor="middle" x="452" y="-62.8" font-family="Times New Roman,serif" font-size="24.00">runtime</text>
<text text-anchor="middle" x="452" y="-36.8" font-family="Times New Roman,serif" font-size="24.00">newobject</text>
<text text-anchor="middle" x="452" y="-10.8" font-family="Times New Roman,serif" font-size="24.00">10ms (100%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node"><title>N2</title>
<g id="a_node2"><a xlink:title="google.golang.org/grpc/internal/transport.(*http2Client).reader (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-1212 412,-1212 412,-1168 492,-1168 492,-1212"/>
<text text-anchor="middle" x="452" y="-1201.6" font-family="Times New Roman,serif" font-size="8.00">transport</text>
<text text-anchor="middle" x="452" y="-1192.6" font-family="Times New Roman,serif" font-size="8.00">(*http2Client)</text>
<text text-anchor="middle" x="452" y="-1183.6" font-family="Times New Roman,serif" font-size="8.00">reader</text>
<text text-anchor="middle" x="452" y="-1174.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node"><title>N3</title>
<g id="a_node3"><a xlink:title="golang.org/x/net/http2.(*Framer).ReadFrame (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-1099 412,-1099 412,-1055 492,-1055 492,-1099"/>
<text text-anchor="middle" x="452" y="-1088.6" font-family="Times New Roman,serif" font-size="8.00">http2</text>
<text text-anchor="middle" x="452" y="-1079.6" font-family="Times New Roman,serif" font-size="8.00">(*Framer)</text>
<text text-anchor="middle" x="452" y="-1070.6" font-family="Times New Roman,serif" font-size="8.00">ReadFrame</text>
<text text-anchor="middle" x="452" y="-1061.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N3 -->
<g id="edge11" class="edge"><title>N2&#45;&gt;N3</title>
<g id="a_edge11"><a xlink:title="google.golang.org/grpc/internal/transport.(*http2Client).reader &#45;&gt; golang.org/x/net/http2.(*Framer).ReadFrame (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-1167.86C452,-1151.27 452,-1127.93 452,-1109.2"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-1109.06 452,-1099.06 446.75,-1109.06 457.25,-1109.06"/>
</a>
</g>
<g id="a_edge11&#45;label"><a xlink:title="google.golang.org/grpc/internal/transport.(*http2Client).reader &#45;&gt; golang.org/x/net/http2.(*Framer).ReadFrame (10ms)">
<text text-anchor="middle" x="469" y="-1120.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node"><title>N4</title>
<g id="a_node4"><a xlink:title="golang.org/x/net/http2.(*Framer).readMetaFrame (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-1004 412,-1004 412,-960 492,-960 492,-1004"/>
<text text-anchor="middle" x="452" y="-993.6" font-family="Times New Roman,serif" font-size="8.00">http2</text>
<text text-anchor="middle" x="452" y="-984.6" font-family="Times New Roman,serif" font-size="8.00">(*Framer)</text>
<text text-anchor="middle" x="452" y="-975.6" font-family="Times New Roman,serif" font-size="8.00">readMetaFrame</text>
<text text-anchor="middle" x="452" y="-966.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N4 -->
<g id="edge1" class="edge"><title>N3&#45;&gt;N4</title>
<g id="a_edge1"><a xlink:title="golang.org/x/net/http2.(*Framer).ReadFrame &#45;&gt; golang.org/x/net/http2.(*Framer).readMetaFrame (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-1054.9C452,-1042.89 452,-1027.62 452,-1014.24"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-1014.02 452,-1004.02 446.75,-1014.02 457.25,-1014.02"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="golang.org/x/net/http2.(*Framer).ReadFrame &#45;&gt; golang.org/x/net/http2.(*Framer).readMetaFrame (10ms)">
<text text-anchor="middle" x="469" y="-1025.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node"><title>N5</title>
<g id="a_node5"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).Write (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-909 412,-909 412,-865 492,-865 492,-909"/>
<text text-anchor="middle" x="452" y="-898.6" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-889.6" font-family="Times New Roman,serif" font-size="8.00">(*Decoder)</text>
<text text-anchor="middle" x="452" y="-880.6" font-family="Times New Roman,serif" font-size="8.00">Write</text>
<text text-anchor="middle" x="452" y="-871.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N5 -->
<g id="edge2" class="edge"><title>N4&#45;&gt;N5</title>
<g id="a_edge2"><a xlink:title="golang.org/x/net/http2.(*Framer).readMetaFrame &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).Write (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-959.897C452,-947.887 452,-932.617 452,-919.242"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-919.02 452,-909.02 446.75,-919.02 457.25,-919.02"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="golang.org/x/net/http2.(*Framer).readMetaFrame &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).Write (10ms)">
<text text-anchor="middle" x="469" y="-930.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node"><title>N7</title>
<g id="a_node7"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).parseHeaderFieldRepr (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="498,-814 406,-814 406,-770 498,-770 498,-814"/>
<text text-anchor="middle" x="452" y="-803.6" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-794.6" font-family="Times New Roman,serif" font-size="8.00">(*Decoder)</text>
<text text-anchor="middle" x="452" y="-785.6" font-family="Times New Roman,serif" font-size="8.00">parseHeaderFieldRepr</text>
<text text-anchor="middle" x="452" y="-776.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N7 -->
<g id="edge3" class="edge"><title>N5&#45;&gt;N7</title>
<g id="a_edge3"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).Write &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).parseHeaderFieldRepr (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-864.897C452,-852.887 452,-837.617 452,-824.242"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-824.02 452,-814.02 446.75,-824.02 457.25,-824.02"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).Write &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).parseHeaderFieldRepr (10ms)">
<text text-anchor="middle" x="469" y="-835.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node"><title>N6</title>
<g id="a_node6"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).parseFieldLiteral (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-719 412,-719 412,-675 492,-675 492,-719"/>
<text text-anchor="middle" x="452" y="-708.6" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-699.6" font-family="Times New Roman,serif" font-size="8.00">(*Decoder)</text>
<text text-anchor="middle" x="452" y="-690.6" font-family="Times New Roman,serif" font-size="8.00">parseFieldLiteral</text>
<text text-anchor="middle" x="452" y="-681.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node"><title>N8</title>
<g id="a_node8"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).readString (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-624 412,-624 412,-580 492,-580 492,-624"/>
<text text-anchor="middle" x="452" y="-613.6" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-604.6" font-family="Times New Roman,serif" font-size="8.00">(*Decoder)</text>
<text text-anchor="middle" x="452" y="-595.6" font-family="Times New Roman,serif" font-size="8.00">readString</text>
<text text-anchor="middle" x="452" y="-586.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N8 -->
<g id="edge4" class="edge"><title>N6&#45;&gt;N8</title>
<g id="a_edge4"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).parseFieldLiteral &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).readString (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-674.897C452,-662.887 452,-647.617 452,-634.242"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-634.02 452,-624.02 446.75,-634.02 457.25,-634.02"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).parseFieldLiteral &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).readString (10ms)">
<text text-anchor="middle" x="469" y="-645.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N6 -->
<g id="edge5" class="edge"><title>N7&#45;&gt;N6</title>
<g id="a_edge5"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).parseHeaderFieldRepr &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).parseFieldLiteral (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-769.897C452,-757.887 452,-742.617 452,-729.242"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-729.02 452,-719.02 446.75,-729.02 457.25,-729.02"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).parseHeaderFieldRepr &#45;&gt; golang.org/x/net/http2/hpack.(*Decoder).parseFieldLiteral (10ms)">
<text text-anchor="middle" x="469" y="-740.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node12" class="node"><title>N12</title>
<g id="a_node12"><a xlink:title="golang.org/x/net/http2/hpack.huffmanDecode (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-529 412,-529 412,-493 492,-493 492,-529"/>
<text text-anchor="middle" x="452" y="-518.1" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-509.1" font-family="Times New Roman,serif" font-size="8.00">huffmanDecode</text>
<text text-anchor="middle" x="452" y="-500.1" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N12 -->
<g id="edge6" class="edge"><title>N8&#45;&gt;N12</title>
<g id="a_edge6"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).readString &#45;&gt; golang.org/x/net/http2/hpack.huffmanDecode (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-579.908C452,-567.78 452,-552.409 452,-539.36"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-539.066 452,-529.066 446.75,-539.066 457.25,-539.066"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.(*Decoder).readString &#45;&gt; golang.org/x/net/http2/hpack.huffmanDecode (10ms)">
<text text-anchor="middle" x="469" y="-550.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node9" class="node"><title>N9</title>
<g id="a_node9"><a xlink:title="golang.org/x/net/http2/hpack.addDecoderNode (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-173 412,-173 412,-137 492,-137 492,-173"/>
<text text-anchor="middle" x="452" y="-162.1" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-153.1" font-family="Times New Roman,serif" font-size="8.00">addDecoderNode</text>
<text text-anchor="middle" x="452" y="-144.1" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N1 -->
<g id="edge7" class="edge"><title>N9&#45;&gt;N1</title>
<g id="a_edge7"><a xlink:title="golang.org/x/net/http2/hpack.addDecoderNode &#45;&gt; runtime.newobject (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-136.813C452,-125.815 452,-110.909 452,-96.2617"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-96.2142 452,-86.2143 446.75,-96.2143 457.25,-96.2142"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.addDecoderNode &#45;&gt; runtime.newobject (10ms)">
<text text-anchor="middle" x="469" y="-107.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node10" class="node"><title>N10</title>
<g id="a_node10"><a xlink:title="golang.org/x/net/http2/hpack.buildRootHuffmanNode (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="501,-260 403,-260 403,-224 501,-224 501,-260"/>
<text text-anchor="middle" x="452" y="-249.1" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-240.1" font-family="Times New Roman,serif" font-size="8.00">buildRootHuffmanNode</text>
<text text-anchor="middle" x="452" y="-231.1" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N9 -->
<g id="edge8" class="edge"><title>N10&#45;&gt;N9</title>
<g id="a_edge8"><a xlink:title="golang.org/x/net/http2/hpack.buildRootHuffmanNode &#45;&gt; golang.org/x/net/http2/hpack.addDecoderNode (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-223.799C452,-212.163 452,-196.548 452,-183.237"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-183.175 452,-173.175 446.75,-183.175 457.25,-183.175"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.buildRootHuffmanNode &#45;&gt; golang.org/x/net/http2/hpack.addDecoderNode (10ms)">
<text text-anchor="middle" x="469" y="-194.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node11" class="node"><title>N11</title>
<g id="a_node11"><a xlink:title="golang.org/x/net/http2/hpack.getRootHuffmanNode (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="498.5,-442 405.5,-442 405.5,-406 498.5,-406 498.5,-442"/>
<text text-anchor="middle" x="452" y="-431.1" font-family="Times New Roman,serif" font-size="8.00">hpack</text>
<text text-anchor="middle" x="452" y="-422.1" font-family="Times New Roman,serif" font-size="8.00">getRootHuffmanNode</text>
<text text-anchor="middle" x="452" y="-413.1" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N13 -->
<g id="node13" class="node"><title>N13</title>
<g id="a_node13"><a xlink:title="sync.(*Once).Do (10ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="492,-355 412,-355 412,-311 492,-311 492,-355"/>
<text text-anchor="middle" x="452" y="-344.6" font-family="Times New Roman,serif" font-size="8.00">sync</text>
<text text-anchor="middle" x="452" y="-335.6" font-family="Times New Roman,serif" font-size="8.00">(*Once)</text>
<text text-anchor="middle" x="452" y="-326.6" font-family="Times New Roman,serif" font-size="8.00">Do</text>
<text text-anchor="middle" x="452" y="-317.6" font-family="Times New Roman,serif" font-size="8.00">0 of 10ms (100%)</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N13 -->
<g id="edge9" class="edge"><title>N11&#45;&gt;N13</title>
<g id="a_edge9"><a xlink:title="golang.org/x/net/http2/hpack.getRootHuffmanNode &#45;&gt; sync.(*Once).Do (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-405.84C452,-394.441 452,-379.134 452,-365.578"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-365.19 452,-355.191 446.75,-365.191 457.25,-365.19"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.getRootHuffmanNode &#45;&gt; sync.(*Once).Do (10ms)">
<text text-anchor="middle" x="469" y="-376.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N11 -->
<g id="edge10" class="edge"><title>N12&#45;&gt;N11</title>
<g id="a_edge10"><a xlink:title="golang.org/x/net/http2/hpack.huffmanDecode &#45;&gt; golang.org/x/net/http2/hpack.getRootHuffmanNode (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-492.799C452,-481.163 452,-465.548 452,-452.237"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-452.175 452,-442.175 446.75,-452.175 457.25,-452.175"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="golang.org/x/net/http2/hpack.huffmanDecode &#45;&gt; golang.org/x/net/http2/hpack.getRootHuffmanNode (10ms)">
<text text-anchor="middle" x="469" y="-463.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N13&#45;&gt;N10 -->
<g id="edge12" class="edge"><title>N13&#45;&gt;N10</title>
<g id="a_edge12"><a xlink:title="sync.(*Once).Do &#45;&gt; golang.org/x/net/http2/hpack.buildRootHuffmanNode (10ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M452,-310.908C452,-298.78 452,-283.409 452,-270.36"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="457.25,-270.066 452,-260.066 446.75,-270.066 457.25,-270.066"/>
</a>
</g>
<g id="a_edge12&#45;label"><a xlink:title="sync.(*Once).Do &#45;&gt; golang.org/x/net/http2/hpack.buildRootHuffmanNode (10ms)">
<text text-anchor="middle" x="469" y="-281.8" font-family="Times New Roman,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
</g>
</g></svg>
